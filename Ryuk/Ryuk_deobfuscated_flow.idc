// Tested on a563c50c5fa0fd541248acaf72cc4e7d
// In case you want to export to an EXE, for debug purposes,
// then the jumps need to ignore one additional instruction (not fixed here)
#define UNLOADED_FILE   1
#include <idc.idc>

static main(void)
{
        // set 'loading idc file' mode
        set_inf_attr(INF_GENFLAGS, INFFL_LOADIDC|get_inf_attr(INF_GENFLAGS));
        GenInfo();            // various settings
        Segments();           // segmentation
        Enums();              // enumerations
        Structures();         // structure types
        ApplyStrucTInfos();   // structure type infos
        Patches();            // manual patches
        SegRegs();            // segment register values
        Bytes();              // individual bytes (code,data)
        Functions();          // function definitions
        // clear 'loading idc file' mode
        set_inf_attr(INF_GENFLAGS, ~INFFL_LOADIDC&get_inf_attr(INF_GENFLAGS));
}

//------------------------------------------------------------------------
// General information

static GenInfo(void) {

        delete_all_segments();    // purge database
	set_processor_type("metapc", SETPROC_USER);
	set_inf_attr(INF_COMPILER, 1);
	set_inf_attr(INF_STRLIT_BREAK, 0xA);
	set_flag(INF_CMTFLAG, SW_ALLCMT, 0);
	set_flag(INF_OUTFLAGS, OFLG_SHOW_VOID, 0);
	set_inf_attr(INF_XREFNUM, 2);
	set_flag(INF_OUTFLAGS, OFLG_SHOW_AUTO, 1);
	set_inf_attr(INF_INDENT, 16);
	set_inf_attr(INF_COMMENT, 40);
	set_inf_attr(INF_MAXREF, 0x10);
	add_default_til("mssdk_win7");
}

//------------------------------------------------------------------------
// Information about segmentation

static Segments(void) {
	set_selector(0X1,0);
	set_selector(0X2,0);
	set_selector(0X3,0);
	set_selector(0X4,0);
	set_selector(0X5,0);

	add_segm_ex(0X35001000,0X35015000,0X1,1,3,2,ADDSEG_NOSREG);
	SegRename(0X35001000,".text");
	SegClass (0X35001000,"CODE");
	SegDefReg(0x35001000,"es",0x0);
	SegDefReg(0x35001000,"ss",0x0);
	SegDefReg(0x35001000,"ds",0x3);
	SegDefReg(0x35001000,"fs",0x0);
	SegDefReg(0x35001000,"gs",0x0);
	set_segm_type(0X35001000,2);
	add_segm_ex(0X35015000,0X35015138,0X5,1,3,2,ADDSEG_NOSREG);
	SegRename(0X35015000,".idata");
	SegClass (0X35015000,"DATA");
	SegDefReg(0x35015000,"es",0x0);
	SegDefReg(0x35015000,"ss",0x0);
	SegDefReg(0x35015000,"ds",0x3);
	SegDefReg(0x35015000,"fs",0x0);
	SegDefReg(0x35015000,"gs",0x0);
	set_segm_type(0X35015000,1);
	add_segm_ex(0X35015138,0X3501B000,0X2,1,3,2,ADDSEG_NOSREG);
	SegRename(0X35015138,".rdata");
	SegClass (0X35015138,"DATA");
	SegDefReg(0x35015138,"es",0x0);
	SegDefReg(0x35015138,"ss",0x0);
	SegDefReg(0x35015138,"ds",0x3);
	SegDefReg(0x35015138,"fs",0x0);
	SegDefReg(0x35015138,"gs",0x0);
	set_segm_type(0X35015138,3);
	add_segm_ex(0X3501B000,0X35028000,0X3,1,3,2,ADDSEG_NOSREG);
	SegRename(0X3501B000,".data");
	SegClass (0X3501B000,"DATA");
	SegDefReg(0x3501B000,"es",0x0);
	SegDefReg(0x3501B000,"ss",0x0);
	SegDefReg(0x3501B000,"ds",0x3);
	SegDefReg(0x3501B000,"fs",0x0);
	SegDefReg(0x3501B000,"gs",0x0);
	set_segm_type(0X3501B000,3);
	add_segm_ex(0X35028000,0X35029000,0X4,1,3,2,ADDSEG_NOSREG);
	SegRename(0X35028000,".gfids");
	SegClass (0X35028000,"DATA");
	SegDefReg(0x35028000,"es",0x0);
	SegDefReg(0x35028000,"ss",0x0);
	SegDefReg(0x35028000,"ds",0x3);
	SegDefReg(0x35028000,"fs",0x0);
	SegDefReg(0x35028000,"gs",0x0);
	set_segm_type(0X35028000,3);
	set_inf_attr(INF_LOW_OFF, 0x35001000);
	set_inf_attr(INF_HIGH_OFF, 0x35029000);
}

static Enums_0(id) {

	id = add_enum(-1,"_crt_argv_mode",0x1100000);
	add_enum_member(id,"_crt_argv_no_arguments",	0,	-1);
	add_enum_member(id,"_crt_argv_unexpanded_arguments",	0X1,	-1);
	add_enum_member(id,"_crt_argv_expanded_arguments",	0X2,	-1);
	id = add_enum(-1,"_crt_exit_cleanup_mode",0x1100000);
	add_enum_member(id,"_crt_exit_full_cleanup",	0,	-1);
	add_enum_member(id,"_crt_exit_quick_cleanup",	0X1,	-1);
	add_enum_member(id,"_crt_exit_no_cleanup",	0X2,	-1);
	id = add_enum(-1,"_crt_exit_return_mode",0x1100000);
	add_enum_member(id,"_crt_exit_terminate_process",	0,	-1);
	add_enum_member(id,"_crt_exit_return_to_caller",	0X1,	-1);
	return id;
}

//------------------------------------------------------------------------
// Information about enum types

static Enums(void) {
        auto id;
        begin_type_updating(UTP_ENUM);
	id = Enums_0(id);
        end_type_updating(UTP_ENUM);
}

static ApplyStrucTInfos_0(void) {
        auto id;
	id = get_struc_id("_EH4_SCOPETABLE");
	SetType(get_member_id(id, 0x0), "DWORD");
	SetType(get_member_id(id, 0x4), "DWORD");
	SetType(get_member_id(id, 0x8), "DWORD");
	SetType(get_member_id(id, 0xC), "DWORD");
	SetType(get_member_id(id, 0x10), "struct _EH4_SCOPETABLE_RECORD[]");
	id = get_struc_id("_EH4_SCOPETABLE_RECORD");
	SetType(get_member_id(id, 0x0), "int");
	SetType(get_member_id(id, 0x4), "void *");
	SetType(get_member_id(id, 0x8), "void *");
	id = get_struc_id("CPPEH_RECORD");
	SetType(get_member_id(id, 0x0), "DWORD");
	SetType(get_member_id(id, 0x4), "EXCEPTION_POINTERS *");
	SetType(get_member_id(id, 0x8), "struct _EH3_EXCEPTION_REGISTRATION");
	id = get_struc_id("_EH3_EXCEPTION_REGISTRATION");
	SetType(get_member_id(id, 0x0), "struct _EH3_EXCEPTION_REGISTRATION *");
	SetType(get_member_id(id, 0x4), "PVOID");
	SetType(get_member_id(id, 0x8), "PSCOPETABLE_ENTRY");
	SetType(get_member_id(id, 0xC), "DWORD");
	id = get_struc_id("_SYSTEMTIME");
	SetType(get_member_id(id, 0x0), "WORD");
	SetType(get_member_id(id, 0x2), "WORD");
	SetType(get_member_id(id, 0x4), "WORD");
	SetType(get_member_id(id, 0x6), "WORD");
	SetType(get_member_id(id, 0x8), "WORD");
	SetType(get_member_id(id, 0xA), "WORD");
	SetType(get_member_id(id, 0xC), "WORD");
	SetType(get_member_id(id, 0xE), "WORD");
	id = get_struc_id("_FILETIME");
	SetType(get_member_id(id, 0x0), "DWORD");
	SetType(get_member_id(id, 0x4), "DWORD");
	id = get_struc_id("LARGE_INTEGER");
	SetType(get_member_id(id, 0x0), "_LARGE_INTEGER::$837407842DC9087486FDFA5FEB63B74E");
	SetType(get_member_id(id, 0x1), "_LARGE_INTEGER::$837407842DC9087486FDFA5FEB63B74E");
	SetType(get_member_id(id, 0x2), "LONGLONG");
	id = get_struc_id("_LARGE_INTEGER::$837407842DC9087486FDFA5FEB63B74E");
	SetType(get_member_id(id, 0x0), "DWORD");
	SetType(get_member_id(id, 0x4), "LONG");
	id = get_struc_id("_EXCEPTION_POINTERS");
	SetType(get_member_id(id, 0x0), "PEXCEPTION_RECORD");
	SetType(get_member_id(id, 0x4), "PCONTEXT");
	id = get_struc_id("_STARTUPINFOW");
	SetType(get_member_id(id, 0x0), "DWORD");
	SetType(get_member_id(id, 0x4), "LPWSTR");
	SetType(get_member_id(id, 0x8), "LPWSTR");
	SetType(get_member_id(id, 0xC), "LPWSTR");
	SetType(get_member_id(id, 0x10), "DWORD");
	SetType(get_member_id(id, 0x14), "DWORD");
	SetType(get_member_id(id, 0x18), "DWORD");
	SetType(get_member_id(id, 0x1C), "DWORD");
	SetType(get_member_id(id, 0x20), "DWORD");
	SetType(get_member_id(id, 0x24), "DWORD");
	SetType(get_member_id(id, 0x28), "DWORD");
	SetType(get_member_id(id, 0x2C), "DWORD");
	SetType(get_member_id(id, 0x30), "WORD");
	SetType(get_member_id(id, 0x32), "WORD");
	SetType(get_member_id(id, 0x34), "LPBYTE");
	SetType(get_member_id(id, 0x38), "HANDLE");
	SetType(get_member_id(id, 0x3C), "HANDLE");
	SetType(get_member_id(id, 0x40), "HANDLE");
	id = get_struc_id("_cpinfo");
	SetType(get_member_id(id, 0x0), "UINT");
	SetType(get_member_id(id, 0x4), "BYTE[2]");
	SetType(get_member_id(id, 0x6), "BYTE[12]");
	id = get_struc_id("_SLIST_HEADER");
	SetType(get_member_id(id, 0x0), "ULONGLONG");
	SetType(get_member_id(id, 0x1), "_SLIST_HEADER::$04C3B4B3818F1694974352AE64BF5082");
	id = get_struc_id("_SLIST_HEADER::$04C3B4B3818F1694974352AE64BF5082");
	SetType(get_member_id(id, 0x0), "SLIST_ENTRY");
	SetType(get_member_id(id, 0x4), "WORD");
	SetType(get_member_id(id, 0x6), "WORD");
	id = get_struc_id("SLIST_ENTRY");
	SetType(get_member_id(id, 0x0), "_SINGLE_LIST_ENTRY *");
	id = get_struc_id("__crt_locale_pointers");
	SetType(get_member_id(id, 0x0), "struct __crt_locale_data *");
	SetType(get_member_id(id, 0x4), "struct __crt_multibyte_data *");
	id = get_struc_id("_onexit_table_t");
	SetType(get_member_id(id, 0x0), "_PVFV *");
	SetType(get_member_id(id, 0x4), "_PVFV *");
	SetType(get_member_id(id, 0x8), "_PVFV *");
	id = get_struc_id("_RTL_CRITICAL_SECTION");
	SetType(get_member_id(id, 0x0), "PRTL_CRITICAL_SECTION_DEBUG");
	SetType(get_member_id(id, 0x4), "LONG");
	SetType(get_member_id(id, 0x8), "LONG");
	SetType(get_member_id(id, 0xC), "HANDLE");
	SetType(get_member_id(id, 0x10), "HANDLE");
	SetType(get_member_id(id, 0x14), "ULONG_PTR");
	id = get_struc_id("sockaddr");
	SetType(get_member_id(id, 0x0), "ADDRESS_FAMILY");
	SetType(get_member_id(id, 0x2), "CHAR[14]");
	id = get_struc_id("_PEB");
	SetType(get_member_id(id, 0x0), "uint8_t");
	SetType(get_member_id(id, 0x1), "uint8_t");
	SetType(get_member_id(id, 0x2), "uint8_t");
	SetType(get_member_id(id, 0x3), "uint8_t");
	SetType(get_member_id(id, 0x4), "__int8");
	SetType(get_member_id(id, 0x8), "void *");
	SetType(get_member_id(id, 0xC), "void *");
	SetType(get_member_id(id, 0x10), "_PEB_LDR_DATA *");
	SetType(get_member_id(id, 0x14), "_RTL_USER_PROCESS_PARAMETERS *");
	SetType(get_member_id(id, 0x18), "void *");
	SetType(get_member_id(id, 0x1C), "void *");
	SetType(get_member_id(id, 0x20), "_RTL_CRITICAL_SECTION *");
	SetType(get_member_id(id, 0x24), "void *");
	SetType(get_member_id(id, 0x28), "void *");
	SetType(get_member_id(id, 0x2C), "unsigned int");
	SetType(get_member_id(id, 0x30), "__int32");
	SetType(get_member_id(id, 0x34), "_PEB::$6F1CA9A36B21C857AE5467E073440320");
	SetType(get_member_id(id, 0x38), "unsigned int[1]");
	SetType(get_member_id(id, 0x3C), "unsigned int");
	SetType(get_member_id(id, 0x40), "void *");
	SetType(get_member_id(id, 0x44), "unsigned int");
	SetType(get_member_id(id, 0x48), "void *");
	SetType(get_member_id(id, 0x4C), "unsigned int[2]");
	SetType(get_member_id(id, 0x54), "void *");
	SetType(get_member_id(id, 0x58), "void *");
	SetType(get_member_id(id, 0x5C), "void **");
	SetType(get_member_id(id, 0x60), "void *");
	SetType(get_member_id(id, 0x64), "void *");
	SetType(get_member_id(id, 0x68), "void *");
	SetType(get_member_id(id, 0x6C), "unsigned int");
	SetType(get_member_id(id, 0x70), "unsigned int");
	SetType(get_member_id(id, 0x78), "_LARGE_INTEGER");
	SetType(get_member_id(id, 0x80), "unsigned int");
	SetType(get_member_id(id, 0x84), "unsigned int");
	SetType(get_member_id(id, 0x88), "unsigned int");
	SetType(get_member_id(id, 0x8C), "unsigned int");
	SetType(get_member_id(id, 0x90), "unsigned int");
	SetType(get_member_id(id, 0x94), "unsigned int");
	SetType(get_member_id(id, 0x98), "void **");
	SetType(get_member_id(id, 0x9C), "void *");
	SetType(get_member_id(id, 0xA0), "void *");
	SetType(get_member_id(id, 0xA4), "unsigned int");
	SetType(get_member_id(id, 0xA8), "_RTL_CRITICAL_SECTION *");
	SetType(get_member_id(id, 0xAC), "unsigned int");
	SetType(get_member_id(id, 0xB0), "unsigned int");
	SetType(get_member_id(id, 0xB4), "uint16_t");
	SetType(get_member_id(id, 0xB6), "uint16_t");
	SetType(get_member_id(id, 0xB8), "unsigned int");
	SetType(get_member_id(id, 0xBC), "unsigned int");
	SetType(get_member_id(id, 0xC0), "unsigned int");
	SetType(get_member_id(id, 0xC4), "unsigned int");
	SetType(get_member_id(id, 0xC8), "unsigned int");
	SetType(get_member_id(id, 0xCC), "unsigned int[34]");
	SetType(get_member_id(id, 0x154), "void *");
	SetType(get_member_id(id, 0x158), "void *");
	SetType(get_member_id(id, 0x15C), "unsigned int[32]");
	SetType(get_member_id(id, 0x1DC), "unsigned int");
	SetType(get_member_id(id, 0x1E0), "_ULARGE_INTEGER");
	SetType(get_member_id(id, 0x1E8), "_ULARGE_INTEGER");
	SetType(get_member_id(id, 0x1F0), "void *");
	SetType(get_member_id(id, 0x1F4), "void *");
	SetType(get_member_id(id, 0x1F8), "_UNICODE_STRING");
	SetType(get_member_id(id, 0x200), "const struct _ACTIVATION_CONTEXT_DATA *");
	SetType(get_member_id(id, 0x204), "struct _ASSEMBLY_STORAGE_MAP *");
	SetType(get_member_id(id, 0x208), "const struct _ACTIVATION_CONTEXT_DATA *");
	SetType(get_member_id(id, 0x20C), "struct _ASSEMBLY_STORAGE_MAP *");
	SetType(get_member_id(id, 0x210), "unsigned int");
	SetType(get_member_id(id, 0x214), "struct _FLS_CALLBACK_INFO *");
	SetType(get_member_id(id, 0x218), "_LIST_ENTRY");
	SetType(get_member_id(id, 0x220), "void *");
	SetType(get_member_id(id, 0x224), "unsigned int[4]");
	SetType(get_member_id(id, 0x234), "unsigned int");
	SetType(get_member_id(id, 0x238), "void *");
	SetType(get_member_id(id, 0x23C), "void *");
	SetType(get_member_id(id, 0x240), "void *");
	SetType(get_member_id(id, 0x244), "void *");
	SetType(get_member_id(id, 0x248), "unsigned int");
	SetType(get_member_id(id, 0x24C), "__int32");
	id = get_struc_id("_PEB::$6F1CA9A36B21C857AE5467E073440320");
	SetType(get_member_id(id, 0x0), "void *");
	SetType(get_member_id(id, 0x1), "void *");
	id = get_struc_id("_LARGE_INTEGER");
	SetType(get_member_id(id, 0x0), "_LARGE_INTEGER::$837407842DC9087486FDFA5FEB63B74E");
	SetType(get_member_id(id, 0x1), "_LARGE_INTEGER::$837407842DC9087486FDFA5FEB63B74E");
	SetType(get_member_id(id, 0x2), "LONGLONG");
	id = get_struc_id("_ULARGE_INTEGER");
	SetType(get_member_id(id, 0x0), "_ULARGE_INTEGER::$0354AA9C204208F00D0965D07BBE7FAC");
	SetType(get_member_id(id, 0x1), "_ULARGE_INTEGER::$0354AA9C204208F00D0965D07BBE7FAC");
	SetType(get_member_id(id, 0x2), "ULONGLONG");
	id = get_struc_id("_ULARGE_INTEGER::$0354AA9C204208F00D0965D07BBE7FAC");
	SetType(get_member_id(id, 0x0), "DWORD");
	SetType(get_member_id(id, 0x4), "DWORD");
	id = get_struc_id("_UNICODE_STRING");
	SetType(get_member_id(id, 0x0), "unsigned __int16");
	SetType(get_member_id(id, 0x2), "unsigned __int16");
	SetType(get_member_id(id, 0x4), "wchar_t *");
	id = get_struc_id("_LIST_ENTRY");
	SetType(get_member_id(id, 0x0), "_LIST_ENTRY *");
	SetType(get_member_id(id, 0x4), "_LIST_ENTRY *");
	return id;
}

//------------------------------------------------------------------------
// Information about type information for structure members

static ApplyStrucTInfos() {
	ApplyStrucTInfos_0();
}

static Structures_0(id) {
        auto mid;

	id = add_struc(-1,"_EH4_SCOPETABLE",0);
	id = add_struc(-1,"_EH4_SCOPETABLE_RECORD",0);
	id = add_struc(-1,"CPPEH_RECORD",0);
	id = add_struc(-1,"_EH3_EXCEPTION_REGISTRATION",0);
	id = add_struc(-1,"_SYSTEMTIME",0);
	id = add_struc(-1,"_FILETIME",0);
	id = add_struc(-1,"LARGE_INTEGER",1);
	id = add_struc(-1,"_LARGE_INTEGER::$837407842DC9087486FDFA5FEB63B74E",0);
	id = add_struc(-1,"_EXCEPTION_POINTERS",0);
	id = add_struc(-1,"_STARTUPINFOW",0);
	id = add_struc(-1,"_cpinfo",0);
	id = add_struc(-1,"_SLIST_HEADER",1);
	id = add_struc(-1,"_SLIST_HEADER::$04C3B4B3818F1694974352AE64BF5082",0);
	id = add_struc(-1,"SLIST_ENTRY",0);
	id = add_struc(-1,"__crt_locale_pointers",0);
	id = add_struc(-1,"_onexit_table_t",0);
	id = add_struc(-1,"_RTL_CRITICAL_SECTION",0);
	id = add_struc(-1,"sockaddr",0);
	id = add_struc(-1,"_PEB",0);
	id = add_struc(-1,"_PEB::$6F1CA9A36B21C857AE5467E073440320",1);
	id = add_struc(-1,"_LARGE_INTEGER",1);
	id = add_struc(-1,"_ULARGE_INTEGER",1);
	id = add_struc(-1,"_ULARGE_INTEGER::$0354AA9C204208F00D0965D07BBE7FAC",0);
	id = add_struc(-1,"_UNICODE_STRING",0);
	id = add_struc(-1,"_LIST_ENTRY",0);
	
	id = get_struc_id("_EH4_SCOPETABLE_RECORD");
	mid = add_struc_member(id,"EnclosingLevel",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"FilterFunc",	0X4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"HandlerFunc",	0X8,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_struc_align(id,2);
	
	id = get_struc_id("_EH4_SCOPETABLE");
	mid = add_struc_member(id,"GSCookieOffset",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"GSCookieXOROffset",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"EHCookieOffset",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"EHCookieXOROffset",	0XC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"ScopeRecord",	0X10,	0x60000400,	get_struc_id("_EH4_SCOPETABLE_RECORD"),	0);
	set_struc_align(id,2);
	
	id = get_struc_id("_EH3_EXCEPTION_REGISTRATION");
	mid = add_struc_member(id,"Next",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"ExceptionHandler",	0X4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"ScopeTable",	0X8,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"TryLevel",	0XC,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("CPPEH_RECORD");
	mid = add_struc_member(id,"old_esp",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"exc_ptr",	0X4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"registration",	0X8,	0x60000400,	get_struc_id("_EH3_EXCEPTION_REGISTRATION"),	16);
	set_struc_align(id,2);
	
	id = get_struc_id("_SYSTEMTIME");
	mid = add_struc_member(id,"wYear",	0,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"wMonth",	0X2,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"wDayOfWeek",	0X4,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"wDay",	0X6,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"wHour",	0X8,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"wMinute",	0XA,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"wSecond",	0XC,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"wMilliseconds",	0XE,	0x10000400,	-1,	2);
	set_struc_align(id,1);
	
	id = get_struc_id("_FILETIME");
	mid = add_struc_member(id,"dwLowDateTime",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwHighDateTime",	0X4,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("_LARGE_INTEGER::$837407842DC9087486FDFA5FEB63B74E");
	mid = add_struc_member(id,"LowPart",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"HighPart",	0X4,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("LARGE_INTEGER");
	mid = add_struc_member(id,"anonymous_0",	0,	0x60000400,	get_struc_id("_LARGE_INTEGER::$837407842DC9087486FDFA5FEB63B74E"),	8);
	mid = add_struc_member(id,"u",	0,	0x60000400,	get_struc_id("_LARGE_INTEGER::$837407842DC9087486FDFA5FEB63B74E"),	8);
	mid = add_struc_member(id,"QuadPart",	0,	0x30000400,	-1,	8);
	set_struc_align(id,3);
	
	id = get_struc_id("_EXCEPTION_POINTERS");
	mid = add_struc_member(id,"ExceptionRecord",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"ContextRecord",	0X4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_struc_align(id,2);
	
	id = get_struc_id("_STARTUPINFOW");
	mid = add_struc_member(id,"cb",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"lpReserved",	0X4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"lpDesktop",	0X8,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"lpTitle",	0XC,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"dwX",	0X10,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwY",	0X14,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwXSize",	0X18,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwYSize",	0X1C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwXCountChars",	0X20,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwYCountChars",	0X24,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwFillAttribute",	0X28,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwFlags",	0X2C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"wShowWindow",	0X30,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"cbReserved2",	0X32,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"lpReserved2",	0X34,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"hStdInput",	0X38,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"hStdOutput",	0X3C,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"hStdError",	0X40,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_struc_align(id,2);
	
	id = get_struc_id("_cpinfo");
	mid = add_struc_member(id,"MaxCharSize",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"DefaultChar",	0X4,	0x000400,	-1,	2);
	mid = add_struc_member(id,"LeadByte",	0X6,	0x000400,	-1,	12);
	set_struc_align(id,2);
	
	id = get_struc_id("SLIST_ENTRY");
	mid = add_struc_member(id,"Next",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_struc_align(id,2);
	
	id = get_struc_id("_SLIST_HEADER::$04C3B4B3818F1694974352AE64BF5082");
	mid = add_struc_member(id,"Next",	0,	0x60000400,	get_struc_id("SLIST_ENTRY"),	4);
	mid = add_struc_member(id,"Depth",	0X4,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"CpuId",	0X6,	0x10000400,	-1,	2);
	set_struc_align(id,2);
	
	id = get_struc_id("_SLIST_HEADER");
	mid = add_struc_member(id,"Alignment",	0,	0x30000400,	-1,	8);
	mid = add_struc_member(id,"anonymous_0",	0,	0x60000400,	get_struc_id("_SLIST_HEADER::$04C3B4B3818F1694974352AE64BF5082"),	8);
	set_struc_align(id,3);
	
	id = get_struc_id("__crt_locale_pointers");
	mid = add_struc_member(id,"locinfo",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"mbcinfo",	0X4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_struc_align(id,2);
	
	id = get_struc_id("_onexit_table_t");
	mid = add_struc_member(id,"_first",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"_last",	0X4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"_end",	0X8,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_struc_align(id,2);
	
	id = get_struc_id("_RTL_CRITICAL_SECTION");
	mid = add_struc_member(id,"DebugInfo",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"LockCount",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"RecursionCount",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"OwningThread",	0XC,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"LockSemaphore",	0X10,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"SpinCount",	0X14,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("sockaddr");
	mid = add_struc_member(id,"sa_family",	0,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"sa_data",	0X2,	0x000400,	-1,	14);
	set_struc_align(id,1);
	
	id = get_struc_id("_PEB::$6F1CA9A36B21C857AE5467E073440320");
	mid = add_struc_member(id,"KernelCallbackTable",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"UserSharedInfoPtr",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_struc_align(id,2);
	
	id = get_struc_id("_LARGE_INTEGER");
	mid = add_struc_member(id,"anonymous_0",	0,	0x60000400,	get_struc_id("_LARGE_INTEGER::$837407842DC9087486FDFA5FEB63B74E"),	8);
	mid = add_struc_member(id,"u",	0,	0x60000400,	get_struc_id("_LARGE_INTEGER::$837407842DC9087486FDFA5FEB63B74E"),	8);
	mid = add_struc_member(id,"QuadPart",	0,	0x30000400,	-1,	8);
	set_struc_align(id,3);
	
	id = get_struc_id("_ULARGE_INTEGER::$0354AA9C204208F00D0965D07BBE7FAC");
	mid = add_struc_member(id,"LowPart",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"HighPart",	0X4,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("_ULARGE_INTEGER");
	mid = add_struc_member(id,"anonymous_0",	0,	0x60000400,	get_struc_id("_ULARGE_INTEGER::$0354AA9C204208F00D0965D07BBE7FAC"),	8);
	mid = add_struc_member(id,"u",	0,	0x60000400,	get_struc_id("_ULARGE_INTEGER::$0354AA9C204208F00D0965D07BBE7FAC"),	8);
	mid = add_struc_member(id,"QuadPart",	0,	0x30000400,	-1,	8);
	set_struc_align(id,3);
	
	id = get_struc_id("_UNICODE_STRING");
	mid = add_struc_member(id,"Length",	0,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"MaximumLength",	0X2,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"Buffer",	0X4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_struc_align(id,2);
	
	id = get_struc_id("_LIST_ENTRY");
	mid = add_struc_member(id,"Flink",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"Blink",	0X4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_struc_align(id,2);
	
	id = get_struc_id("_PEB");
	mid = add_struc_member(id,"InheritedAddressSpace",	0,	0x000400,	-1,	1);
	mid = add_struc_member(id,"ReadImageFileExecOptions",	0X1,	0x000400,	-1,	1);
	mid = add_struc_member(id,"BeingDebugged",	0X2,	0x000400,	-1,	1);
	mid = add_struc_member(id,"BitField",	0X3,	0x000400,	-1,	1);
	mid = add_struc_member(id,"_bf_4",	0X4,	0x000400,	-1,	1);
	mid = add_struc_member(id,"Mutant",	0X8,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"ImageBaseAddress",	0XC,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"Ldr",	0X10,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"ProcessParameters",	0X14,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"SubSystemData",	0X18,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"ProcessHeap",	0X1C,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"FastPebLock",	0X20,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"AtlThunkSListPtr",	0X24,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"IFEOKey",	0X28,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"CrossProcessFlags",	0X2C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"_bf_30",	0X30,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"anonymous_0",	0X34,	0x60000400,	get_struc_id("_PEB::$6F1CA9A36B21C857AE5467E073440320"),	4);
	mid = add_struc_member(id,"SystemReserved",	0X38,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"AtlThunkSListPtr32",	0X3C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"ApiSetMap",	0X40,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"TlsExpansionCounter",	0X44,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"TlsBitmap",	0X48,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"TlsBitmapBits",	0X4C,	0x20000400,	-1,	8);
	mid = add_struc_member(id,"ReadOnlySharedMemoryBase",	0X54,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"HotpatchInformation",	0X58,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"ReadOnlyStaticServerData",	0X5C,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"AnsiCodePageData",	0X60,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"OemCodePageData",	0X64,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"UnicodeCaseTableData",	0X68,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"NumberOfProcessors",	0X6C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"NtGlobalFlag",	0X70,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"CriticalSectionTimeout",	0X78,	0x60000400,	get_struc_id("_LARGE_INTEGER"),	8);
	mid = add_struc_member(id,"HeapSegmentReserve",	0X80,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"HeapSegmentCommit",	0X84,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"HeapDeCommitTotalFreeThreshold",	0X88,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"HeapDeCommitFreeBlockThreshold",	0X8C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"NumberOfHeaps",	0X90,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"MaximumNumberOfHeaps",	0X94,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"ProcessHeaps",	0X98,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"GdiSharedHandleTable",	0X9C,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"ProcessStarterHelper",	0XA0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"GdiDCAttributeList",	0XA4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"LoaderLock",	0XA8,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"OSMajorVersion",	0XAC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"OSMinorVersion",	0XB0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"OSBuildNumber",	0XB4,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"OSCSDVersion",	0XB6,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"OSPlatformId",	0XB8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"ImageSubsystem",	0XBC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"ImageSubsystemMajorVersion",	0XC0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"ImageSubsystemMinorVersion",	0XC4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"ActiveProcessAffinityMask",	0XC8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"GdiHandleBuffer",	0XCC,	0x20000400,	-1,	136);
	mid = add_struc_member(id,"PostProcessInitRoutine",	0X154,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"TlsExpansionBitmap",	0X158,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"TlsExpansionBitmapBits",	0X15C,	0x20000400,	-1,	128);
	mid = add_struc_member(id,"SessionId",	0X1DC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"AppCompatFlags",	0X1E0,	0x60000400,	get_struc_id("_ULARGE_INTEGER"),	8);
	mid = add_struc_member(id,"AppCompatFlagsUser",	0X1E8,	0x60000400,	get_struc_id("_ULARGE_INTEGER"),	8);
	mid = add_struc_member(id,"pShimData",	0X1F0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"AppCompatInfo",	0X1F4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"CSDVersion",	0X1F8,	0x60000400,	get_struc_id("_UNICODE_STRING"),	8);
	mid = add_struc_member(id,"ActivationContextData",	0X200,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"ProcessAssemblyStorageMap",	0X204,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"SystemDefaultActivationContextData",	0X208,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"SystemAssemblyStorageMap",	0X20C,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"MinimumStackCommit",	0X210,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"FlsCallback",	0X214,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"FlsListHead",	0X218,	0x60000400,	get_struc_id("_LIST_ENTRY"),	8);
	mid = add_struc_member(id,"FlsBitmap",	0X220,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"FlsBitmapBits",	0X224,	0x20000400,	-1,	16);
	mid = add_struc_member(id,"FlsHighIndex",	0X234,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"WerRegistrationData",	0X238,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"WerShipAssertPtr",	0X23C,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"pContextData",	0X240,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"pImageHeaderHash",	0X244,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"TracingFlags",	0X248,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"_bf_24c",	0X24C,	0x20000400,	-1,	4);
	set_struc_align(id,3);
	return id;
}

//------------------------------------------------------------------------
// Information about structure types

static Structures(void) {
        auto id;
        begin_type_updating(UTP_STRUCT);
	id = Structures_0(id);
	patch_byte	(0X3500194F,	0XEB);
	patch_byte	(0X35001950,	0XF);
	patch_byte	(0X35001951,	0X90);
	patch_byte	(0X35001952,	0X90);
	patch_byte	(0X35001953,	0X90);
	patch_byte	(0X35001954,	0X90);
	patch_byte	(0X35001955,	0X90);
	patch_byte	(0X35001956,	0X90);
	patch_byte	(0X35001957,	0X90);
	patch_byte	(0X35001958,	0X90);
	patch_byte	(0X35001959,	0X90);
	patch_byte	(0X3500195A,	0X90);
	patch_byte	(0X3500195B,	0X90);
	patch_byte	(0X3500195C,	0X90);
	patch_byte	(0X3500195D,	0X90);
	patch_byte	(0X3500195E,	0X90);
	patch_byte	(0X3500195F,	0X90);
	patch_byte	(0X350019C4,	0X90);
	patch_byte	(0X350019CD,	0X90);
	patch_byte	(0X350019D4,	0X90);
	patch_byte	(0X350019D9,	0X90);
	patch_byte	(0X350019ED,	0X90);
	patch_byte	(0X350019F3,	0X90);
	patch_byte	(0X35001A03,	0X90);
	patch_byte	(0X35001A04,	0X90);
	patch_byte	(0X35001A05,	0X90);
	patch_byte	(0X35001A06,	0X90);
	patch_byte	(0X35001A07,	0X90);
	patch_byte	(0X35001A08,	0X90);
	patch_byte	(0X35001A0E,	0X90);
	patch_byte	(0X35001A0F,	0X90);
	patch_byte	(0X35001A10,	0X90);
	patch_byte	(0X35001A11,	0X90);
	patch_byte	(0X35001A28,	0X90);
	patch_byte	(0X35001A2D,	0X90);
	patch_byte	(0X35001A64,	0X90);
	patch_byte	(0X35001A6A,	0X90);
	patch_byte	(0X35001A6B,	0X90);
	patch_byte	(0X35001A6C,	0X90);
	patch_byte	(0X35001A6D,	0X90);
	patch_byte	(0X35001A6E,	0X90);
	patch_byte	(0X35001A6F,	0X90);
	patch_byte	(0X35001A70,	0X90);
	patch_byte	(0X35001A71,	0X90);
	patch_byte	(0X35001A72,	0X90);
	patch_byte	(0X35001A73,	0X90);
	patch_byte	(0X35001A74,	0X90);
	patch_byte	(0X35001A86,	0X90);
	patch_byte	(0X35001A8F,	0X90);
	patch_byte	(0X35001A90,	0X90);
	patch_byte	(0X35001A96,	0X90);
	patch_byte	(0X35001A97,	0X90);
	patch_byte	(0X35001A98,	0X90);
	patch_byte	(0X35001AA5,	0X90);
	patch_byte	(0X35001AA6,	0X90);
	patch_byte	(0X35001AAF,	0X90);
	patch_byte	(0X35001AB0,	0X90);
	patch_byte	(0X35001AB1,	0X90);
	patch_byte	(0X35001AB7,	0X90);
	patch_byte	(0X35001ABE,	0X90);
	patch_byte	(0X35001ABF,	0X90);
	patch_byte	(0X35001AC0,	0X90);
	patch_byte	(0X35001AD0,	0X90);
	patch_byte	(0X35001AD5,	0X90);
	patch_byte	(0X35001AE8,	0X90);
	patch_byte	(0X35001AE9,	0X90);
	patch_byte	(0X35001AF8,	0X90);
	patch_byte	(0X35001AFD,	0X90);
	patch_byte	(0X35001B01,	0X90);
	patch_byte	(0X35001B02,	0X90);
	patch_byte	(0X35001B07,	0X90);
	patch_byte	(0X35001B19,	0X90);
	patch_byte	(0X35001B1D,	0X90);
	patch_byte	(0X35001B1E,	0X90);
	patch_byte	(0X35001B42,	0X90);
	patch_byte	(0X35001B4C,	0X90);
	patch_byte	(0X35001B53,	0X90);
	patch_byte	(0X35001B59,	0X90);
	patch_byte	(0X3500296C,	0XEB);
	patch_byte	(0X35002C0B,	0X90);
	patch_byte	(0X35002C0C,	0X90);
	patch_byte	(0X35002C6F,	0XEB);
	patch_byte	(0X35002C70,	0X26);
	patch_byte	(0X3500378E,	0X90);
	patch_byte	(0X3500378F,	0X90);
	patch_byte	(0X3500379E,	0XEB);
	patch_byte	(0X3500379F,	0X9);
	patch_byte	(0X35003A5F,	0XEB);
	patch_byte	(0X35003A60,	0XD);
	patch_byte	(0X35003E2C,	0XEB);
	patch_byte	(0X35003E38,	0XEB);
	patch_byte	(0X35003E39,	0XF);
	patch_byte	(0X35003E42,	0X90);
	patch_byte	(0X35003E43,	0X90);
	patch_byte	(0X35003F79,	0XEB);
	patch_byte	(0X35003FFE,	0XEB);
	patch_byte	(0X35003FFF,	0X18);
	patch_byte	(0X35004000,	0X90);
	patch_byte	(0X35004001,	0X90);
	patch_byte	(0X35004003,	0X90);
	patch_byte	(0X35004004,	0X90);
	patch_byte	(0X35004005,	0X90);
	patch_byte	(0X35004006,	0X90);
	patch_byte	(0X35004007,	0X90);
	patch_byte	(0X35004008,	0X90);
	patch_byte	(0X35004009,	0X90);
	patch_byte	(0X3500400A,	0X90);
	patch_byte	(0X3500400B,	0X90);
	patch_byte	(0X3500400C,	0X90);
	patch_byte	(0X3500400D,	0X90);
	patch_byte	(0X3500400E,	0X90);
	patch_byte	(0X3500400F,	0X90);
	patch_byte	(0X35004010,	0X90);
	patch_byte	(0X35004164,	0XEB);
	patch_byte	(0X35004165,	0X13);
	patch_byte	(0X35005604,	0XEB);
	patch_byte	(0X35005605,	0XE);
	patch_byte	(0X35005606,	0X90);
	patch_byte	(0X35005607,	0X90);
	patch_byte	(0X35005609,	0X90);
	patch_byte	(0X3500560A,	0X90);
	patch_byte	(0X3500560B,	0X90);
	patch_byte	(0X3500560C,	0X90);
	patch_byte	(0X3500560D,	0X90);
	patch_byte	(0X3500560E,	0X90);
	patch_byte	(0X35005620,	0X90);
	patch_byte	(0X35005621,	0X90);
	patch_byte	(0X35005628,	0X90);
	patch_byte	(0X35006B41,	0XEB);
	patch_byte	(0X35006B53,	0XEB);
	patch_byte	(0X35006B54,	0XF);
	patch_byte	(0X35006B5D,	0X90);
	patch_byte	(0X35006B5E,	0X90);
	patch_byte	(0X35006C54,	0XEB);
	patch_byte	(0X35006C55,	0X13);
	patch_byte	(0X35006DDE,	0X90);
	patch_byte	(0X35006DDF,	0X90);
	patch_byte	(0X35006DE7,	0XEB);
	patch_byte	(0X35006DE8,	0XE);
	patch_byte	(0X35006DE9,	0X90);
	patch_byte	(0X35006DEA,	0X90);
	patch_byte	(0X35006DEB,	0X90);
	patch_byte	(0X35006DEC,	0X90);
	patch_byte	(0X35006DED,	0X90);
	patch_byte	(0X35006DEE,	0X90);
	patch_byte	(0X35006DEF,	0X90);
	patch_byte	(0X35006DF0,	0X90);
	patch_byte	(0X35006DF1,	0X90);
	patch_byte	(0X35006DF2,	0X90);
	patch_byte	(0X35006DF3,	0X90);
	patch_byte	(0X35006DF4,	0X90);
	patch_byte	(0X35006DF5,	0X90);
	patch_byte	(0X35006DF6,	0X90);
	patch_byte	(0X35006DFB,	0X90);
	patch_byte	(0X35006DFC,	0X90);
	patch_byte	(0X35006DFD,	0X90);
	patch_byte	(0X35006F91,	0XEB);
	patch_byte	(0X35006F92,	0X13);
	patch_byte	(0X35006F93,	0X90);
	patch_byte	(0X35006F94,	0X90);
	patch_byte	(0X35006F96,	0X90);
	patch_byte	(0X35006F97,	0X90);
	patch_byte	(0X35006F98,	0X90);
	patch_byte	(0X35006F99,	0X90);
	patch_byte	(0X35006F9A,	0X90);
	patch_byte	(0X35006F9B,	0X90);
	patch_byte	(0X35006F9C,	0X90);
	patch_byte	(0X35006F9D,	0X90);
	patch_byte	(0X35006F9E,	0X90);
	patch_byte	(0X35006F9F,	0X90);
	patch_byte	(0X35006FA0,	0X90);
	patch_byte	(0X35006FA1,	0X90);
	patch_byte	(0X35006FA2,	0X90);
	patch_byte	(0X35006FA3,	0X90);
	patch_byte	(0X35006FA4,	0X90);
	patch_byte	(0X35006FA5,	0X90);
	patch_byte	(0X3500711D,	0X90);
	patch_byte	(0X3500711E,	0X90);
	patch_byte	(0X3500711F,	0X90);
	patch_byte	(0X35007124,	0XEB);
	patch_byte	(0X35007125,	0X13);
	patch_byte	(0X35007126,	0X90);
	patch_byte	(0X35007127,	0X90);
	patch_byte	(0X35007129,	0X90);
	patch_byte	(0X3500712A,	0X90);
	patch_byte	(0X3500712B,	0X90);
	patch_byte	(0X3500712C,	0X90);
	patch_byte	(0X3500712D,	0X90);
	patch_byte	(0X3500712E,	0X90);
	patch_byte	(0X3500712F,	0X90);
	patch_byte	(0X35007130,	0X90);
	patch_byte	(0X35007131,	0X90);
	patch_byte	(0X35007132,	0X90);
	patch_byte	(0X35007133,	0X90);
	patch_byte	(0X35007134,	0X90);
	patch_byte	(0X35007135,	0X90);
	patch_byte	(0X35007136,	0X90);
	patch_byte	(0X35007137,	0X90);
	patch_byte	(0X35007138,	0X90);
	patch_byte	(0X35007504,	0XEB);
	patch_byte	(0X35007505,	0X13);
	patch_byte	(0X35007506,	0X90);
	patch_byte	(0X35007507,	0X90);
	patch_byte	(0X35007509,	0X90);
	patch_byte	(0X3500750A,	0X90);
	patch_byte	(0X3500750B,	0X90);
	patch_byte	(0X3500750C,	0X90);
	patch_byte	(0X3500750D,	0X90);
	patch_byte	(0X3500750E,	0X90);
	patch_byte	(0X3500750F,	0X90);
	patch_byte	(0X35007510,	0X90);
	patch_byte	(0X35007511,	0X90);
	patch_byte	(0X35007512,	0X90);
	patch_byte	(0X35007513,	0X90);
	patch_byte	(0X35007514,	0X90);
	patch_byte	(0X35007515,	0X90);
	patch_byte	(0X35007516,	0X90);
	patch_byte	(0X35007517,	0X90);
	patch_byte	(0X35007518,	0X90);
	patch_byte	(0X350087C4,	0XEB);
	patch_byte	(0X350087C5,	0X18);
	patch_byte	(0X350087C6,	0X90);
	patch_byte	(0X350087C7,	0X90);
	patch_byte	(0X350087C8,	0X90);
	patch_byte	(0X350087C9,	0X90);
	patch_byte	(0X350087CA,	0X90);
	patch_byte	(0X350087CB,	0X90);
	patch_byte	(0X350087CC,	0X90);
	patch_byte	(0X350087CD,	0X90);
	patch_byte	(0X350087CE,	0X90);
	patch_byte	(0X350087CF,	0X90);
	patch_byte	(0X350087D0,	0X90);
	patch_byte	(0X350087D1,	0X90);
	patch_byte	(0X350087D2,	0X90);
	patch_byte	(0X350087D3,	0X90);
	patch_byte	(0X350087D4,	0X90);
	patch_byte	(0X350087D5,	0X90);
	patch_byte	(0X350087D6,	0X90);
	patch_byte	(0X350087D7,	0X90);
	patch_byte	(0X350087D8,	0X90);
	patch_byte	(0X350087D9,	0X90);
	patch_byte	(0X350087DA,	0X90);
	patch_byte	(0X350087DB,	0X90);
	patch_byte	(0X350087DC,	0X90);
	patch_byte	(0X350087DD,	0X90);
	patch_byte	(0X35008865,	0X90);
	patch_byte	(0X35008866,	0X90);
	patch_byte	(0X35008867,	0X90);
	patch_byte	(0X3500886F,	0XEB);
	patch_byte	(0X35008870,	0X15);
	patch_byte	(0X35008871,	0X90);
	patch_byte	(0X35008872,	0X90);
	patch_byte	(0X35008873,	0X90);
	patch_byte	(0X35008874,	0X90);
	patch_byte	(0X35008875,	0X90);
	patch_byte	(0X35008876,	0X90);
	patch_byte	(0X35008877,	0X90);
	patch_byte	(0X35008878,	0X90);
	patch_byte	(0X35008879,	0X90);
	patch_byte	(0X3500887A,	0X90);
	patch_byte	(0X3500887B,	0X90);
	patch_byte	(0X3500887C,	0X90);
	patch_byte	(0X3500887D,	0X90);
	patch_byte	(0X3500887E,	0X90);
	patch_byte	(0X3500887F,	0X90);
	patch_byte	(0X35008880,	0X90);
	patch_byte	(0X35008881,	0X90);
	patch_byte	(0X35008882,	0X90);
	patch_byte	(0X35008883,	0X90);
	patch_byte	(0X35008884,	0X90);
	patch_byte	(0X35008885,	0X90);
	patch_byte	(0X35008966,	0X90);
	patch_byte	(0X35008967,	0X90);
}

//------------------------------------------------------------------------
// Information about bytes

static Bytes_0(void) {
        auto x;
#define id x

	update_extra_cmt		(0X35001000,	E_PREV + 0,	"; File Name   : C:\\Users\\test\\Desktop\\Ryuk\\ryuk.bin");
	update_extra_cmt		(0X35001000,	E_PREV + 1,	"; Format      : Portable executable for 80386 (PE)");
	update_extra_cmt		(0X35001000,	E_PREV + 2,	"; Imagebase   : 35000000");
	update_extra_cmt		(0X35001000,	E_PREV + 3,	"; Timestamp   : 601F6302 (Sun Feb 07 03:48:18 2021)");
	update_extra_cmt		(0X35001000,	E_PREV + 4,	"; Section 1. (virtual address 00001000)");
	update_extra_cmt		(0X35001000,	E_PREV + 5,	"; Virtual size                  : 00013197 (  78231.)");
	update_extra_cmt		(0X35001000,	E_PREV + 6,	"; Section size in file          : 00013200 (  78336.)");
	update_extra_cmt		(0X35001000,	E_PREV + 7,	"; Offset to raw data for section: 00000400");
	update_extra_cmt		(0X35001000,	E_PREV + 8,	"; Flags 60000020: Text Executable Readable");
	update_extra_cmt		(0X35001000,	E_PREV + 9,	"; Alignment     : default");
	update_extra_cmt		(0X35001000,	E_PREV + 10,	"; OS type         :  MS Windows");
	update_extra_cmt		(0X35001000,	E_PREV + 11,	"; Application type:  Executable 32bit");
	create_insn	(0X35001000);
	create_insn	(x=0X35001003);
	op_hex		(x,	1);
	set_cmt	(0X3500100A,	"_DWORD",	0);
	create_insn	(x=0X3500100B);
	op_stkvar	(x,	1);
	set_cmt	(0X35001011,	"_DWORD",	0);
	set_cmt	(0X35001016,	"_DWORD",	0);
	create_insn	(x=0X35001017);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500101E);
	op_stkvar	(x,	0);
	set_cmt	(0X3500102B,	"_DWORD",	0);
	set_cmt	(0X3500102D,	"_DWORD",	0);
	set_cmt	(0X35001032,	"_DWORD",	0);
	set_cmt	(0X35001034,	"_DWORD",	0);
	set_cmt	(0X35001036,	"_DWORD",	0);
	set_cmt	(0X35001038,	"_DWORD",	0);
	set_cmt	(0X3500103D,	"_DWORD",	0);
	set_cmt	(0X3500104B,	"_DWORD",	0);
	create_insn	(0X3500105A);
	create_insn	(x=0X3500105C);
	op_stkvar	(x,	0);
	create_insn	(x=0X35001063);
	op_stkvar	(x,	0);
	create_insn	(x=0X35001069);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500106C);
	op_stkvar	(x,	0);
	set_cmt	(0X35001073,	"_DWORD",	0);
	set_cmt	(0X35001074,	"_DWORD",	0);
	create_insn	(x=0X35001075);
	op_stkvar	(x,	0);
	create_insn	(x=0X35001080);
	op_stkvar	(x,	1);
	set_cmt	(0X35001083,	"_DWORD",	0);
	set_cmt	(0X35001084,	"_DWORD",	0);
	create_insn	(x=0X3500108B);
	op_stkvar	(x,	0);
	create_insn	(x=0X35001091);
	op_stkvar	(x,	0);
	set_cmt	(0X35001097,	"_DWORD",	0);
	create_insn	(x=0X350010A9);
	op_stkvar	(x,	1);
	set_cmt	(0X350010AC,	"_DWORD",	0);
	create_insn	(x=0X350010AD);
	op_stkvar	(x,	1);
	create_insn	(x=0X350010E4);
	op_stkvar	(x,	0);
	create_insn	(x=0X35001104);
	op_hex		(x,	1);
	create_insn	(x=0X3500110A);
	op_hex		(x,	1);
	create_insn	(x=0X35001122);
	op_stkvar	(x,	0);
	create_insn	(x=0X35001137);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500113A);
	op_stkvar	(x,	0);
	create_insn	(x=0X35001141);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500115C);
	op_stkvar	(x,	0);
	create_insn	(x=0X35001163);
	op_stkvar	(x,	0);
	set_cmt	(0X3500117D,	"_DWORD",	0);
	create_insn	(0X35001190);
	create_insn	(x=0X350011B0);
	op_hex		(x,	1);
	create_insn	(x=0X350011B6);
	op_hex		(x,	1);
	create_insn	(x=0X350011D6);
	op_stkvar	(x,	0);
	create_insn	(x=0X350011DD);
	op_stkvar	(x,	0);
	create_insn	(0X350011E5);
	create_insn	(x=0X350011FB);
	op_stkvar	(x,	1);
	create_insn	(x=0X350011FE);
	op_stkvar	(x,	0);
	create_insn	(x=0X35001201);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500120D);
	op_stkvar	(x,	0);
	create_insn	(x=0X35001227);
	op_stkvar	(x,	1);
	set_cmt	(0X3500122A,	"_DWORD",	0);
	set_cmt	(0X3500122C,	"_DWORD",	0);
	set_cmt	(0X3500122E,	"_DWORD",	0);
	create_insn	(x=0X3500122E);
	op_stkvar	(x,	0);
	set_cmt	(0X35001236,	"_DWORD",	0);
	set_cmt	(0X35001237,	"_DWORD",	0);
	create_insn	(x=0X35001238);
	op_stkvar	(x,	0);
	set_cmt	(0X35001246,	"_DWORD",	0);
	set_cmt	(0X35001259,	"_DWORD",	0);
	create_insn	(0X35001259);
	create_insn	(x=0X3500125B);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500125E);
	op_stkvar	(x,	0);
	set_cmt	(0X35001265,	"_DWORD",	0);
	set_cmt	(0X35001266,	"_DWORD",	0);
	create_insn	(x=0X35001268);
	op_stkvar	(x,	1);
	set_cmt	(0X3500126B,	"_DWORD",	0);
	set_cmt	(0X3500126C,	"_DWORD",	0);
	set_cmt	(0X35001277,	"_DWORD",	0);
	create_insn	(0X3500128A);
	create_insn	(x=0X35001292);
	op_stkvar	(x,	1);
	create_insn	(x=0X350012A0);
	op_stkvar	(x,	0);
	create_insn	(x=0X350012AC);
	op_stkvar	(x,	0);
	create_insn	(x=0X350012B8);
	op_stkvar	(x,	0);
	create_insn	(x=0X350012C4);
	op_stkvar	(x,	0);
	create_insn	(x=0X350012D0);
	op_stkvar	(x,	0);
	create_insn	(x=0X350012DB);
	op_stkvar	(x,	0);
	create_insn	(x=0X350012E2);
	op_stkvar	(x,	0);
	create_insn	(x=0X350012E9);
	op_stkvar	(x,	0);
	create_insn	(x=0X350012F0);
	op_stkvar	(x,	0);
	create_insn	(x=0X350012F7);
	op_stkvar	(x,	0);
	set_cmt	(0X35001304,	"_DWORD",	0);
	set_cmt	(0X35001306,	"_DWORD",	0);
	set_cmt	(0X35001308,	"_DWORD",	0);
	set_cmt	(0X3500130A,	"_DWORD",	0);
	set_cmt	(0X35001316,	"_DWORD",	0);
	set_cmt	(0X35001329,	"_DWORD",	0);
	create_insn	(0X35001329);
	create_insn	(x=0X3500133C);
	op_stkvar	(x,	1);
	set_cmt	(0X3500133F,	"_DWORD",	0);
	set_cmt	(0X35001340,	"_DWORD",	0);
	set_cmt	(0X35001342,	"_DWORD",	0);
	set_cmt	(0X35001347,	"_DWORD",	0);
	create_insn	(x=0X35001347);
	op_stkvar	(x,	0);
	set_cmt	(0X35001354,	"_DWORD",	0);
	set_cmt	(0X3500135B,	"_DWORD",	0);
	create_insn	(x=0X3500135B);
	op_stkvar	(x,	0);
	create_insn	(x=0X35001370);
	op_stkvar	(x,	1);
	create_insn	(x=0X35001377);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500137A);
	op_stkvar	(x,	0);
	create_insn	(x=0X35001391);
	op_stkvar	(x,	1);
	create_insn	(x=0X350013A3);
	op_stkvar	(x,	1);
	set_cmt	(0X350013A6,	"_DWORD",	0);
	set_cmt	(0X350013AE,	"_DWORD",	0);
	set_cmt	(0X350013B0,	"_DWORD",	0);
	set_cmt	(0X350013B1,	"_DWORD",	0);
	set_cmt	(0X350013BD,	"_DWORD",	0);
	set_cmt	(0X350013C4,	"_DWORD",	0);
	create_insn	(x=0X350013C4);
	op_stkvar	(x,	0);
	set_cmt	(0X350013D9,	"_DWORD",	0);
	create_insn	(0X350013D9);
	create_insn	(x=0X350013DB);
	op_stkvar	(x,	1);
	create_insn	(x=0X350013DE);
	op_stkvar	(x,	0);
	set_cmt	(0X350013E5,	"_DWORD",	0);
	set_cmt	(0X350013E6,	"_DWORD",	0);
	create_insn	(x=0X350013E8);
	op_stkvar	(x,	1);
	set_cmt	(0X350013EE,	"_DWORD",	0);
	set_cmt	(0X350013EF,	"_DWORD",	0);
	set_cmt	(0X350013FA,	"_DWORD",	0);
	set_cmt	(0X35001401,	"_DWORD",	0);
	create_insn	(x=0X35001401);
	op_stkvar	(x,	0);
	set_cmt	(0X35001416,	"_DWORD",	0);
	create_insn	(0X35001416);
	set_cmt	(0X35001418,	"_DWORD",	0);
	set_cmt	(0X3500141A,	"_DWORD",	0);
	set_cmt	(0X3500141C,	"_DWORD",	0);
	set_cmt	(0X35001428,	"_DWORD",	0);
	set_cmt	(0X3500142F,	"_DWORD",	0);
	create_insn	(x=0X3500142F);
	op_stkvar	(x,	0);
	create_insn	(0X35001444);
	create_insn	(x=0X35001448);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500144D);
	op_stkvar	(x,	0);
	create_insn	(x=0X35001454);
	op_stkvar	(x,	0);
	create_insn	(x=0X35001462);
	op_stkvar	(x,	0);
	set_cmt	(0X35001471,	"_DWORD",	0);
	create_insn	(x=0X35001473);
	op_stkvar	(x,	0);
	set_cmt	(0X35001478,	"_DWORD",	0);
	set_cmt	(0X3500147C,	"_DWORD",	0);
	set_cmt	(0X35001480,	"_DWORD",	0);
	create_insn	(x=0X35001481);
	op_stkvar	(x,	0);
	create_insn	(x=0X35001493);
	op_stkvar	(x,	1);
	create_insn	(x=0X350014BA);
	op_stkvar	(x,	1);
	create_insn	(x=0X350014BD);
	op_stkvar	(x,	1);
	set_cmt	(0X350014C0,	"_DWORD",	0);
	set_cmt	(0X350014C2,	"_DWORD",	0);
	set_cmt	(0X350014C3,	"_DWORD",	0);
	create_insn	(x=0X350014C3);
	op_stkvar	(x,	0);
	set_cmt	(0X350014C6,	"_DWORD",	0);
	set_cmt	(0X350014C7,	"_DWORD",	0);
	set_cmt	(0X350014D6,	"_DWORD",	0);
	create_insn	(x=0X350014D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X350014DB);
	op_stkvar	(x,	0);
	set_cmt	(0X350014E2,	"_DWORD",	0);
	set_cmt	(0X350014E3,	"_DWORD",	0);
	set_cmt	(0X350014E5,	"_DWORD",	0);
	set_cmt	(0X350014E7,	"_DWORD",	0);
	create_insn	(x=0X350014E7);
	op_stkvar	(x,	0);
	set_cmt	(0X350014EA,	"_DWORD",	0);
	set_cmt	(0X350014EC,	"_DWORD",	0);
	create_insn	(x=0X350014EC);
	op_stkvar	(x,	0);
	set_cmt	(0X350014FD,	"_DWORD",	0);
	create_insn	(x=0X350014FD);
	op_stkvar	(x,	0);
	create_insn	(x=0X35001500);
	op_stkvar	(x,	1);
	set_cmt	(0X35001503,	"_DWORD",	0);
	set_cmt	(0X35001504,	"_DWORD",	0);
	create_insn	(x=0X35001504);
	op_stkvar	(x,	0);
	set_cmt	(0X35001507,	"_DWORD",	0);
	set_cmt	(0X35001509,	"_DWORD",	0);
	create_insn	(x=0X35001509);
	op_stkvar	(x,	0);
	set_cmt	(0X3500150C,	"_DWORD",	0);
	set_cmt	(0X3500150E,	"_DWORD",	0);
	create_insn	(x=0X3500150E);
	op_stkvar	(x,	0);
	set_cmt	(0X3500151F,	"_DWORD",	0);
	set_cmt	(0X35001521,	"_DWORD",	0);
	set_cmt	(0X35001523,	"_DWORD",	0);
	create_insn	(x=0X35001523);
	op_stkvar	(x,	0);
	set_cmt	(0X35001526,	"_DWORD",	0);
	set_cmt	(0X35001536,	"_DWORD",	0);
	create_insn	(x=0X35001538);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500153B);
	op_stkvar	(x,	0);
	set_cmt	(0X35001542,	"_DWORD",	0);
	set_cmt	(0X35001543,	"_DWORD",	0);
	create_insn	(x=0X35001543);
	op_stkvar	(x,	0);
	set_cmt	(0X35001546,	"_DWORD",	0);
	create_insn	(x=0X35001546);
	op_stkvar	(x,	0);
	set_cmt	(0X35001549,	"_DWORD",	0);
	create_insn	(x=0X35001558);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500155C);
	op_stkvar	(x,	1);
	create_insn	(x=0X35001565);
	op_stkvar	(x,	0);
	create_insn	(x=0X35001570);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500157C);
	op_stkvar	(x,	0);
	create_insn	(x=0X35001585);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500158E);
	op_stkvar	(x,	0);
	create_insn	(x=0X35001592);
	op_stkvar	(x,	0);
	create_insn	(x=0X35001598);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500159D);
	op_stkvar	(x,	0);
	create_insn	(x=0X350015B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X350015B7);
	op_stkvar	(x,	0);
	set_cmt	(0X350015C4,	"_DWORD",	0);
	create_insn	(0X350015C4);
	set_cmt	(0X350015C6,	"_DWORD",	0);
	set_cmt	(0X350015C8,	"_DWORD",	0);
	set_cmt	(0X350015CA,	"_DWORD",	0);
	set_cmt	(0X350015CC,	"_DWORD",	0);
	create_insn	(x=0X350015D5);
	op_stkvar	(x,	1);
	create_insn	(x=0X350015DB);
	op_stkvar	(x,	0);
	create_insn	(x=0X350015E5);
	op_stkvar	(x,	1);
	create_insn	(x=0X350015EC);
	op_stkvar	(x,	0);
	create_insn	(x=0X350015F9);
	op_stkvar	(x,	1);
	create_insn	(x=0X350015FC);
	op_hex		(x,	1);
	create_insn	(x=0X35001610);
	op_stkvar	(x,	1);
	create_insn	(x=0X35001627);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500163A);
	op_stkvar	(x,	0);
	create_insn	(x=0X35001640);
	op_hex		(x,	1);
	create_insn	(x=0X35001643);
	op_stkvar	(x,	1);
	create_insn	(x=0X35001650);
	op_stkvar	(x,	1);
	create_insn	(x=0X35001653);
	op_hex		(x,	1);
	create_insn	(x=0X35001656);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500165E);
	op_stkvar	(x,	0);
	create_insn	(x=0X35001667);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500166A);
	op_hex		(x,	1);
	create_insn	(x=0X35001677);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500168A);
	op_hex		(x,	1);
	create_insn	(x=0X35001691);
	op_hex		(x,	1);
	create_insn	(x=0X35001696);
	op_stkvar	(x,	1);
	create_insn	(x=0X350016B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X350016BF);
	op_stkvar	(x,	1);
	create_insn	(x=0X350016CF);
	op_hex		(x,	1);
	create_insn	(x=0X350016D6);
	op_hex		(x,	1);
	create_insn	(x=0X350016DB);
	op_stkvar	(x,	1);
	create_insn	(x=0X350016DE);
	op_stkvar	(x,	0);
	set_cmt	(0X350016EF,	"_DWORD",	0);
	create_insn	(x=0X350016F1);
	op_stkvar	(x,	1);
	set_cmt	(0X350016F6,	"_DWORD",	0);
	set_cmt	(0X350016F7,	"_DWORD",	0);
	create_insn	(x=0X350016F8);
	op_stkvar	(x,	1);
	set_cmt	(0X350016FB,	"_DWORD",	0);
	set_cmt	(0X350016FC,	"_DWORD",	0);
	set_cmt	(0X35001707,	"_DWORD",	0);
	set_cmt	(0X3500170E,	"_DWORD",	0);
	create_insn	(x=0X3500170E);
	op_stkvar	(x,	0);
	create_insn	(x=0X35001723);
	op_stkvar	(x,	1);
	create_insn	(x=0X35001726);
	op_stkvar	(x,	1);
	set_cmt	(0X35001729,	"_DWORD",	0);
	set_cmt	(0X3500172A,	"_DWORD",	0);
	set_cmt	(0X3500172C,	"_DWORD",	0);
	set_cmt	(0X3500172E,	"_DWORD",	0);
	set_cmt	(0X35001730,	"_DWORD",	0);
	set_cmt	(0X35001731,	"_DWORD",	0);
	create_insn	(x=0X35001731);
	op_stkvar	(x,	0);
	set_cmt	(0X3500173E,	"_DWORD",	0);
	set_cmt	(0X35001745,	"_DWORD",	0);
	create_insn	(x=0X35001745);
	op_stkvar	(x,	0);
	create_insn	(0X3500175A);
	create_insn	(x=0X3500175C);
	op_stkvar	(x,	1);
	create_insn	(x=0X35001769);
	op_stkvar	(x,	1);
	set_cmt	(0X3500176C,	"_DWORD",	0);
	create_insn	(x=0X3500176D);
	op_stkvar	(x,	1);
	set_cmt	(0X35001773,	"_DWORD",	0);
	set_cmt	(0X35001774,	"_DWORD",	0);
	set_cmt	(0X35001776,	"_DWORD",	0);
	set_cmt	(0X35001778,	"_DWORD",	0);
	set_cmt	(0X35001779,	"_DWORD",	0);
	create_insn	(x=0X35001779);
	op_stkvar	(x,	0);
	set_cmt	(0X35001786,	"_DWORD",	0);
	set_cmt	(0X3500178D,	"_DWORD",	0);
	create_insn	(x=0X3500178D);
	op_stkvar	(x,	0);
	set_cmt	(0X350017A2,	"_DWORD",	0);
	create_insn	(0X350017A2);
	create_insn	(x=0X350017A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X350017A7);
	op_stkvar	(x,	0);
	set_cmt	(0X350017AE,	"_DWORD",	0);
	set_cmt	(0X350017AF,	"_DWORD",	0);
	create_insn	(x=0X350017AF);
	op_stkvar	(x,	0);
	create_insn	(x=0X350017B2);
	op_stkvar	(x,	1);
	set_cmt	(0X350017B8,	"_DWORD",	0);
	set_cmt	(0X350017B9,	"_DWORD",	0);
	set_cmt	(0X350017C4,	"_DWORD",	0);
	set_cmt	(0X350017CB,	"_DWORD",	0);
	create_insn	(x=0X350017CB);
	op_stkvar	(x,	0);
	create_insn	(x=0X350017E0);
	op_stkvar	(x,	0);
	create_insn	(x=0X350017E6);
	op_stkvar	(x,	0);
	set_cmt	(0X350017EF,	"_DWORD",	0);
	set_cmt	(0X350017F1,	"_DWORD",	0);
	create_insn	(x=0X350017F6);
	op_stkvar	(x,	0);
	set_cmt	(0X350017FB,	"_DWORD",	0);
	create_insn	(x=0X350017FB);
	op_stkvar	(x,	0);
	set_cmt	(0X350017FE,	"_DWORD",	0);
	create_insn	(x=0X350017FE);
	op_stkvar	(x,	0);
	set_cmt	(0X35001801,	"_DWORD",	0);
	set_cmt	(0X3500180D,	"_DWORD",	0);
	set_cmt	(0X35001814,	"_DWORD",	0);
	create_insn	(x=0X35001814);
	op_stkvar	(x,	0);
	set_cmt	(0X35001829,	"_DWORD",	0);
	create_insn	(0X35001829);
	create_insn	(x=0X3500182B);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500182E);
	op_stkvar	(x,	0);
	set_cmt	(0X35001835,	"_DWORD",	0);
	set_cmt	(0X35001836,	"_DWORD",	0);
	create_insn	(x=0X35001838);
	op_stkvar	(x,	1);
	set_cmt	(0X3500183E,	"_DWORD",	0);
	set_cmt	(0X3500183F,	"_DWORD",	0);
	set_cmt	(0X3500184A,	"_DWORD",	0);
	set_cmt	(0X35001851,	"_DWORD",	0);
	create_insn	(x=0X35001851);
	op_stkvar	(x,	0);
	set_cmt	(0X35001866,	"_DWORD",	0);
	create_insn	(0X35001866);
	create_insn	(x=0X3500186D);
	op_stkvar	(x,	1);
	set_cmt	(0X35001872,	"_DWORD",	0);
	create_insn	(x=0X35001872);
	op_stkvar	(x,	0);
	set_cmt	(0X35001890,	"_DWORD",	0);
	create_insn	(0X35001890);
	set_cmt	(0X35001897,	"_DWORD",	0);
	create_insn	(x=0X35001897);
	op_stkvar	(x,	0);
	set_cmt	(0X350018AC,	"_DWORD",	0);
	create_insn	(0X350018AC);
	set_cmt	(0X350018B3,	"_DWORD",	0);
	create_insn	(x=0X350018B3);
	op_stkvar	(x,	0);
	set_cmt	(0X350018C8,	"_DWORD",	0);
	create_insn	(x=0X350018C8);
	op_stkvar	(x,	0);
	set_cmt	(0X350018D1,	"_DWORD",	0);
	set_cmt	(0X350018E4,	"_DWORD",	0);
	create_insn	(x=0X350018E4);
	op_stkvar	(x,	0);
	set_cmt	(0X350018ED,	"_DWORD",	0);
	set_cmt	(0X35001900,	"_DWORD",	0);
	create_insn	(x=0X35001900);
	op_stkvar	(x,	0);
	set_cmt	(0X35001909,	"_DWORD",	0);
	set_cmt	(0X3500191C,	"_DWORD",	0);
	create_insn	(0X3500191C);
	set_cmt	(0X35001923,	"_DWORD",	0);
	create_insn	(x=0X35001923);
	op_stkvar	(x,	0);
	make_array	(0X35001938,	0X8);
	set_cmt	(0X35001940,	"_DWORD",	0);
	create_insn	(0X35001940);
	create_insn	(x=0X35001943);
	op_hex		(x,	1);
	set_cmt	(0X35001946,	"_DWORD",	0);
	set_cmt	(0X35001947,	"_DWORD",	0);
	set_cmt	(0X35001948,	"_DWORD",	0);
	create_insn	(x=0X3500194F);
	op_hex		(x,	1);
	create_insn	(0X35001960);
	create_insn	(x=0X35001961);
	op_stkvar	(x,	0);
	create_insn	(x=0X35001968);
	op_stkvar	(x,	0);
	create_insn	(x=0X35001971);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X35001976,	"_DWORD",	0);
	set_cmt	(0X35001978,	"_DWORD",	0);
	create_insn	(x=0X35001978);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X3500197D);
	op_stkvar	(x,	0);
	create_insn	(x=0X35001984);
	op_stkvar	(x,	0);
	set_cmt	(0X35001990,	"_DWORD",	0);
	create_insn	(x=0X35001992);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X35001997,	"_DWORD",	0);
	set_cmt	(0X35001999,	"_DWORD",	0);
	create_insn	(x=0X35001999);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X350019A3);
	op_hex		(x,	1);
	create_insn	(x=0X350019A6);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X350019B1);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X350019B6,	"_DWORD",	0);
	create_insn	(0X350019C4);
	create_insn	(x=0X350019C5);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X350019CE);
	op_hex		(x,	1);
	create_insn	(0X350019D5);
	create_insn	(x=0X350019DA);
	op_stkvar	(x,	0);
	create_insn	(x=0X350019E1);
	op_stkvar	(x,	0);
	create_insn	(x=0X350019E8);
	op_stkvar	(x,	1);
	create_insn	(0X350019EE);
	set_cmt	(0X350019F0,	"_DWORD",	0);
	create_insn	(0X350019F4);
	set_cmt	(0X350019F6,	"_DWORD",	0);
	create_insn	(x=0X350019F8);
	op_stkvar	(x,	1);
	set_cmt	(0X35001A09,	"_DWORD",	0);
	create_insn	(0X35001A09);
	set_cmt	(0X35001A0A,	"_DWORD",	0);
	set_cmt	(0X35001A12,	"_DWORD",	0);
	create_insn	(0X35001A12);
	set_cmt	(0X35001A18,	"_DWORD",	0);
	create_insn	(x=0X35001A18);
	op_stkvar	(x,	0);
	set_cmt	(0X35001A1B,	"_DWORD",	0);
	create_insn	(x=0X35001A1B);
	op_stkvar	(x,	0);
	create_insn	(x=0X35001A1E);
	op_stkvar	(x,	1);
	create_insn	(0X35001A2A);
	create_insn	(0X35001A2D);
	create_insn	(x=0X35001A3E);
	op_stkvar	(x,	1);
	create_insn	(x=0X35001A4B);
	op_hex		(x,	1);
	create_insn	(x=0X35001A4D);
	op_hex		(x,	1);
	create_insn	(x=0X35001A50);
	op_hex		(x,	1);
	create_insn	(0X35001A75);
	create_insn	(0X35001A79);
	create_insn	(0X35001A86);
	create_insn	(0X35001A8F);
	create_insn	(0X35001A96);
	create_insn	(x=0X35001A9E);
	op_hex		(x,	1);
	create_insn	(x=0X35001AA0);
	op_stkvar	(x,	1);
	create_insn	(0X35001AA5);
	set_cmt	(0X35001AA7,	"_DWORD",	0);
	set_cmt	(0X35001AA8,	"_DWORD",	0);
	create_insn	(x=0X35001AAA);
	op_stkvar	(x,	1);
	create_insn	(0X35001AAF);
	set_cmt	(0X35001AB4,	"_DWORD",	0);
	create_insn	(0X35001AB7);
	set_cmt	(0X35001AB8,	"_DWORD",	0);
	set_cmt	(0X35001ABA,	"_DWORD",	0);
	create_insn	(0X35001ABE);
	create_insn	(x=0X35001AC3);
	op_stkvar	(x,	1);
	create_insn	(x=0X35001AC6);
	op_stkvar	(x,	1);
	create_insn	(0X35001AD0);
	create_insn	(x=0X35001ADC);
	op_stkvar	(x,	0);
	create_insn	(x=0X35001AE3);
	op_stkvar	(x,	1);
	create_insn	(0X35001AE8);
	set_cmt	(0X35001AEC,	"_DWORD",	0);
	create_insn	(x=0X35001AED);
	op_stkvar	(x,	1);
	create_insn	(0X35001AF8);
	set_cmt	(0X35001AF9,	"_DWORD",	0);
	create_insn	(0X35001AFD);
	set_cmt	(0X35001AFE,	"_DWORD",	0);
	create_insn	(0X35001B01);
	set_cmt	(0X35001B03,	"_DWORD",	0);
	create_insn	(0X35001B07);
	set_cmt	(0X35001B08,	"_DWORD",	0);
	create_insn	(x=0X35001B0C);
	op_stkvar	(x,	1);
	create_insn	(x=0X35001B0F);
	op_stkvar	(x,	0);
	create_insn	(0X35001B19);
	create_insn	(0X35001B1D);
	create_insn	(x=0X35001B4D);
	op_stkvar	(x,	1);
	create_insn	(0X35001B53);
	create_insn	(x=0X35001B54);
	op_stkvar	(x,	1);
	create_insn	(0X35001B59);
	make_array	(0X35001B6A,	0X6);
	create_insn	(0X35001B70);
	create_insn	(x=0X35001B73);
	op_hex		(x,	1);
	set_cmt	(0X35001B79,	"_DWORD",	0);
	set_cmt	(0X35001B7B,	"_DWORD",	0);
	set_cmt	(0X35001B80,	"_DWORD",	0);
	set_cmt	(0X35001B85,	"_DWORD",	0);
	create_insn	(x=0X35001B8F);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X35001B96);
	op_stkvar	(x,	0);
	create_insn	(x=0X35001BB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X35001BD3);
	op_hex		(x,	1);
	create_insn	(x=0X35001BDA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X35001BDF);
	op_hex		(x,	1);
	create_insn	(x=0X35001C04);
	op_stkvar	(x,	0);
	create_insn	(x=0X35001C0B);
	op_hex		(x,	1);
	create_insn	(x=0X35001C15);
	op_hex		(x,	1);
	create_insn	(x=0X35001C1A);
	op_stkvar	(x,	0);
	set_cmt	(0X35001C25,	"C",	0);
	create_insn	(x=0X35001C2E);
	op_hex		(x,	1);
	set_cmt	(0X35001C42,	"C",	0);
	create_insn	(x=0X35001C48);
	op_hex		(x,	1);
	create_insn	(x=0X35001C52);
	op_stkvar	(x,	0);
	create_insn	(x=0X35001C5D);
	op_stkvar	(x,	1);
	create_insn	(x=0X35001C6D);
	op_stkvar	(x,	1);
	create_insn	(x=0X35001C83);
	op_hex		(x,	1);
	create_insn	(x=0X35001C8A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X35001C8F);
	op_hex		(x,	1);
	create_insn	(x=0X35001CB4);
	op_hex		(x,	1);
	set_cmt	(0X35001CB9,	"_DWORD",	0);
	set_cmt	(0X35001CBB,	"_DWORD",	0);
	create_insn	(x=0X35001CC2);
	op_hex		(x,	1);
	set_cmt	(0X35001CC5,	"_DWORD",	0);
	set_cmt	(0X35001CCC,	"_DWORD",	0);
	create_insn	(x=0X35001CD4);
	op_stkvar	(x,	1);
	create_insn	(x=0X35001CDB);
	op_stkvar	(x,	0);
	create_insn	(x=0X35001CF4);
	op_hex		(x,	1);
	create_insn	(x=0X35001D1E);
	op_hex		(x,	1);
	create_insn	(x=0X35001D24);
	op_stkvar	(x,	1);
	create_insn	(x=0X35001D4E);
	op_hex		(x,	1);
	create_insn	(x=0X35001D55);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X35001D5A);
	op_hex		(x,	1);
	create_insn	(x=0X35001D7F);
	op_hex		(x,	1);
	set_cmt	(0X35001D84,	"_DWORD",	0);
	set_cmt	(0X35001D86,	"_DWORD",	0);
	set_cmt	(0X35001D88,	"_DWORD",	0);
	set_cmt	(0X35001D89,	"_DWORD",	0);
	create_insn	(x=0X35001D89);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X35001D90);
	op_hex		(x,	1);
	set_cmt	(0X35001D93,	"_DWORD",	0);
	create_insn	(x=0X35001D93);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X35001D9A,	"_DWORD",	0);
	set_cmt	(0X35001DA2,	"_DWORD",	0);
	set_cmt	(0X35001DAD,	"_DWORD",	0);
	create_insn	(x=0X35001DB8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X35001DD1);
	op_stkvar	(x,	1);
	create_insn	(x=0X35001DF4);
	op_hex		(x,	1);
	create_insn	(x=0X35001DFB);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X35001E00);
	op_hex		(x,	1);
	create_insn	(x=0X35001E2E);
	op_hex		(x,	1);
	create_insn	(x=0X35001E35);
	op_stkvar	(x,	1);
	create_insn	(x=0X35001E38);
	op_hex		(x,	1);
	create_insn	(x=0X35001E5E);
	op_hex		(x,	1);
	set_cmt	(0X35001E63,	"_DWORD",	0);
	set_cmt	(0X35001E65,	"_DWORD",	0);
	set_cmt	(0X35001E67,	"_DWORD",	0);
	set_cmt	(0X35001E68,	"_DWORD",	0);
	create_insn	(x=0X35001E68);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X35001E6F);
	op_hex		(x,	1);
	set_cmt	(0X35001E72,	"_DWORD",	0);
	create_insn	(x=0X35001E72);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X35001E79,	"_DWORD",	0);
	set_cmt	(0X35001E81,	"_DWORD",	0);
	set_cmt	(0X35001E8C,	"_DWORD",	0);
	set_cmt	(0X35001E91,	"_DWORD",	0);
	set_cmt	(0X35001E93,	"_DWORD",	0);
	create_insn	(x=0X35001E93);
	op_stkvar	(x,	0);
	set_cmt	(0X35001E9C,	"_DWORD",	0);
	set_cmt	(0X35001EA1,	"_DWORD",	0);
	set_cmt	(0X35001EA3,	"_DWORD",	0);
	create_insn	(0X35001EB6);
	create_insn	(x=0X35001EC5);
	op_stkvar	(x,	1);
	make_array	(0X35001EE5,	0XB);
	create_insn	(0X35001EF0);
	create_insn	(x=0X35001EF3);
	op_hex		(x,	1);
	create_insn	(x=0X35001EFB);
	op_stkvar	(x,	1);
	create_insn	(x=0X35001F19);
	op_stkvar	(x,	1);
	create_insn	(x=0X35001F2C);
	op_stkvar	(x,	1);
	create_insn	(x=0X35001F3C);
	op_hex		(x,	1);
	create_insn	(x=0X35001F51);
	op_stkvar	(x,	0);
	create_insn	(x=0X35001F54);
	op_stkvar	(x,	0);
	create_insn	(x=0X35001F70);
	op_hex		(x,	1);
	create_insn	(x=0X35001F7C);
	op_stkvar	(x,	1);
	create_insn	(x=0X35001F8A);
	op_stkvar	(x,	1);
	create_insn	(x=0X35001F95);
	op_stkvar	(x,	1);
	create_insn	(x=0X35001F9F);
	op_stkvar	(x,	1);
	create_insn	(x=0X35001FA2);
	op_hex		(x,	1);
	create_insn	(x=0X35001FAE);
	op_stkvar	(x,	1);
	create_insn	(x=0X35001FC1);
	op_hex		(x,	1);
	create_insn	(x=0X35001FC8);
	op_hex		(x,	1);
	create_insn	(x=0X35001FD4);
	op_stkvar	(x,	1);
	create_insn	(x=0X35001FE1);
	op_stkvar	(x,	1);
	create_insn	(x=0X35001FE4);
	op_hex		(x,	1);
	create_insn	(x=0X35001FED);
	op_stkvar	(x,	1);
	create_insn	(x=0X35001FF0);
	op_hex		(x,	1);
	create_insn	(x=0X35001FFC);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500200F);
	op_hex		(x,	1);
	create_insn	(x=0X35002016);
	op_hex		(x,	1);
	create_insn	(x=0X35002020);
	op_stkvar	(x,	1);
	create_insn	(x=0X35002023);
	op_stkvar	(x,	1);
	create_insn	(x=0X35002027);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500202A);
	op_stkvar	(x,	0);
	create_insn	(x=0X35002035);
	op_stkvar	(x,	1);
	create_insn	(x=0X35002047);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500205A);
	op_hex		(x,	1);
	create_insn	(x=0X35002061);
	op_stkvar	(x,	1);
	create_insn	(x=0X35002067);
	op_hex		(x,	1);
	create_insn	(x=0X35002077);
	op_stkvar	(x,	1);
	create_insn	(x=0X35002088);
	op_stkvar	(x,	1);
	create_insn	(x=0X35002090);
	op_stkvar	(x,	1);
	create_insn	(x=0X35002098);
	op_hex		(x,	1);
	create_insn	(x=0X350020A1);
	op_hex		(x,	1);
	make_array	(0X350020B6,	0XA);
	create_insn	(0X350020C0);
	create_insn	(x=0X350020C3);
	op_hex		(x,	1);
	set_cmt	(0X350020CC,	"uSize",	0);
	create_insn	(x=0X350020D1);
	op_stkvar	(x,	1);
	set_cmt	(0X350020D7,	"lpBuffer",	0);
	create_insn	(x=0X350020DE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X350020E3);
	op_stkvar	(x,	0);
	create_insn	(x=0X350020F7);
	op_stkvar	(x,	1);
	set_cmt	(0X350020FD,	"_DWORD",	0);
	create_insn	(x=0X3500210A);
	op_hex		(x,	1);
	set_cmt	(0X35002111,	"_DWORD",	0);
	create_insn	(x=0X35002111);
	op_hex		(x,	1);
	set_cmt	(0X3500211C,	"Seed",	0);
	create_insn	(x=0X35002125);
	op_stkvar	(x,	0);
	create_insn	(x=0X35002129);
	op_hex		(x,	1);
	create_insn	(x=0X3500212C);
	op_stkvar	(x,	0);
	set_cmt	(0X35002133,	"C",	0);
	create_insn	(x=0X3500213C);
	op_hex		(x,	1);
	set_cmt	(0X3500214D,	"C",	0);
	create_insn	(x=0X35002153);
	op_hex		(x,	1);
	create_insn	(x=0X3500215A);
	op_stkvar	(x,	0);
	create_insn	(x=0X35002164);
	op_stkvar	(x,	1);
	create_insn	(x=0X35002177);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500218A);
	op_hex		(x,	1);
	create_insn	(x=0X35002191);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X35002196);
	op_hex		(x,	1);
	create_insn	(x=0X350021A7);
	op_stkvar	(x,	1);
	create_insn	(x=0X350021BA);
	op_stkvar	(x,	1);
	create_insn	(x=0X350021C0);
	op_hex		(x,	1);
	set_cmt	(0X350021C5,	"_DWORD",	0);
	set_cmt	(0X350021C7,	"_DWORD",	0);
	set_cmt	(0X350021CC,	"_DWORD",	0);
	set_cmt	(0X350021CE,	"_DWORD",	0);
	set_cmt	(0X350021D0,	"_DWORD",	0);
	create_insn	(x=0X350021D4);
	op_hex		(x,	1);
	set_cmt	(0X350021D7,	"_DWORD",	0);
	set_cmt	(0X350021DE,	"_DWORD",	0);
	set_cmt	(0X350021F5,	"_DWORD",	0);
	create_insn	(0X350021F5);
	create_insn	(x=0X350021F7);
	op_stkvar	(x,	1);
	create_insn	(x=0X350021FA);
	op_stkvar	(x,	0);
	set_cmt	(0X35002201,	"_DWORD",	0);
	set_cmt	(0X35002202,	"_DWORD",	0);
	set_cmt	(0X35002207,	"_DWORD",	0);
	create_insn	(x=0X35002207);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X3500220C,	"_DWORD",	0);
	create_insn	(x=0X35002217);
	op_stkvar	(x,	1);
	set_cmt	(0X35002227,	"_DWORD",	0);
	create_insn	(x=0X35002229);
	op_stkvar	(x,	1);
	set_cmt	(0X3500222E,	"_DWORD",	0);
	set_cmt	(0X3500222F,	"_DWORD",	0);
	set_cmt	(0X35002230,	"_DWORD",	0);
	set_cmt	(0X35002231,	"_DWORD",	0);
	set_cmt	(0X3500223C,	"_DWORD",	0);
	create_insn	(x=0X3500223E);
	op_stkvar	(x,	1);
	set_cmt	(0X35002241,	"_DWORD",	0);
	set_cmt	(0X35002242,	"_DWORD",	0);
	set_cmt	(0X35002247,	"_DWORD",	0);
	create_insn	(x=0X35002247);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X3500224C,	"_DWORD",	0);
	set_cmt	(0X35002257,	"hObject",	0);
	create_insn	(x=0X3500225E);
	op_stkvar	(x,	1);
	set_cmt	(0X35002264,	"lpSystemTime",	0);
	create_insn	(x=0X35002265);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500226F);
	op_stkvar	(x,	1);
	create_insn	(x=0X35002272);
	op_stkvar	(x,	1);
	create_insn	(x=0X35002296);
	op_hex		(x,	1);
	create_insn	(0X350022C7);
	create_insn	(0X350022D5);
	create_insn	(0X350022DC);
	create_insn	(x=0X350022E1);
	op_stkvar	(x,	1);
	create_insn	(x=0X350022E8);
	op_stkvar	(x,	0);
	create_insn	(x=0X350022EB);
	op_stkvar	(x,	1);
	create_insn	(x=0X350022EF);
	op_stkvar	(x,	0);
	create_insn	(x=0X35002301);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500230D);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500231A);
	op_stkvar	(x,	1);
	create_insn	(x=0X35002326);
	op_stkvar	(x,	0);
	create_insn	(x=0X35002334);
	op_stkvar	(x,	0);
	create_insn	(0X35002339);
	create_insn	(x=0X3500233F);
	op_stkvar	(x,	1);
	create_insn	(0X35002347);
	create_insn	(x=0X3500234C);
	op_stkvar	(x,	1);
	create_insn	(0X35002352);
	create_insn	(x=0X35002358);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500235C);
	op_stkvar	(x,	0);
	create_insn	(x=0X35002364);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500236E);
	op_stkvar	(x,	0);
	create_insn	(x=0X35002377);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500237D);
	op_stkvar	(x,	0);
	create_insn	(x=0X35002391);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500239B);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500239E);
	op_stkvar	(x,	0);
	create_insn	(x=0X350023A8);
	op_stkvar	(x,	0);
	create_insn	(x=0X350023B3);
	op_stkvar	(x,	1);
	create_insn	(x=0X350023B6);
	op_stkvar	(x,	0);
	create_insn	(x=0X350023C0);
	op_stkvar	(x,	0);
	create_insn	(x=0X350023CB);
	op_stkvar	(x,	1);
	create_insn	(x=0X350023CE);
	op_stkvar	(x,	0);
	create_insn	(x=0X350023D8);
	op_stkvar	(x,	0);
	create_insn	(x=0X350023E3);
	op_stkvar	(x,	1);
	create_insn	(x=0X350023F0);
	op_hex		(x,	1);
	create_insn	(x=0X350023FE);
	op_stkvar	(x,	1);
	create_insn	(x=0X35002401);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500240E);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500241E);
	op_hex		(x,	1);
	create_insn	(x=0X35002425);
	op_hex		(x,	1);
	create_insn	(0X3500242C);
	create_insn	(x=0X35002430);
	op_stkvar	(x,	1);
	create_insn	(x=0X35002437);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500243F);
	op_stkvar	(x,	1);
	create_insn	(x=0X35002453);
	op_stkvar	(x,	1);
	create_insn	(x=0X35002459);
	op_stkvar	(x,	0);
	create_insn	(x=0X35002460);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500246A);
	op_stkvar	(x,	1);
	create_insn	(x=0X35002485);
	op_stkvar	(x,	1);
	create_insn	(x=0X35002492);
	op_stkvar	(x,	1);
	create_insn	(x=0X35002495);
	op_hex		(x,	1);
	create_insn	(x=0X350024A7);
	op_stkvar	(x,	1);
	create_insn	(x=0X350024BA);
	op_hex		(x,	1);
	create_insn	(x=0X350024C1);
	op_hex		(x,	1);
	create_insn	(x=0X350024C6);
	op_stkvar	(x,	1);
	create_insn	(x=0X350024C9);
	op_stkvar	(x,	0);
	create_insn	(x=0X350024D0);
	op_stkvar	(x,	0);
	create_insn	(x=0X350024E7);
	op_stkvar	(x,	1);
	create_insn	(x=0X350024ED);
	op_stkvar	(x,	1);
	create_insn	(x=0X350024F9);
	op_stkvar	(x,	1);
	create_insn	(x=0X350024FC);
	op_hex		(x,	1);
	create_insn	(x=0X35002508);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500251A);
	op_hex		(x,	1);
	create_insn	(x=0X35002521);
	op_hex		(x,	1);
	create_insn	(x=0X35002528);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500252B);
	op_stkvar	(x,	1);
	create_insn	(x=0X35002534);
	op_stkvar	(x,	0);
	create_insn	(x=0X35002540);
	op_stkvar	(x,	1);
	create_insn	(x=0X35002543);
	op_hex		(x,	1);
	create_insn	(x=0X35002546);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500254F);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500255E);
	op_stkvar	(x,	0);
	create_insn	(x=0X35002567);
	op_stkvar	(x,	0);
	create_insn	(x=0X35002571);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500257E);
	op_hex		(x,	1);
	create_insn	(x=0X3500258C);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500258F);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500259F);
	op_stkvar	(x,	1);
	create_insn	(x=0X350025B2);
	op_hex		(x,	1);
	create_insn	(x=0X350025B9);
	op_hex		(x,	1);
	create_insn	(0X350025C0);
	create_insn	(x=0X350025C2);
	op_stkvar	(x,	1);
	create_insn	(x=0X350025C9);
	op_stkvar	(x,	0);
	create_insn	(x=0X350025D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X350025F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X350025F6);
	op_stkvar	(x,	0);
	create_insn	(x=0X350025FD);
	op_stkvar	(x,	0);
	create_insn	(x=0X35002607);
	op_stkvar	(x,	1);
	create_insn	(x=0X35002625);
	op_stkvar	(x,	1);
	create_insn	(x=0X35002632);
	op_stkvar	(x,	1);
	create_insn	(x=0X35002635);
	op_hex		(x,	1);
	create_insn	(x=0X35002647);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500265A);
	op_hex		(x,	1);
	create_insn	(x=0X35002661);
	op_hex		(x,	1);
	create_insn	(x=0X35002666);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500266C);
	op_stkvar	(x,	0);
	create_insn	(x=0X35002673);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500268A);
	op_stkvar	(x,	1);
	create_insn	(x=0X35002690);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500269C);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500269F);
	op_hex		(x,	1);
	create_insn	(x=0X350026AB);
	op_stkvar	(x,	1);
	create_insn	(x=0X350026BE);
	op_stkvar	(x,	0);
	create_insn	(x=0X350026C5);
	op_hex		(x,	1);
	create_insn	(x=0X350026CC);
	op_stkvar	(x,	0);
	create_insn	(x=0X350026CF);
	op_hex		(x,	1);
	set_cmt	(0X350026E0,	"C",	0);
	create_insn	(x=0X350026E9);
	op_hex		(x,	1);
	set_cmt	(0X350026FD,	"C",	0);
	create_insn	(x=0X35002703);
	op_hex		(x,	1);
	create_insn	(x=0X3500270A);
	op_stkvar	(x,	0);
	create_insn	(x=0X35002719);
	op_stkvar	(x,	1);
	create_insn	(x=0X35002727);
	op_hex		(x,	1);
	create_insn	(x=0X35002730);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X35002739);
	op_stkvar	(x,	0);
	create_insn	(x=0X35002744);
	op_stkvar	(x,	1);
	create_insn	(x=0X35002757);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500276A);
	op_hex		(x,	1);
	create_insn	(x=0X35002771);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X35002776);
	op_hex		(x,	1);
	create_insn	(x=0X35002787);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500279A);
	op_hex		(x,	1);
	create_insn	(x=0X350027A1);
	op_stkvar	(x,	1);
	create_insn	(x=0X350027A7);
	op_hex		(x,	1);
	create_insn	(x=0X350027B7);
	op_stkvar	(x,	1);
	create_insn	(x=0X350027CA);
	op_hex		(x,	1);
	create_insn	(x=0X350027D1);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X350027D6);
	op_hex		(x,	1);
	create_insn	(x=0X350027E7);
	op_stkvar	(x,	1);
	create_insn	(x=0X350027FA);
	op_hex		(x,	1);
	create_insn	(x=0X35002801);
	op_stkvar	(x,	1);
	create_insn	(x=0X35002804);
	op_hex		(x,	1);
	create_insn	(x=0X35002817);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500282A);
	op_hex		(x,	1);
	create_insn	(x=0X35002831);
	op_hex		(x,	1);
	create_insn	(x=0X35002836);
	op_stkvar	(x,	1);
	create_insn	(x=0X35002850);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500285F);
	op_stkvar	(x,	1);
	create_insn	(x=0X35002872);
	op_hex		(x,	1);
	create_insn	(x=0X35002879);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X3500287E);
	op_hex		(x,	1);
	create_insn	(x=0X3500288C);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500289F);
	op_hex		(x,	1);
	create_insn	(x=0X350028A6);
	op_stkvar	(x,	1);
	create_insn	(x=0X350028A9);
	op_hex		(x,	1);
	create_insn	(x=0X350028B7);
	op_stkvar	(x,	1);
	create_insn	(x=0X350028CA);
	op_hex		(x,	1);
	create_insn	(x=0X350028D1);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X350028D6);
	op_hex		(x,	1);
	create_insn	(x=0X350028E7);
	op_stkvar	(x,	1);
	create_insn	(x=0X350028FA);
	op_hex		(x,	1);
	create_insn	(x=0X35002901);
	op_stkvar	(x,	1);
	create_insn	(x=0X35002907);
	op_hex		(x,	1);
	create_insn	(x=0X35002917);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500292A);
	op_stkvar	(x,	1);
	create_insn	(x=0X35002930);
	op_hex		(x,	1);
	create_insn	(x=0X35002937);
	op_hex		(x,	1);
	set_cmt	(0X3500293A,	"uCmdShow",	0);
	set_cmt	(0X3500293E,	"lpCmdLine",	0);
	make_array	(0X35002951,	0XF);
	create_insn	(0X35002960);
	create_insn	(x=0X35002963);
	op_hex		(x,	1);
	create_insn	(x=0X3500296E);
	op_hex		(x,	1);
	create_insn	(x=0X35002972);
	op_stkvar	(x,	1);
	set_cmt	(0X3500298B,	"SubStr",	0);
	create_insn	(x=0X3500298B);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X35002990,	"Str",	0);
	create_insn	(x=0X35002992);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500299A);
	op_hex		(x,	1);
	create_insn	(x=0X350029AB);
	op_stkvar	(x,	0);
	create_insn	(x=0X350029C5);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X350029CC);
	op_stkvar	(x,	0);
	create_insn	(x=0X350029EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X350029F1);
	op_hex		(x,	1);
	set_cmt	(0X350029F6,	"_DWORD",	0);
	set_cmt	(0X350029F8,	"_DWORD",	0);
	create_insn	(x=0X350029F8);
	op_stkvar	(x,	0);
	create_insn	(x=0X350029FD);
	op_hex		(x,	1);
	set_cmt	(0X35002A02,	"_DWORD",	0);
	create_insn	(x=0X35002A10);
	op_stkvar	(x,	1);
	create_insn	(x=0X35002A13);
	op_hex		(x,	1);
	create_insn	(0X35002A20);
	create_insn	(x=0X35002A23);
	op_hex		(x,	1);
	create_insn	(x=0X35002A2B);
	op_stkvar	(x,	0);
	create_insn	(x=0X35002A2E);
	op_stkvar	(x,	0);
	create_insn	(x=0X35002A35);
	op_stkvar	(x,	1);
	create_insn	(x=0X35002A39);
	op_stkvar	(x,	1);
	create_insn	(x=0X35002A3F);
	op_stkvar	(x,	0);
	create_insn	(x=0X35002A42);
	op_stkvar	(x,	1);
	create_insn	(x=0X35002A47);
	op_stkvar	(x,	0);
	create_insn	(x=0X35002A4D);
	op_stkvar	(x,	0);
	create_insn	(x=0X35002A53);
	op_stkvar	(x,	1);
	create_insn	(x=0X35002A58);
	op_stkvar	(x,	1);
	create_insn	(x=0X35002A5D);
	op_stkvar	(x,	0);
	create_insn	(x=0X35002A61);
	op_stkvar	(x,	1);
	create_insn	(x=0X35002A64);
	op_stkvar	(x,	1);
	create_insn	(x=0X35002A6A);
	op_stkvar	(x,	1);
	create_insn	(x=0X35002A6E);
	op_stkvar	(x,	0);
	create_insn	(x=0X35002A71);
	op_stkvar	(x,	1);
	make_array	(0X35002A82,	0XE);
	create_insn	(0X35002A90);
	create_insn	(x=0X35002A93);
	op_hex		(x,	1);
	create_insn	(x=0X35002A9B);
	op_stkvar	(x,	0);
	create_insn	(x=0X35002A9E);
	op_stkvar	(x,	0);
	create_insn	(x=0X35002AA3);
	op_stkvar	(x,	1);
	create_insn	(x=0X35002AAA);
	op_stkvar	(x,	1);
	create_insn	(x=0X35002AAD);
	op_stkvar	(x,	0);
	create_insn	(x=0X35002AB3);
	op_stkvar	(x,	0);
	create_insn	(x=0X35002AB6);
	op_stkvar	(x,	1);
	create_insn	(x=0X35002ABC);
	op_stkvar	(x,	0);
	create_insn	(x=0X35002AC2);
	op_stkvar	(x,	1);
	create_insn	(x=0X35002AC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X35002ACE);
	op_stkvar	(x,	0);
	create_insn	(x=0X35002AD3);
	op_stkvar	(x,	1);
	create_insn	(x=0X35002AD6);
	op_stkvar	(x,	1);
	create_insn	(x=0X35002ADD);
	op_stkvar	(x,	1);
	create_insn	(x=0X35002AE1);
	op_stkvar	(x,	0);
	create_insn	(x=0X35002AE4);
	op_stkvar	(x,	1);
	make_array	(0X35002AF5,	0XB);
	create_insn	(0X35002B00);
	create_insn	(x=0X35002B08);
	op_hex		(x,	1);
	create_insn	(x=0X35002B11);
	op_hex		(x,	1);
	create_insn	(x=0X35002B17);
	op_hex		(x,	1);
	create_insn	(x=0X35002B1B);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X35002B2D);
	op_stkvar	(x,	1);
	create_insn	(x=0X35002B43);
	op_hex		(x,	1);
	set_cmt	(0X35002B48,	"_DWORD",	0);
	set_cmt	(0X35002B4A,	"_DWORD",	0);
	set_cmt	(0X35002B4F,	"_DWORD",	0);
	set_cmt	(0X35002B51,	"_DWORD",	0);
	set_cmt	(0X35002B53,	"_DWORD",	0);
	create_insn	(x=0X35002B57);
	op_hex		(x,	1);
	set_cmt	(0X35002B5A,	"_DWORD",	0);
	set_cmt	(0X35002B61,	"_DWORD",	0);
	set_cmt	(0X35002B7B,	"_DWORD",	0);
	create_insn	(x=0X35002B7D);
	op_stkvar	(x,	1);
	create_insn	(x=0X35002B80);
	op_stkvar	(x,	0);
	set_cmt	(0X35002B87,	"_DWORD",	0);
	set_cmt	(0X35002B88,	"_DWORD",	0);
	set_cmt	(0X35002B8E,	"_DWORD",	0);
	create_insn	(x=0X35002B8E);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X35002B93,	"_DWORD",	0);
	create_insn	(x=0X35002BAF);
	op_hex		(x,	1);
	set_cmt	(0X35002BB1,	"_DWORD",	0);
	create_insn	(0X35002BC9);
	create_insn	(x=0X35002BDF);
	op_hex		(x,	1);
	set_cmt	(0X35002BE1,	"_DWORD",	0);
	make_array	(0X35002BF6,	0XA);
	create_insn	(0X35002C00);
	create_insn	(x=0X35002C16);
	op_hex		(x,	1);
	create_insn	(x=0X35002C1F);
	op_hex		(x,	1);
	create_insn	(x=0X35002C25);
	op_hex		(x,	1);
	create_insn	(x=0X35002C29);
	op_stkvar	(x,	1);
	create_insn	(x=0X35002C46);
	op_hex		(x,	1);
	make_array	(0X35002C57,	0X9);
	create_insn	(0X35002C60);
	create_insn	(x=0X35002C63);
	op_hex		(x,	1);
	create_byte	(0X35002C71);
	make_array	(0X35002C71,	0X3);
	create_dword	(0X35002C74);
	make_array	(0X35002C74,	0X8);
	create_insn	(x=0X35002C94);
	op_hex		(x,	1);
	create_insn	(x=0X35002CAB);
	op_stkvar	(x,	1);
	create_insn	(x=0X35002CC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X35002CCA);
	op_hex		(x,	1);
	create_insn	(x=0X35002CD1);
	op_hex		(x,	1);
	set_cmt	(0X35002CD4,	"_DWORD",	0);
	set_cmt	(0X35002CD7,	"_DWORD",	0);
	create_insn	(x=0X35002CDE);
	op_stkvar	(x,	1);
	create_insn	(x=0X35002CE5);
	op_stkvar	(x,	0);
	set_cmt	(0X35002CFD,	"SubStr",	0);
	create_insn	(x=0X35002CFD);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X35002D02,	"Str",	0);
	create_insn	(x=0X35002D03);
	op_hex		(x,	1);
	create_insn	(x=0X35002D0A);
	op_hex		(x,	1);
	create_insn	(x=0X35002D1D);
	op_hex		(x,	1);
	create_insn	(x=0X35002D30);
	op_stkvar	(x,	1);
	create_insn	(x=0X35002D4D);
	op_hex		(x,	1);
	create_insn	(x=0X35002D54);
	op_stkvar	(x,	1);
	set_cmt	(0X35002D5A,	"Ch",	0);
	set_cmt	(0X35002D5C,	"Str",	0);
	create_insn	(x=0X35002D62);
	op_hex		(x,	1);
	create_insn	(x=0X35002D69);
	op_stkvar	(x,	1);
	set_cmt	(0X35002D6F,	"_DWORD",	0);
	set_cmt	(0X35002D70,	"_DWORD",	0);
	create_insn	(x=0X35002D7F);
	op_stkvar	(x,	1);
	create_insn	(x=0X35002D9D);
	op_hex		(x,	1);
	create_insn	(x=0X35002DA4);
	op_stkvar	(x,	1);
	set_cmt	(0X35002DAA,	"SubStr",	0);
	create_insn	(x=0X35002DAA);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X35002DAF,	"Str",	0);
	create_insn	(x=0X35002DB5);
	op_hex		(x,	1);
	create_insn	(x=0X35002DBC);
	op_stkvar	(x,	1);
	set_cmt	(0X35002DC2,	"_DWORD",	0);
	set_cmt	(0X35002DC3,	"_DWORD",	0);
	create_insn	(x=0X35002DD2);
	op_stkvar	(x,	1);
	set_cmt	(0X35002DD8,	"SubStr",	0);
	create_insn	(x=0X35002DD8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X35002DDD,	"Str",	0);
	create_insn	(x=0X35002DE3);
	op_hex		(x,	1);
	create_insn	(x=0X35002DEE);
	op_stkvar	(x,	1);
	set_cmt	(0X35002DF4,	"SubStr",	0);
	create_insn	(x=0X35002DF4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X35002DF9,	"Str",	0);
	create_insn	(x=0X35002DFF);
	op_hex		(x,	1);
	create_insn	(x=0X35002E0A);
	op_stkvar	(x,	1);
	set_cmt	(0X35002E10,	"SubStr",	0);
	create_insn	(x=0X35002E10);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X35002E15,	"Str",	0);
	create_insn	(x=0X35002E1B);
	op_hex		(x,	1);
	create_insn	(x=0X35002E26);
	op_stkvar	(x,	1);
	set_cmt	(0X35002E2C,	"SubStr",	0);
	create_insn	(x=0X35002E2C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X35002E31,	"Str",	0);
	create_insn	(x=0X35002E37);
	op_hex		(x,	1);
	create_insn	(x=0X35002E42);
	op_stkvar	(x,	1);
	set_cmt	(0X35002E48,	"SubStr",	0);
	create_insn	(x=0X35002E48);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X35002E4D,	"Str",	0);
	create_insn	(x=0X35002E53);
	op_hex		(x,	1);
	create_insn	(x=0X35002E5A);
	op_stkvar	(x,	1);
	set_cmt	(0X35002E60,	"SubStr",	0);
	create_insn	(x=0X35002E60);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X35002E65,	"Str",	0);
	create_insn	(x=0X35002E6B);
	op_hex		(x,	1);
	create_insn	(x=0X35002E72);
	op_stkvar	(x,	1);
	set_cmt	(0X35002E78,	"SubStr",	0);
	create_insn	(x=0X35002E78);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X35002E7D,	"Str",	0);
	create_insn	(x=0X35002E83);
	op_hex		(x,	1);
	create_insn	(x=0X35002E8A);
	op_stkvar	(x,	1);
	set_cmt	(0X35002E90,	"SubStr",	0);
	create_insn	(x=0X35002E90);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X35002E95,	"Str",	0);
	create_insn	(x=0X35002E9B);
	op_hex		(x,	1);
	create_insn	(x=0X35002EA2);
	op_stkvar	(x,	1);
	set_cmt	(0X35002EA8,	"SubStr",	0);
	create_insn	(x=0X35002EA8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X35002EAD,	"Str",	0);
	create_insn	(x=0X35002EB3);
	op_hex		(x,	1);
	create_insn	(x=0X35002EBA);
	op_stkvar	(x,	1);
	set_cmt	(0X35002EC0,	"SubStr",	0);
	create_insn	(x=0X35002EC0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X35002EC5,	"Str",	0);
	create_insn	(x=0X35002ECB);
	op_hex		(x,	1);
	create_insn	(x=0X35002ED6);
	op_stkvar	(x,	1);
	set_cmt	(0X35002EDC,	"_DWORD",	0);
	set_cmt	(0X35002EDD,	"_DWORD",	0);
	create_insn	(x=0X35002EF0);
	op_stkvar	(x,	1);
	set_cmt	(0X35002EF6,	"SubStr",	0);
	create_insn	(x=0X35002EF6);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X35002EFB,	"Str",	0);
	create_insn	(x=0X35002F01);
	op_hex		(x,	1);
	create_insn	(x=0X35002F0C);
	op_stkvar	(x,	1);
	set_cmt	(0X35002F12,	"SubStr",	0);
	create_insn	(x=0X35002F12);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X35002F17,	"Str",	0);
	create_insn	(x=0X35002F1D);
	op_hex		(x,	1);
	create_insn	(x=0X35002F28);
	op_stkvar	(x,	1);
	set_cmt	(0X35002F2E,	"SubStr",	0);
	create_insn	(x=0X35002F2E);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X35002F33,	"Str",	0);
	create_insn	(x=0X35002F39);
	op_hex		(x,	1);
	create_insn	(x=0X35002F40);
	op_stkvar	(x,	1);
	set_cmt	(0X35002F46,	"SubStr",	0);
	create_insn	(x=0X35002F46);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X35002F4B,	"Str",	0);
	create_insn	(x=0X35002F51);
	op_hex		(x,	1);
	create_insn	(x=0X35002F58);
	op_stkvar	(x,	1);
	set_cmt	(0X35002F5E,	"SubStr",	0);
	create_insn	(x=0X35002F5E);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X35002F63,	"Str",	0);
	create_insn	(x=0X35002F69);
	op_hex		(x,	1);
	create_insn	(x=0X35002F70);
	op_stkvar	(x,	1);
	set_cmt	(0X35002F76,	"SubStr",	0);
	create_insn	(x=0X35002F76);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X35002F7B,	"Str",	0);
	create_insn	(x=0X35002F81);
	op_hex		(x,	1);
	create_insn	(x=0X35002F88);
	op_stkvar	(x,	1);
	set_cmt	(0X35002F8E,	"SubStr",	0);
	create_insn	(x=0X35002F8E);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X35002F93,	"Str",	0);
	create_insn	(x=0X35002F99);
	op_hex		(x,	1);
	create_insn	(x=0X35002FA0);
	op_stkvar	(x,	1);
	set_cmt	(0X35002FA6,	"SubStr",	0);
	create_insn	(x=0X35002FA6);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X35002FAB,	"Str",	0);
	create_insn	(x=0X35002FB1);
	op_hex		(x,	1);
	create_insn	(x=0X35002FBC);
	op_stkvar	(x,	1);
	set_cmt	(0X35002FC2,	"_DWORD",	0);
	set_cmt	(0X35002FC3,	"_DWORD",	0);
	create_insn	(x=0X35002FD2);
	op_stkvar	(x,	1);
	set_cmt	(0X35002FD8,	"SubStr",	0);
	create_insn	(x=0X35002FD8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X35002FDD,	"Str",	0);
	create_insn	(x=0X35002FE3);
	op_hex		(x,	1);
	create_insn	(x=0X35002FEE);
	op_stkvar	(x,	1);
	set_cmt	(0X35002FF4,	"SubStr",	0);
	create_insn	(x=0X35002FF4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X35002FF9,	"Str",	0);
	create_insn	(x=0X35002FFF);
	op_hex		(x,	1);
	create_insn	(x=0X3500300A);
	op_stkvar	(x,	1);
	set_cmt	(0X35003010,	"SubStr",	0);
	create_insn	(x=0X35003010);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X35003015,	"Str",	0);
	create_insn	(x=0X3500301B);
	op_hex		(x,	1);
	create_insn	(x=0X35003026);
	op_stkvar	(x,	1);
	set_cmt	(0X3500302C,	"SubStr",	0);
	create_insn	(x=0X3500302C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X35003031,	"Str",	0);
	create_insn	(x=0X35003037);
	op_hex		(x,	1);
	create_insn	(x=0X35003042);
	op_stkvar	(x,	1);
	set_cmt	(0X35003048,	"SubStr",	0);
	create_insn	(x=0X35003048);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X3500304D,	"Str",	0);
	create_insn	(x=0X35003053);
	op_hex		(x,	1);
	create_insn	(x=0X3500305E);
	op_stkvar	(x,	1);
	set_cmt	(0X35003064,	"SubStr",	0);
	create_insn	(x=0X35003064);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X35003069,	"Str",	0);
	create_insn	(x=0X3500306F);
	op_hex		(x,	1);
	create_insn	(x=0X3500307A);
	op_stkvar	(x,	1);
	set_cmt	(0X35003080,	"SubStr",	0);
	create_insn	(x=0X35003080);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X35003085,	"Str",	0);
	create_insn	(x=0X3500308B);
	op_hex		(x,	1);
	create_insn	(x=0X35003096);
	op_stkvar	(x,	1);
	set_cmt	(0X3500309C,	"SubStr",	0);
	create_insn	(x=0X3500309C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X350030A1,	"Str",	0);
	create_insn	(x=0X350030A7);
	op_hex		(x,	1);
	create_insn	(x=0X350030B2);
	op_stkvar	(x,	1);
	set_cmt	(0X350030B8,	"SubStr",	0);
	create_insn	(x=0X350030B8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X350030BD,	"Str",	0);
	create_insn	(x=0X350030C3);
	op_hex		(x,	1);
	create_insn	(x=0X350030CE);
	op_stkvar	(x,	1);
	set_cmt	(0X350030D4,	"SubStr",	0);
	create_insn	(x=0X350030D4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X350030D9,	"Str",	0);
	create_insn	(x=0X350030DF);
	op_hex		(x,	1);
	create_insn	(x=0X350030EA);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0X350030FD);
	op_stkvar	(x,	1);
	create_insn	(x=0X35003103);
	op_hex		(x,	1);
	create_insn	(x=0X3500312F);
	op_stkvar	(x,	0);
	create_insn	(x=0X35003134);
	op_stkvar	(x,	0);
	create_insn	(x=0X35003137);
	op_hex		(x,	1);
	create_insn	(x=0X3500313A);
	op_stkvar	(x,	0);
	create_insn	(x=0X35003141);
	op_hex		(x,	1);
	create_insn	(x=0X3500314C);
	op_stkvar	(x,	1);
	create_insn	(x=0X35003157);
	op_hex		(x,	1);
	create_insn	(x=0X3500316D);
	op_stkvar	(x,	1);
	create_insn	(x=0X35003173);
	op_hex		(x,	1);
	create_insn	(x=0X3500318D);
	op_hex		(x,	1);
	create_insn	(0X3500319D);
	create_insn	(x=0X3500319F);
	op_stkvar	(x,	1);
	create_insn	(x=0X350031B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X350031BB);
	op_stkvar	(x,	0);
	create_insn	(x=0X350031C8);
	op_stkvar	(x,	1);
	set_cmt	(0X350031CE,	"SubStr",	0);
	create_insn	(x=0X350031CE);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X350031D3,	"Str",	0);
	create_insn	(x=0X350031D9);
	op_hex		(x,	1);
	create_insn	(x=0X350031E4);
	op_stkvar	(x,	1);
	set_cmt	(0X350031EA,	"SubStr",	0);
	create_insn	(x=0X350031EA);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X350031EF,	"Str",	0);
	create_insn	(x=0X350031F5);
	op_hex		(x,	1);
	set_cmt	(0X35003200,	"SubStr",	0);
	create_insn	(x=0X35003200);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X35003205,	"Str",	0);
	create_insn	(x=0X3500320B);
	op_hex		(x,	1);
	set_cmt	(0X35003216,	"SubStr",	0);
	create_insn	(x=0X35003216);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X3500321B,	"Str",	0);
	create_insn	(x=0X35003221);
	op_hex		(x,	1);
	create_insn	(x=0X3500322C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X35003233);
	op_stkvar	(x,	1);
	set_cmt	(0X35003239,	"SubStr",	0);
	set_cmt	(0X3500323A,	"Str",	0);
	create_insn	(x=0X35003240);
	op_hex		(x,	1);
	create_insn	(x=0X3500325F);
	op_hex		(x,	1);
	create_insn	(x=0X35003271);
	op_hex		(x,	1);
	create_insn	(x=0X35003290);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X3500329C);
	op_hex		(x,	1);
	set_cmt	(0X350032A3,	"_DWORD",	0);
	create_insn	(x=0X350032B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X350032B3);
	op_stkvar	(x,	1);
	create_insn	(x=0X350032BB);
	op_stkvar	(x,	1);
	create_insn	(x=0X350032E1);
	op_stkvar	(x,	1);
	create_insn	(x=0X35003310);
	op_hex		(x,	1);
	set_cmt	(0X35003315,	"_DWORD",	0);
	set_cmt	(0X35003317,	"_DWORD",	0);
	set_cmt	(0X35003319,	"_DWORD",	0);
	set_cmt	(0X3500331A,	"_DWORD",	0);
	create_insn	(x=0X3500331A);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X35003321);
	op_hex		(x,	1);
	set_cmt	(0X35003324,	"_DWORD",	0);
	set_cmt	(0X35003328,	"_DWORD",	0);
	set_cmt	(0X35003330,	"hObject",	0);
	create_insn	(x=0X35003337);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500333A);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500333D);
	op_stkvar	(x,	1);
	set_cmt	(0X35003343,	"_DWORD",	0);
	set_cmt	(0X35003344,	"_DWORD",	0);
	set_cmt	(0X35003353,	"_DWORD",	0);
	make_array	(0X35003361,	0XF);
	create_insn	(0X35003370);
	create_insn	(x=0X3500337D);
	op_stkvar	(x,	1);
	create_insn	(x=0X35003390);
	op_stkvar	(x,	1);
	set_cmt	(0X35003393,	"_DWORD",	0);
	set_cmt	(0X35003394,	"_DWORD",	0);
	set_cmt	(0X35003396,	"_DWORD",	0);
	set_cmt	(0X35003398,	"_DWORD",	0);
	set_cmt	(0X3500339A,	"_DWORD",	0);
	create_insn	(x=0X3500339C);
	op_stkvar	(x,	0);
	create_insn	(x=0X350033A3);
	op_stkvar	(x,	0);
	create_insn	(x=0X350033B2);
	op_stkvar	(x,	1);
	create_insn	(x=0X350033B5);
	op_stkvar	(x,	0);
	create_insn	(x=0X350033BC);
	op_stkvar	(x,	0);
	create_insn	(x=0X350033C2);
	op_stkvar	(x,	0);
	create_insn	(x=0X350033CC);
	op_hex		(x,	1);
	set_cmt	(0X350033CF,	"_DWORD",	0);
	set_cmt	(0X350033D1,	"_DWORD",	0);
	set_cmt	(0X350033D6,	"_DWORD",	0);
	create_insn	(x=0X350033D6);
	op_stkvar	(x,	0);
	set_cmt	(0X350033D9,	"_DWORD",	0);
	create_insn	(x=0X350033E3);
	op_stkvar	(x,	0);
	create_insn	(x=0X350033EE);
	op_stkvar	(x,	1);
	set_cmt	(0X350033F1,	"_DWORD",	0);
	set_cmt	(0X350033F2,	"_DWORD",	0);
	set_cmt	(0X350033F3,	"_DWORD",	0);
	set_cmt	(0X350033F5,	"_DWORD",	0);
	set_cmt	(0X350033F7,	"_DWORD",	0);
	create_insn	(x=0X35003401);
	op_stkvar	(x,	0);
	create_insn	(x=0X35003407);
	op_stkvar	(x,	0);
	set_cmt	(0X3500341B,	"_DWORD",	0);
	create_insn	(x=0X3500341D);
	op_stkvar	(x,	1);
	create_insn	(x=0X35003420);
	op_stkvar	(x,	0);
	set_cmt	(0X35003427,	"_DWORD",	0);
	create_insn	(x=0X3500342B);
	op_stkvar	(x,	0);
	set_cmt	(0X35003431,	"_DWORD",	0);
	set_cmt	(0X35003435,	"_DWORD",	0);
	create_insn	(x=0X35003437);
	op_stkvar	(x,	0);
	create_insn	(x=0X35003450);
	op_stkvar	(x,	1);
	create_insn	(x=0X35003457);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500345F);
	op_stkvar	(x,	0);
	create_insn	(x=0X35003469);
	op_stkvar	(x,	1);
	set_cmt	(0X3500346C,	"SubStr",	0);
	create_insn	(x=0X3500346C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X35003471,	"Str",	0);
	create_insn	(x=0X35003477);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500347A);
	op_hex		(x,	1);
	set_cmt	(0X35003483,	"SubStr",	0);
	create_insn	(x=0X35003483);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X35003488,	"Str",	0);
	create_insn	(x=0X3500348E);
	op_hex		(x,	1);
	create_insn	(x=0X35003495);
	op_stkvar	(x,	1);
	set_cmt	(0X35003498,	"SubStr",	0);
	create_insn	(x=0X35003498);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X3500349D,	"Str",	0);
	create_insn	(x=0X350034A3);
	op_hex		(x,	1);
	create_insn	(x=0X350034AE);
	op_stkvar	(x,	1);
	set_cmt	(0X350034B1,	"cp",	0);
	create_insn	(x=0X350034B8);
	op_stkvar	(x,	0);
	create_insn	(x=0X350034CC);
	op_stkvar	(x,	0);
	create_insn	(x=0X350034CF);
	op_hex		(x,	1);
	create_insn	(x=0X350034E8);
	op_stkvar	(x,	0);
	create_insn	(0X350034F1);
	create_insn	(x=0X35003501);
	op_stkvar	(x,	0);
	create_insn	(x=0X35003504);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500350A);
	op_hex		(x,	1);
	create_insn	(x=0X3500351A);
	op_hex		(x,	1);
	create_insn	(x=0X35003529);
	op_hex		(x,	1);
	create_insn	(x=0X35003531);
	op_hex		(x,	1);
	create_insn	(x=0X35003536);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500353A);
	op_hex		(x,	1);
	create_insn	(x=0X3500354C);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500354F);
	op_stkvar	(x,	0);
	create_insn	(x=0X35003554);
	op_stkvar	(x,	0);
	create_insn	(x=0X35003568);
	op_stkvar	(x,	1);
	create_insn	(0X3500356D);
	create_insn	(x=0X3500356F);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500357E);
	op_stkvar	(x,	1);
	create_insn	(0X35003583);
	create_insn	(x=0X35003587);
	op_stkvar	(x,	0);
	create_insn	(x=0X35003596);
	op_stkvar	(x,	1);
	create_insn	(0X3500359B);
	create_insn	(x=0X3500359D);
	op_stkvar	(x,	0);
	create_insn	(x=0X350035A7);
	op_stkvar	(x,	1);
	create_insn	(x=0X350035AD);
	op_stkvar	(x,	1);
	create_insn	(x=0X350035B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X350035B3);
	op_stkvar	(x,	0);
	create_insn	(x=0X350035B7);
	op_stkvar	(x,	1);
	create_insn	(x=0X350035BA);
	op_stkvar	(x,	1);
	create_insn	(x=0X350035C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X350035C3);
	op_stkvar	(x,	0);
	create_insn	(x=0X350035C6);
	op_stkvar	(x,	1);
	create_insn	(x=0X350035C9);
	op_stkvar	(x,	0);
	create_insn	(x=0X350035CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X350035CF);
	op_stkvar	(x,	0);
	create_insn	(x=0X350035D6);
	op_stkvar	(x,	0);
	create_insn	(x=0X350035E7);
	op_stkvar	(x,	0);
	create_insn	(x=0X350035EE);
	op_stkvar	(x,	0);
	create_insn	(x=0X350035F3);
	op_stkvar	(x,	0);
	create_insn	(x=0X350035FD);
	op_stkvar	(x,	0);
	create_insn	(0X35003602);
	create_insn	(x=0X3500360F);
	op_stkvar	(x,	0);
	create_insn	(x=0X35003618);
	op_stkvar	(x,	0);
	create_insn	(0X3500361D);
	create_insn	(x=0X3500362C);
	op_stkvar	(x,	0);
	create_insn	(x=0X35003632);
	op_stkvar	(x,	0);
	create_insn	(x=0X35003639);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500363C);
	op_stkvar	(x,	0);
	create_insn	(x=0X35003644);
	op_stkvar	(x,	0);
	create_insn	(x=0X35003647);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500364B);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500364F);
	op_stkvar	(x,	1);
	create_insn	(x=0X35003652);
	op_stkvar	(x,	1);
	create_insn	(x=0X35003655);
	op_stkvar	(x,	0);
	create_insn	(x=0X35003658);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500365F);
	op_stkvar	(x,	1);
	create_insn	(x=0X35003662);
	op_stkvar	(x,	0);
	create_insn	(x=0X35003665);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500366E);
	op_stkvar	(x,	1);
	create_insn	(x=0X35003674);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500367F);
	op_stkvar	(x,	1);
	create_insn	(x=0X35003685);
	op_stkvar	(x,	0);
	create_insn	(x=0X35003690);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500369B);
	op_stkvar	(x,	1);
	create_insn	(x=0X350036B2);
	op_hex		(x,	1);
	create_insn	(x=0X350036BB);
	op_hex		(x,	1);
	set_cmt	(0X350036CB,	"_DWORD",	0);
	set_cmt	(0X350036D6,	"_DWORD",	0);
	set_cmt	(0X350036DB,	"_DWORD",	0);
	create_insn	(x=0X350036DD);
	op_stkvar	(x,	1);
	set_cmt	(0X350036E3,	"_DWORD",	0);
	set_cmt	(0X350036E4,	"_DWORD",	0);
	create_insn	(0X350036ED);
	create_insn	(x=0X350036EF);
	op_hex		(x,	1);
	set_cmt	(0X350036F7,	"_DWORD",	0);
	create_insn	(0X350036F7);
	set_cmt	(0X350036F9,	"_DWORD",	0);
	set_cmt	(0X350036FB,	"_DWORD",	0);
	set_cmt	(0X350036FC,	"_DWORD",	0);
	create_insn	(x=0X350036FC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X35003701,	"_DWORD",	0);
	set_cmt	(0X35003703,	"_DWORD",	0);
	create_insn	(x=0X3500370B);
	op_stkvar	(x,	0);
	create_insn	(x=0X35003712);
	op_stkvar	(x,	1);
	set_cmt	(0X35003727,	"_DWORD",	0);
	set_cmt	(0X35003732,	"_DWORD",	0);
	set_cmt	(0X35003737,	"_DWORD",	0);
	create_insn	(x=0X35003739);
	op_stkvar	(x,	1);
	set_cmt	(0X3500373F,	"_DWORD",	0);
	set_cmt	(0X35003740,	"_DWORD",	0);
	set_cmt	(0X3500374B,	"_DWORD",	0);
	create_insn	(x=0X35003756);
	op_stkvar	(x,	1);
	set_cmt	(0X35003759,	"_DWORD",	0);
	set_cmt	(0X3500375E,	"_DWORD",	0);
	set_cmt	(0X35003760,	"_DWORD",	0);
	make_array	(0X35003773,	0XD);
	create_insn	(0X35003780);
	create_insn	(x=0X35003783);
	op_hex		(x,	1);
	create_insn	(x=0X35003797);
	op_hex		(x,	1);
	create_insn	(0X350037A9);
	create_insn	(x=0X350037AA);
	op_stkvar	(x,	0);
	set_cmt	(0X350037B4,	"_DWORD",	0);
	set_cmt	(0X350037B6,	"_DWORD",	0);
	create_insn	(x=0X350037C0);
	op_stkvar	(x,	0);
	create_insn	(x=0X350037CC);
	op_stkvar	(x,	1);
	set_cmt	(0X350037D2,	"_DWORD",	0);
	set_cmt	(0X350037D3,	"_DWORD",	0);
	create_insn	(x=0X350037E2);
	op_stkvar	(x,	1);
	create_insn	(x=0X350037E9);
	op_stkvar	(x,	1);
	create_insn	(x=0X350037EC);
	op_stkvar	(x,	0);
	create_insn	(x=0X35003804);
	op_hex		(x,	1);
	set_cmt	(0X35003813,	"C",	0);
	create_insn	(x=0X3500381E);
	op_hex		(x,	1);
	create_insn	(x=0X3500383D);
	op_hex		(x,	1);
	create_insn	(x=0X35003846);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500384C);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500384F);
	op_stkvar	(x,	1);
	create_insn	(x=0X35003852);
	op_stkvar	(x,	1);
	set_cmt	(0X35003858,	"_DWORD",	0);
	set_cmt	(0X35003859,	"_DWORD",	0);
	create_insn	(x=0X3500386B);
	op_stkvar	(x,	0);
	create_insn	(x=0X35003870);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500388D);
	op_hex		(x,	1);
	create_insn	(x=0X35003891);
	op_stkvar	(x,	1);
	set_cmt	(0X35003899,	"C",	0);
	create_insn	(x=0X3500389F);
	op_stkvar	(x,	0);
	create_insn	(x=0X350038A7);
	op_hex		(x,	1);
	create_insn	(x=0X350038AA);
	op_stkvar	(x,	1);
	create_insn	(x=0X350038C1);
	op_hex		(x,	1);
	create_insn	(x=0X350038D1);
	op_stkvar	(x,	1);
	create_insn	(x=0X350038D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X350038EF);
	op_hex		(x,	1);
	create_insn	(x=0X35003901);
	op_hex		(x,	1);
	create_insn	(x=0X35003907);
	op_stkvar	(x,	1);
	set_cmt	(0X3500390D,	"SubStr",	0);
	set_cmt	(0X3500390E,	"Str",	0);
	create_insn	(x=0X35003914);
	op_hex		(x,	1);
	create_insn	(x=0X3500391D);
	op_stkvar	(x,	1);
	create_insn	(0X35003949);
	create_insn	(x=0X3500394B);
	op_hex		(x,	1);
	create_insn	(x=0X35003952);
	op_stkvar	(x,	1);
	create_insn	(0X35003966);
	create_insn	(x=0X35003970);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X3500397A);
	op_stkvar	(x,	0);
	create_insn	(x=0X35003987);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500399B);
	op_stkvar	(x,	1);
	create_insn	(x=0X350039B4);
	op_hex		(x,	1);
	create_insn	(x=0X350039BB);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X350039C0);
	op_hex		(x,	1);
	create_insn	(x=0X350039D2);
	op_stkvar	(x,	1);
	create_insn	(x=0X350039EE);
	op_stkvar	(x,	1);
	create_insn	(x=0X350039F4);
	op_hex		(x,	1);
	set_cmt	(0X350039F9,	"_DWORD",	0);
	set_cmt	(0X350039FB,	"_DWORD",	0);
	set_cmt	(0X350039FD,	"_DWORD",	0);
	set_cmt	(0X350039FE,	"_DWORD",	0);
	create_insn	(x=0X350039FE);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X35003A05);
	op_hex		(x,	1);
	set_cmt	(0X35003A08,	"_DWORD",	0);
	set_cmt	(0X35003A0C,	"_DWORD",	0);
	create_insn	(x=0X35003A14);
	op_stkvar	(x,	1);
	create_insn	(x=0X35003A17);
	op_stkvar	(x,	1);
	create_insn	(x=0X35003A1A);
	op_stkvar	(x,	1);
	set_cmt	(0X35003A20,	"_DWORD",	0);
	set_cmt	(0X35003A21,	"_DWORD",	0);
	set_cmt	(0X35003A30,	"_DWORD",	0);
	make_array	(0X35003A43,	0XD);
	create_insn	(0X35003A50);
	create_insn	(x=0X35003A53);
	op_hex		(x,	1);
	create_byte	(0X35003A67);
	create_byte	(0X35003A68);
	create_insn	(0X35003A6E);
	create_insn	(x=0X35003A6F);
	op_stkvar	(x,	0);
	set_cmt	(0X35003A76,	"_DWORD",	0);
	set_cmt	(0X35003A78,	"_DWORD",	0);
	set_cmt	(0X35003A7A,	"_DWORD",	0);
	create_insn	(x=0X35003A86);
	op_stkvar	(x,	0);
	create_insn	(x=0X35003A91);
	op_stkvar	(x,	0);
	create_insn	(x=0X35003A94);
	op_stkvar	(x,	1);
	create_insn	(x=0X35003A98);
	op_stkvar	(x,	1);
	set_cmt	(0X35003A9B,	"_DWORD",	0);
	create_insn	(x=0X35003A9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X35003A9F);
	op_stkvar	(x,	0);
	set_cmt	(0X35003AA6,	"_DWORD",	0);
	create_insn	(x=0X35003AA7);
	op_stkvar	(x,	1);
	create_insn	(x=0X35003AAA);
	op_stkvar	(x,	0);
	set_cmt	(0X35003AB1,	"_DWORD",	0);
	set_cmt	(0X35003AB2,	"_DWORD",	0);
	set_cmt	(0X35003AB4,	"_DWORD",	0);
	set_cmt	(0X35003AB6,	"_DWORD",	0);
	set_cmt	(0X35003AB8,	"_DWORD",	0);
	set_cmt	(0X35003AB9,	"_DWORD",	0);
	create_insn	(x=0X35003ABA);
	op_stkvar	(x,	0);
	create_insn	(x=0X35003AC7);
	op_stkvar	(x,	1);
	set_cmt	(0X35003AD2,	"_DWORD",	0);
	set_cmt	(0X35003AD4,	"_DWORD",	0);
	set_cmt	(0X35003AD9,	"_DWORD",	0);
	set_cmt	(0X35003ADA,	"_DWORD",	0);
	create_insn	(x=0X35003AE4);
	op_stkvar	(x,	0);
	create_insn	(x=0X35003AF9);
	op_hex		(x,	1);
	create_insn	(x=0X35003B00);
	op_hex		(x,	1);
	create_insn	(x=0X35003B05);
	op_stkvar	(x,	1);
	create_insn	(x=0X35003B08);
	op_stkvar	(x,	1);
	create_insn	(x=0X35003B0B);
	op_stkvar	(x,	0);
	set_cmt	(0X35003B12,	"_DWORD",	0);
	create_insn	(x=0X35003B13);
	op_stkvar	(x,	1);
	create_insn	(x=0X35003B16);
	op_stkvar	(x,	0);
	set_cmt	(0X35003B1D,	"_DWORD",	0);
	create_insn	(x=0X35003B1E);
	op_stkvar	(x,	1);
	create_insn	(x=0X35003B21);
	op_stkvar	(x,	0);
	set_cmt	(0X35003B28,	"_DWORD",	0);
	set_cmt	(0X35003B29,	"_DWORD",	0);
	create_insn	(x=0X35003B2A);
	op_stkvar	(x,	1);
	set_cmt	(0X35003B2D,	"_DWORD",	0);
	set_cmt	(0X35003B2E,	"_DWORD",	0);
	set_cmt	(0X35003B30,	"_DWORD",	0);
	set_cmt	(0X35003B31,	"_DWORD",	0);
	create_insn	(x=0X35003B40);
	op_stkvar	(x,	1);
	create_insn	(x=0X35003B43);
	op_stkvar	(x,	0);
	create_insn	(x=0X35003B59);
	op_stkvar	(x,	0);
	create_insn	(x=0X35003B6B);
	op_stkvar	(x,	1);
	create_insn	(x=0X35003B6E);
	op_hex		(x,	1);
	set_cmt	(0X35003B76,	"C",	0);
	create_insn	(x=0X35003B7F);
	op_hex		(x,	1);
	create_insn	(x=0X35003B9D);
	op_hex		(x,	1);
	create_insn	(x=0X35003BA3);
	op_stkvar	(x,	1);
	create_insn	(x=0X35003BA6);
	op_stkvar	(x,	1);
	create_insn	(x=0X35003BAD);
	op_stkvar	(x,	0);
	create_insn	(x=0X35003BB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X35003BBF);
	op_stkvar	(x,	1);
	create_insn	(x=0X35003BC2);
	op_stkvar	(x,	0);
	create_insn	(x=0X35003BDD);
	op_hex		(x,	1);
	set_cmt	(0X35003BE6,	"C",	0);
	create_insn	(x=0X35003BF4);
	op_hex		(x,	1);
	create_insn	(x=0X35003C0D);
	op_hex		(x,	1);
	create_insn	(x=0X35003C16);
	op_stkvar	(x,	0);
	create_insn	(x=0X35003C1C);
	op_stkvar	(x,	1);
	create_insn	(x=0X35003C1F);
	op_stkvar	(x,	1);
	create_insn	(x=0X35003C22);
	op_stkvar	(x,	0);
	create_insn	(x=0X35003C25);
	op_stkvar	(x,	0);
	create_insn	(x=0X35003C2A);
	op_stkvar	(x,	0);
	create_insn	(x=0X35003C2D);
	op_stkvar	(x,	0);
	create_insn	(x=0X35003C36);
	op_stkvar	(x,	1);
	create_insn	(x=0X35003C56);
	op_hex		(x,	1);
	create_insn	(x=0X35003C6D);
	op_stkvar	(x,	1);
	create_insn	(x=0X35003C70);
	op_hex		(x,	1);
	set_cmt	(0X35003C76,	"SubStr",	0);
	set_cmt	(0X35003C77,	"Str",	0);
	create_insn	(x=0X35003C7D);
	op_hex		(x,	1);
	create_insn	(0X35003CAE);
	create_insn	(x=0X35003CB0);
	op_hex		(x,	1);
	create_insn	(x=0X35003CB7);
	op_stkvar	(x,	1);
	create_insn	(x=0X35003CBE);
	op_stkvar	(x,	0);
	create_insn	(x=0X35003CC1);
	op_stkvar	(x,	1);
	create_insn	(0X35003CCF);
	create_insn	(x=0X35003CD1);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X35003CDB);
	op_stkvar	(x,	0);
	create_insn	(x=0X35003CE8);
	op_stkvar	(x,	1);
	create_insn	(x=0X35003CEB);
	op_stkvar	(x,	1);
	create_insn	(x=0X35003D01);
	op_stkvar	(x,	1);
	create_insn	(x=0X35003D1E);
	op_hex		(x,	1);
	create_insn	(x=0X35003D25);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X35003D2A);
	op_hex		(x,	1);
	create_insn	(x=0X35003D3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X35003D5E);
	op_stkvar	(x,	1);
	create_insn	(x=0X35003D64);
	op_hex		(x,	1);
	set_cmt	(0X35003D69,	"_DWORD",	0);
	set_cmt	(0X35003D6B,	"_DWORD",	0);
	set_cmt	(0X35003D6D,	"_DWORD",	0);
	set_cmt	(0X35003D6E,	"_DWORD",	0);
	create_insn	(x=0X35003D6E);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X35003D75);
	op_hex		(x,	1);
	set_cmt	(0X35003D78,	"_DWORD",	0);
	set_cmt	(0X35003D7C,	"_DWORD",	0);
	set_cmt	(0X35003D84,	"_DWORD",	0);
	create_insn	(x=0X35003D8F);
	op_stkvar	(x,	1);
	create_insn	(x=0X35003D95);
	op_stkvar	(x,	0);
	create_insn	(x=0X35003D99);
	op_stkvar	(x,	0);
	create_insn	(x=0X35003DA2);
	op_stkvar	(x,	1);
	set_cmt	(0X35003DA5,	"_DWORD",	0);
	set_cmt	(0X35003DAC,	"_DWORD",	0);
	set_cmt	(0X35003DB1,	"_DWORD",	0);
	set_cmt	(0X35003DB3,	"_DWORD",	0);
	create_insn	(x=0X35003DB3);
	op_stkvar	(x,	0);
	create_insn	(x=0X35003DBC);
	op_stkvar	(x,	1);
	create_insn	(x=0X35003DC0);
	op_stkvar	(x,	0);
	set_cmt	(0X35003DD8,	"_DWORD",	0);
	create_insn	(0X35003DD8);
	set_cmt	(0X35003DDF,	"_DWORD",	0);
	set_cmt	(0X35003DE4,	"_DWORD",	0);
	set_cmt	(0X35003DE6,	"_DWORD",	0);
	create_insn	(x=0X35003DF6);
	op_stkvar	(x,	1);
	set_cmt	(0X35003DF9,	"_DWORD",	0);
	set_cmt	(0X35003E09,	"_DWORD",	0);
	create_insn	(0X35003E09);
	make_array	(0X35003E19,	0X7);
	create_insn	(0X35003E20);
	create_insn	(x=0X35003E23);
	op_hex		(x,	1);
	create_insn	(0X35003E31);
	create_insn	(0X35003E49);
	create_insn	(x=0X35003E4A);
	op_stkvar	(x,	1);
	create_insn	(x=0X35003E4D);
	op_stkvar	(x,	0);
	create_insn	(x=0X35003E54);
	op_stkvar	(x,	0);
	set_cmt	(0X35003E5B,	"_DWORD",	0);
	set_cmt	(0X35003E5C,	"_DWORD",	0);
	create_insn	(x=0X35003E5C);
	op_stkvar	(x,	0);
	create_insn	(x=0X35003E5F);
	op_stkvar	(x,	0);
	set_cmt	(0X35003E66,	"_DWORD",	0);
	set_cmt	(0X35003E68,	"_DWORD",	0);
	set_cmt	(0X35003E6A,	"_DWORD",	0);
	set_cmt	(0X35003E7A,	"_DWORD",	0);
	create_insn	(x=0X35003E7A);
	op_stkvar	(x,	0);
	set_cmt	(0X35003E7D,	"_DWORD",	0);
	create_insn	(x=0X35003E90);
	op_stkvar	(x,	1);
	create_insn	(x=0X35003E9B);
	op_hex		(x,	1);
	create_insn	(x=0X35003EA4);
	op_hex		(x,	1);
	create_insn	(x=0X35003EA9);
	op_stkvar	(x,	1);
	set_cmt	(0X35003EAC,	"_DWORD",	0);
	set_cmt	(0X35003EAD,	"_DWORD",	0);
	create_insn	(x=0X35003EAE);
	op_stkvar	(x,	1);
	set_cmt	(0X35003EB1,	"_DWORD",	0);
	set_cmt	(0X35003EB2,	"_DWORD",	0);
	create_insn	(x=0X35003EB2);
	op_stkvar	(x,	0);
	set_cmt	(0X35003ED6,	"Ch",	0);
	set_cmt	(0X35003ED8,	"Str",	0);
	create_insn	(x=0X35003EDE);
	op_hex		(x,	1);
	create_insn	(x=0X35003EFB);
	op_stkvar	(x,	1);
	create_insn	(x=0X35003F11);
	op_hex		(x,	1);
	create_insn	(x=0X35003F18);
	op_hex		(x,	1);
	create_insn	(x=0X35003F35);
	op_stkvar	(x,	1);
	create_insn	(x=0X35003F38);
	op_hex		(x,	1);
	set_cmt	(0X35003F45,	"_DWORD",	0);
	create_insn	(x=0X35003F4C);
	op_hex		(x,	1);
	create_insn	(0X35003F60);
	make_array	(0X35003F6C,	0X4);
	create_insn	(0X35003F70);
	create_insn	(x=0X35003F7B);
	op_hex		(x,	1);
	create_insn	(x=0X35003F7F);
	op_stkvar	(x,	1);
	make_array	(0X35003FB3,	0XD);
	create_insn	(0X35003FC0);
	create_insn	(x=0X35003FCB);
	op_hex		(x,	1);
	create_insn	(x=0X35003FCF);
	op_stkvar	(x,	1);
	create_insn	(x=0X35003FE0);
	op_hex		(x,	1);
	create_insn	(0X35003FF0);
	create_insn	(x=0X35003FF7);
	op_hex		(x,	1);
	create_insn	(0X35004000);
	create_insn	(0X35004018);
	set_cmt	(0X35004020,	"_DWORD",	0);
	set_cmt	(0X35004025,	"_DWORD",	0);
	set_cmt	(0X35004029,	"_DWORD",	0);
	create_insn	(x=0X35004029);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X3500402E,	"_DWORD",	0);
	set_cmt	(0X35004030,	"_DWORD",	0);
	create_insn	(x=0X35004030);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X35004043,	"_DWORD",	0);
	set_cmt	(0X35004045,	"_DWORD",	0);
	set_cmt	(0X35004047,	"_DWORD",	0);
	create_insn	(x=0X35004047);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X3500404C,	"_DWORD",	0);
	create_insn	(x=0X3500404C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X35004051,	"_DWORD",	0);
	create_insn	(x=0X35004051);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X3500405C,	"_DWORD",	0);
	set_cmt	(0X3500405E,	"_DWORD",	0);
	set_cmt	(0X35004060,	"_DWORD",	0);
	create_insn	(x=0X35004060);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X35004065,	"_DWORD",	0);
	create_insn	(x=0X35004065);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X3500406A,	"_DWORD",	0);
	create_insn	(x=0X3500406A);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X35004081);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X35004086);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X3500408D);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X35004092,	"_DWORD",	0);
	set_cmt	(0X35004094,	"_DWORD",	0);
	create_insn	(x=0X35004094);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X350040A3,	"_DWORD",	0);
	set_cmt	(0X350040A5,	"_DWORD",	0);
	set_cmt	(0X350040A7,	"_DWORD",	0);
	create_insn	(x=0X350040A7);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X350040AC,	"_DWORD",	0);
	create_insn	(x=0X350040AC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X350040B1,	"_DWORD",	0);
	create_insn	(x=0X350040B1);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X350040BC,	"_DWORD",	0);
	set_cmt	(0X350040BE,	"_DWORD",	0);
	set_cmt	(0X350040C0,	"_DWORD",	0);
	create_insn	(x=0X350040C0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X350040C5,	"_DWORD",	0);
	create_insn	(x=0X350040C5);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X350040CA,	"_DWORD",	0);
	create_insn	(x=0X350040CA);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X350040D9,	"_DWORD",	0);
	set_cmt	(0X350040DB,	"_DWORD",	0);
	set_cmt	(0X350040DD,	"_DWORD",	0);
	create_insn	(x=0X350040DD);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X350040E2,	"_DWORD",	0);
	create_insn	(x=0X350040E2);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X350040E7,	"_DWORD",	0);
	create_insn	(x=0X350040E7);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X350040F6,	"_DWORD",	0);
	set_cmt	(0X350040F8,	"_DWORD",	0);
	set_cmt	(0X350040FA,	"_DWORD",	0);
	create_insn	(x=0X350040FA);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X350040FF,	"_DWORD",	0);
	create_insn	(x=0X350040FF);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X35004104,	"_DWORD",	0);
	create_insn	(x=0X35004104);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X35004113,	"_DWORD",	0);
	set_cmt	(0X3500411B,	"_DWORD",	0);
	create_insn	(x=0X3500411B);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X35004120,	"_DWORD",	0);
	set_cmt	(0X35004122,	"_DWORD",	0);
	set_cmt	(0X35004124,	"_DWORD",	0);
	set_cmt	(0X35004129,	"_DWORD",	0);
	create_insn	(x=0X35004129);
	op_stkvar	(x,	0);
	set_cmt	(0X3500412C,	"_DWORD",	0);
	set_cmt	(0X3500413C,	"_DWORD",	0);
	make_array	(0X35004149,	0X7);
	create_insn	(0X35004150);
	create_insn	(x=0X35004153);
	op_hex		(x,	1);
	create_insn	(x=0X3500415D);
	op_hex		(x,	1);
	create_insn	(x=0X35004166);
	op_hex		(x,	1);
	create_insn	(x=0X3500416C);
	op_hex		(x,	1);
	create_word	(0X35004172);
	create_insn	(0X35004174);
	create_insn	(x=0X3500417A);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500417D);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500418F);
	op_stkvar	(x,	0);
	create_insn	(x=0X35004199);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500419C);
	op_hex		(x,	1);
	set_cmt	(0X350041A9,	"int",	0);
	create_insn	(x=0X350041B1);
	op_stkvar	(x,	0);
	create_insn	(x=0X350041B7);
	op_stkvar	(x,	1);
	create_insn	(x=0X350041BA);
	op_stkvar	(x,	0);
	set_cmt	(0X350041BF,	"int",	0);
	create_insn	(x=0X350041C0);
	op_stkvar	(x,	0);
	create_insn	(x=0X350041C7);
	op_stkvar	(x,	0);
	create_insn	(x=0X350041CD);
	op_stkvar	(x,	0);
	create_insn	(x=0X350041DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X350041ED);
	op_stkvar	(x,	1);
	create_insn	(x=0X350041FB);
	op_stkvar	(x,	1);
	create_insn	(x=0X35004204);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500420B);
	op_stkvar	(x,	1);
	create_insn	(x=0X35004214);
	op_stkvar	(x,	1);
	create_insn	(x=0X35004217);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500421F);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X3500422D);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X35004232);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500423F);
	op_hex		(x,	1);
	create_insn	(x=0X35004242);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500424A);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X35004258);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X3500425D);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500426C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X35004271);
	op_stkvar	(x,	1);
	create_insn	(x=0X35004280);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X35004285);
	op_stkvar	(x,	1);
	create_insn	(x=0X35004292);
	op_hex		(x,	1);
	create_insn	(x=0X35004295);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500429D);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X350042AB);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X350042B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X350042BF);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X350042C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X350042D3);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X350042D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X350042E5);
	op_hex		(x,	1);
	create_insn	(x=0X350042E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X350042F0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X350042FE);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X35004303);
	op_stkvar	(x,	1);
	create_insn	(x=0X35004312);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X35004317);
	op_stkvar	(x,	1);
	create_insn	(x=0X35004326);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X3500432B);
	op_stkvar	(x,	1);
	create_insn	(x=0X35004338);
	op_hex		(x,	1);
	create_insn	(x=0X3500433B);
	op_stkvar	(x,	1);
	create_insn	(x=0X35004343);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X35004351);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X35004356);
	op_stkvar	(x,	1);
	create_insn	(x=0X35004365);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X3500436A);
	op_stkvar	(x,	1);
	create_insn	(x=0X35004379);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X3500437E);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500438B);
	op_hex		(x,	1);
	create_insn	(x=0X3500438E);
	op_stkvar	(x,	1);
	create_insn	(x=0X35004396);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X350043A4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X350043A9);
	op_stkvar	(x,	1);
	create_insn	(x=0X350043B8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X350043BD);
	op_stkvar	(x,	1);
	create_insn	(x=0X350043CC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X350043D1);
	op_stkvar	(x,	1);
	create_insn	(x=0X350043DE);
	op_hex		(x,	1);
	create_insn	(x=0X350043E1);
	op_stkvar	(x,	1);
	create_insn	(x=0X350043E9);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X350043F7);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X350043FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500440B);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X35004410);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500441F);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X35004424);
	op_stkvar	(x,	1);
	create_insn	(x=0X35004431);
	op_hex		(x,	1);
	create_insn	(x=0X35004434);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500443C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X3500444A);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X3500444F);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500445E);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X35004463);
	op_stkvar	(x,	1);
	create_insn	(x=0X35004472);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X35004477);
	op_stkvar	(x,	1);
	create_insn	(x=0X35004484);
	op_hex		(x,	1);
	create_insn	(x=0X35004487);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500448F);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X3500449D);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X350044A2);
	op_stkvar	(x,	1);
	create_insn	(x=0X350044B1);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X350044B6);
	op_stkvar	(x,	1);
	create_insn	(x=0X350044C5);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X350044CA);
	op_stkvar	(x,	1);
	create_insn	(x=0X350044D7);
	op_hex		(x,	1);
	create_insn	(x=0X350044DC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X350044E1);
	op_stkvar	(x,	1);
	create_insn	(x=0X350044F3);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X350044F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X35004507);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X3500450C);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500451B);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X35004520);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500452D);
	op_hex		(x,	1);
	create_insn	(x=0X35004530);
	op_stkvar	(x,	1);
	create_insn	(x=0X35004538);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X35004546);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X3500454B);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500455A);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X3500455F);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500456E);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X35004573);
	op_stkvar	(x,	1);
	create_insn	(x=0X35004580);
	op_hex		(x,	1);
	create_insn	(x=0X35004583);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500458B);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X35004599);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X3500459E);
	op_stkvar	(x,	1);
	create_insn	(x=0X350045AD);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X350045B2);
	op_stkvar	(x,	1);
	create_insn	(x=0X350045C1);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X350045C6);
	op_stkvar	(x,	1);
	create_insn	(x=0X350045D3);
	op_hex		(x,	1);
	create_insn	(x=0X350045D6);
	op_stkvar	(x,	1);
	create_insn	(x=0X350045DE);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X350045EC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X350045F1);
	op_stkvar	(x,	1);
	create_insn	(x=0X35004600);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X35004605);
	op_stkvar	(x,	1);
	create_insn	(x=0X35004614);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X35004619);
	op_stkvar	(x,	1);
	create_insn	(x=0X35004626);
	op_hex		(x,	1);
	create_insn	(x=0X35004629);
	op_stkvar	(x,	1);
	create_insn	(x=0X35004631);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X3500463F);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X35004644);
	op_stkvar	(x,	1);
	create_insn	(x=0X35004653);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X35004658);
	op_stkvar	(x,	1);
	create_insn	(x=0X35004667);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X3500466C);
	op_stkvar	(x,	1);
	create_insn	(x=0X35004679);
	op_hex		(x,	1);
	create_insn	(x=0X3500467C);
	op_stkvar	(x,	1);
	create_insn	(x=0X35004684);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X35004692);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X35004697);
	op_stkvar	(x,	1);
	create_insn	(x=0X350046A6);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X350046AB);
	op_stkvar	(x,	1);
	create_insn	(x=0X350046BA);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X350046BF);
	op_stkvar	(x,	1);
	create_insn	(x=0X350046CC);
	op_hex		(x,	1);
	create_insn	(x=0X350046CF);
	op_stkvar	(x,	1);
	create_insn	(x=0X350046D7);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X350046E5);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X350046EA);
	op_stkvar	(x,	1);
	create_insn	(x=0X350046F9);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X350046FE);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500470D);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X35004712);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500471F);
	op_hex		(x,	1);
	create_insn	(x=0X35004722);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500472A);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X35004738);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X3500473D);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500474C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X35004751);
	op_stkvar	(x,	1);
	create_insn	(x=0X35004760);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X35004765);
	op_stkvar	(x,	1);
	create_insn	(x=0X35004772);
	op_hex		(x,	1);
	create_insn	(x=0X35004775);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500477D);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X3500478B);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X35004790);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500479F);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X350047A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X350047B3);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X350047B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X350047C5);
	op_hex		(x,	1);
	create_insn	(x=0X350047C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X350047D0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X350047DE);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X350047E3);
	op_stkvar	(x,	1);
	create_insn	(x=0X350047F2);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X350047F7);
	op_stkvar	(x,	1);
	create_insn	(x=0X35004806);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X3500480B);
	op_stkvar	(x,	1);
	create_insn	(x=0X35004818);
	op_hex		(x,	1);
	create_insn	(x=0X3500481B);
	op_stkvar	(x,	1);
	create_insn	(x=0X35004831);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X35004836);
	op_stkvar	(x,	1);
	create_insn	(x=0X35004845);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X3500484A);
	op_stkvar	(x,	1);
	create_insn	(x=0X35004859);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X3500485E);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500486B);
	op_hex		(x,	1);
	create_insn	(x=0X3500486E);
	op_stkvar	(x,	1);
	create_insn	(x=0X35004876);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X35004884);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X35004889);
	op_stkvar	(x,	1);
	create_insn	(x=0X35004898);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X3500489D);
	op_stkvar	(x,	1);
	create_insn	(x=0X350048AC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X350048B1);
	op_stkvar	(x,	1);
	create_insn	(x=0X350048BE);
	op_hex		(x,	1);
	create_insn	(x=0X350048C1);
	op_stkvar	(x,	1);
	create_insn	(x=0X350048C9);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X350048D7);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X350048DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X350048EB);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X350048F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X350048FF);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X35004904);
	op_stkvar	(x,	1);
	create_insn	(x=0X35004911);
	op_hex		(x,	1);
	create_insn	(x=0X35004916);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X3500491B);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500492A);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X3500492F);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500493E);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X35004943);
	op_stkvar	(x,	1);
	create_insn	(x=0X35004952);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X35004957);
	op_stkvar	(x,	1);
	create_insn	(x=0X35004964);
	op_hex		(x,	1);
	create_insn	(x=0X35004967);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500496F);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X3500497D);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X35004982);
	op_stkvar	(x,	1);
	create_insn	(x=0X35004991);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X35004996);
	op_stkvar	(x,	1);
	create_insn	(x=0X350049A5);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X350049AA);
	op_stkvar	(x,	1);
	create_insn	(x=0X350049B7);
	op_hex		(x,	1);
	create_insn	(x=0X350049BA);
	op_stkvar	(x,	1);
	create_insn	(x=0X350049C2);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X350049D0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X350049D5);
	op_stkvar	(x,	1);
	create_insn	(x=0X350049E4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X350049E9);
	op_stkvar	(x,	1);
	create_insn	(x=0X350049F8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X350049FD);
	op_stkvar	(x,	1);
	create_insn	(x=0X35004A0A);
	op_hex		(x,	1);
	create_insn	(x=0X35004A0D);
	op_stkvar	(x,	1);
	create_insn	(x=0X35004A15);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X35004A23);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X35004A28);
	op_stkvar	(x,	1);
	create_insn	(x=0X35004A37);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X35004A3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X35004A4B);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X35004A50);
	op_stkvar	(x,	1);
	create_insn	(x=0X35004A5D);
	op_hex		(x,	1);
	create_insn	(x=0X35004A60);
	op_stkvar	(x,	1);
	create_insn	(x=0X35004A68);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X35004A76);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X35004A7B);
	op_stkvar	(x,	1);
	create_insn	(x=0X35004A8A);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X35004A8F);
	op_stkvar	(x,	1);
	create_insn	(x=0X35004A9E);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X35004AA3);
	op_stkvar	(x,	1);
	create_insn	(x=0X35004AB0);
	op_hex		(x,	1);
	create_insn	(x=0X35004AB3);
	op_stkvar	(x,	1);
	create_insn	(x=0X35004ABB);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X35004AC9);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X35004ACE);
	op_stkvar	(x,	1);
	create_insn	(x=0X35004ADD);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X35004AE2);
	op_stkvar	(x,	1);
	create_insn	(x=0X35004AF1);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X35004AF6);
	op_stkvar	(x,	1);
	create_insn	(x=0X35004B03);
	op_hex		(x,	1);
	create_insn	(x=0X35004B06);
	op_stkvar	(x,	1);
	create_insn	(x=0X35004B0E);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X35004B1C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X35004B21);
	op_stkvar	(x,	1);
	create_insn	(x=0X35004B30);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X35004B35);
	op_stkvar	(x,	1);
	create_insn	(x=0X35004B44);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X35004B49);
	op_stkvar	(x,	1);
	create_insn	(x=0X35004B56);
	op_hex		(x,	1);
	create_insn	(x=0X35004B59);
	op_stkvar	(x,	1);
	create_insn	(x=0X35004B61);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X35004B6F);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X35004B74);
	op_stkvar	(x,	1);
	create_insn	(x=0X35004B86);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X35004B8B);
	op_stkvar	(x,	1);
	create_insn	(x=0X35004B9A);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X35004B9F);
	op_stkvar	(x,	1);
	create_insn	(x=0X35004BAC);
	op_hex		(x,	1);
	create_insn	(x=0X35004BAF);
	op_stkvar	(x,	1);
	create_insn	(x=0X35004BB7);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X35004BC5);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X35004BCA);
	op_stkvar	(x,	1);
	create_insn	(x=0X35004BD9);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X35004BDE);
	op_stkvar	(x,	1);
	create_insn	(x=0X35004BED);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X35004BF2);
	op_stkvar	(x,	1);
	create_insn	(x=0X35004BFF);
	op_hex		(x,	1);
	create_insn	(x=0X35004C02);
	op_stkvar	(x,	1);
	create_insn	(x=0X35004C0A);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X35004C18);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X35004C1D);
	op_stkvar	(x,	1);
	create_insn	(x=0X35004C2C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X35004C31);
	op_stkvar	(x,	1);
	create_insn	(x=0X35004C40);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X35004C45);
	op_stkvar	(x,	1);
	create_insn	(x=0X35004C52);
	op_hex		(x,	1);
	create_insn	(x=0X35004C55);
	op_stkvar	(x,	1);
	create_insn	(x=0X35004C5D);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X35004C6B);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X35004C70);
	op_stkvar	(x,	1);
	create_insn	(x=0X35004C7F);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X35004C84);
	op_stkvar	(x,	1);
	create_insn	(x=0X35004C93);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X35004C98);
	op_stkvar	(x,	1);
	create_insn	(x=0X35004CA5);
	op_hex		(x,	1);
	create_insn	(x=0X35004CA8);
	op_stkvar	(x,	1);
	create_insn	(x=0X35004CB0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X35004CBE);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X35004CC3);
	op_stkvar	(x,	1);
	create_insn	(x=0X35004CD2);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X35004CD7);
	op_stkvar	(x,	1);
	create_insn	(x=0X35004CE6);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X35004CEB);
	op_stkvar	(x,	1);
	create_insn	(x=0X35004CF8);
	op_hex		(x,	1);
	create_insn	(x=0X35004CFB);
	op_stkvar	(x,	1);
	create_insn	(x=0X35004D03);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X35004D11);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X35004D16);
	op_stkvar	(x,	1);
	create_insn	(x=0X35004D25);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X35004D2A);
	op_stkvar	(x,	1);
	create_insn	(x=0X35004D39);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X35004D3E);
	op_stkvar	(x,	1);
	create_insn	(x=0X35004D4B);
	op_hex		(x,	1);
	create_insn	(x=0X35004D4E);
	op_stkvar	(x,	1);
	create_insn	(x=0X35004D56);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X35004D64);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X35004D69);
	op_stkvar	(x,	1);
	create_insn	(x=0X35004D78);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X35004D7D);
	op_stkvar	(x,	1);
	create_insn	(x=0X35004D8C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X35004D91);
	op_stkvar	(x,	1);
	create_insn	(x=0X35004D9E);
	op_hex		(x,	1);
	create_insn	(x=0X35004DA1);
	op_stkvar	(x,	1);
	create_insn	(x=0X35004DA9);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X35004DB7);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X35004DBC);
	op_stkvar	(x,	1);
	create_insn	(x=0X35004DCB);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X35004DD0);
	op_stkvar	(x,	1);
	create_insn	(x=0X35004DDF);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X35004DE4);
	op_stkvar	(x,	1);
	create_insn	(x=0X35004DF1);
	op_hex		(x,	1);
	create_insn	(x=0X35004DF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X35004DFC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X35004E0A);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X35004E0F);
	op_stkvar	(x,	1);
	create_insn	(x=0X35004E1E);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X35004E23);
	op_stkvar	(x,	1);
	create_insn	(x=0X35004E32);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X35004E37);
	op_stkvar	(x,	1);
	create_insn	(x=0X35004E44);
	op_hex		(x,	1);
	create_insn	(x=0X35004E47);
	op_stkvar	(x,	1);
	create_insn	(x=0X35004E4F);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X35004E5D);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X35004E62);
	op_stkvar	(x,	1);
	create_insn	(x=0X35004E71);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X35004E76);
	op_stkvar	(x,	1);
	create_insn	(x=0X35004E85);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X35004E8A);
	op_stkvar	(x,	1);
	create_insn	(x=0X35004E97);
	op_hex		(x,	1);
	create_insn	(x=0X35004E9A);
	op_stkvar	(x,	1);
	create_insn	(x=0X35004EA5);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X35004EB3);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X35004EB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X35004EC7);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X35004ECC);
	op_stkvar	(x,	1);
	create_insn	(x=0X35004EDB);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X35004EE0);
	op_stkvar	(x,	1);
	create_insn	(x=0X35004EED);
	op_hex		(x,	1);
	create_insn	(x=0X35004EF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X35004EF8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X35004F06);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X35004F0B);
	op_stkvar	(x,	1);
	create_insn	(x=0X35004F1A);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X35004F1F);
	op_stkvar	(x,	1);
	create_insn	(x=0X35004F2E);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X35004F33);
	op_stkvar	(x,	1);
	create_insn	(x=0X35004F40);
	op_hex		(x,	1);
	create_insn	(x=0X35004F43);
	op_stkvar	(x,	1);
	create_insn	(x=0X35004F4B);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X35004F59);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X35004F5F);
	op_stkvar	(x,	1);
	create_insn	(x=0X35004F6D);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X35004F72);
	op_stkvar	(x,	1);
	create_insn	(x=0X35004F81);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X35004F86);
	op_stkvar	(x,	1);
	create_insn	(x=0X35004F93);
	op_hex		(x,	1);
	create_insn	(x=0X35004F96);
	op_stkvar	(x,	1);
	create_insn	(x=0X35004F9E);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X35004FAC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X35004FB1);
	op_stkvar	(x,	1);
	create_insn	(x=0X35004FC0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X35004FC5);
	op_stkvar	(x,	1);
	create_insn	(x=0X35004FD4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X35004FD9);
	op_stkvar	(x,	1);
	create_insn	(x=0X35004FE6);
	op_hex		(x,	1);
	create_insn	(x=0X35004FE9);
	op_stkvar	(x,	1);
	create_insn	(x=0X35004FF1);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X35004FFF);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X35005004);
	op_stkvar	(x,	1);
	create_insn	(x=0X35005013);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X35005018);
	op_stkvar	(x,	1);
	create_insn	(x=0X35005027);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X3500502C);
	op_stkvar	(x,	1);
	create_insn	(x=0X35005039);
	op_hex		(x,	1);
	create_insn	(x=0X3500503C);
	op_stkvar	(x,	1);
	create_insn	(x=0X35005044);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X35005052);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X35005057);
	op_stkvar	(x,	1);
	create_insn	(x=0X35005066);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X3500506C);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500507A);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X3500507F);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500508C);
	op_hex		(x,	1);
	create_insn	(x=0X3500508F);
	op_stkvar	(x,	1);
	create_insn	(x=0X35005097);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X350050A5);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X350050AA);
	op_stkvar	(x,	1);
	create_insn	(x=0X350050B9);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X350050BE);
	op_stkvar	(x,	1);
	create_insn	(x=0X350050CD);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X350050D2);
	op_stkvar	(x,	1);
	create_insn	(x=0X350050DF);
	op_hex		(x,	1);
	create_insn	(x=0X350050E2);
	op_stkvar	(x,	1);
	create_insn	(x=0X350050EA);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X350050F8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X350050FD);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500510C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X35005111);
	op_stkvar	(x,	1);
	create_insn	(x=0X35005120);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X35005125);
	op_stkvar	(x,	1);
	create_insn	(x=0X35005132);
	op_hex		(x,	1);
	create_insn	(x=0X35005135);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500513D);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X3500514B);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X35005150);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500515F);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X35005164);
	op_stkvar	(x,	1);
	create_insn	(x=0X35005173);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X35005179);
	op_stkvar	(x,	1);
	create_insn	(x=0X35005185);
	op_hex		(x,	1);
	create_insn	(x=0X35005188);
	op_stkvar	(x,	1);
	create_insn	(x=0X35005190);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X3500519E);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X350051A3);
	op_stkvar	(x,	1);
	create_insn	(x=0X350051B2);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X350051B7);
	op_stkvar	(x,	1);
	create_insn	(x=0X350051C6);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X350051CB);
	op_stkvar	(x,	1);
	create_insn	(x=0X350051D8);
	op_hex		(x,	1);
	create_insn	(x=0X350051DB);
	op_stkvar	(x,	1);
	create_insn	(x=0X350051E3);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X350051F1);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X350051F6);
	op_stkvar	(x,	1);
	create_insn	(x=0X35005205);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X3500520A);
	op_stkvar	(x,	1);
	create_insn	(x=0X35005219);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X3500521E);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500522B);
	op_hex		(x,	1);
	create_insn	(x=0X3500522E);
	op_stkvar	(x,	1);
	create_insn	(x=0X35005236);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X35005244);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X35005249);
	op_stkvar	(x,	1);
	create_insn	(x=0X35005258);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X3500525D);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500526C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X35005271);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500527E);
	op_hex		(x,	1);
	create_insn	(x=0X35005281);
	op_stkvar	(x,	1);
	create_insn	(x=0X35005289);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X35005297);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X3500529C);
	op_stkvar	(x,	1);
	create_insn	(x=0X350052AB);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X350052B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X350052BF);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X350052C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X350052D1);
	op_hex		(x,	1);
	create_insn	(x=0X350052D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X350052DC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X350052EA);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X350052EF);
	op_stkvar	(x,	1);
	create_insn	(x=0X350052FE);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X35005303);
	op_stkvar	(x,	1);
	create_insn	(x=0X35005312);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X35005317);
	op_stkvar	(x,	1);
	create_insn	(x=0X35005324);
	op_hex		(x,	1);
	create_insn	(x=0X35005327);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500532F);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X3500533D);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X35005342);
	op_stkvar	(x,	1);
	create_insn	(x=0X35005351);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X35005356);
	op_stkvar	(x,	1);
	create_insn	(x=0X35005365);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X3500536A);
	op_stkvar	(x,	1);
	create_insn	(x=0X35005377);
	op_hex		(x,	1);
	create_insn	(x=0X3500537A);
	op_stkvar	(x,	1);
	create_insn	(x=0X35005382);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X35005390);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X35005396);
	op_stkvar	(x,	1);
	create_insn	(x=0X350053A4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X350053A9);
	op_stkvar	(x,	1);
	create_insn	(x=0X350053B8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X350053BD);
	op_stkvar	(x,	1);
	create_insn	(x=0X350053CA);
	op_hex		(x,	1);
	create_insn	(x=0X350053CD);
	op_stkvar	(x,	1);
	create_insn	(x=0X350053D5);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X350053E3);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X350053E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X350053F7);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X350053FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500540B);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X35005410);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500541D);
	op_hex		(x,	1);
	create_insn	(x=0X35005420);
	op_stkvar	(x,	1);
	create_insn	(x=0X35005428);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X35005436);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X3500543B);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500544A);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X3500544F);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500545E);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X35005463);
	op_stkvar	(x,	1);
	create_insn	(x=0X35005470);
	op_hex		(x,	1);
	create_insn	(x=0X35005473);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500547B);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X35005489);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X3500548E);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500549D);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X350054A3);
	op_stkvar	(x,	1);
	create_insn	(x=0X350054B1);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X350054B6);
	op_stkvar	(x,	1);
	create_insn	(x=0X350054C3);
	op_hex		(x,	1);
	create_insn	(x=0X350054C6);
	op_stkvar	(x,	1);
	create_insn	(x=0X350054CE);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X350054DC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X350054E1);
	op_stkvar	(x,	1);
	create_insn	(x=0X350054F0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X350054F5);
	op_stkvar	(x,	1);
	create_insn	(x=0X35005504);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X35005509);
	op_stkvar	(x,	1);
	create_insn	(x=0X35005516);
	op_hex		(x,	1);
	create_insn	(x=0X35005519);
	op_stkvar	(x,	1);
	create_insn	(x=0X35005521);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X3500552D);
	op_hex		(x,	1);
	create_insn	(x=0X35005530);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X35005552);
	op_stkvar	(x,	1);
	create_insn	(x=0X35005558);
	op_hex		(x,	1);
	create_insn	(x=0X35005563);
	op_hex		(x,	1);
	create_insn	(x=0X3500556E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X3500558D);
	op_stkvar	(x,	1);
	create_insn	(x=0X35005593);
	op_hex		(x,	1);
	create_insn	(x=0X3500559E);
	op_hex		(x,	1);
	create_insn	(x=0X350055A9);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X350055CD);
	op_hex		(x,	1);
	create_insn	(x=0X350055D1);
	op_stkvar	(x,	1);
	create_insn	(x=0X350055DE);
	op_hex		(x,	1);
	create_insn	(0X350055F0);
	create_insn	(x=0X350055F3);
	op_hex		(x,	1);
	create_insn	(x=0X350055FD);
	op_hex		(x,	1);
	create_insn	(0X35005606);
	create_word	(0X35005612);
	create_insn	(0X35005614);
	create_insn	(x=0X3500561B);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X35005624);
	set_cmt	(0X3500562E,	"lpLibFileName",	0);
	create_insn	(x=0X3500562E);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X3500563F);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X35005644,	"hModule",	0);
	create_insn	(x=0X3500564C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X35005658,	"_DWORD",	0);
	create_insn	(x=0X35005658);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X35005668,	"_DWORD",	0);
	create_insn	(x=0X35005668);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X35005678,	"_DWORD",	0);
	create_insn	(x=0X35005678);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X35005688,	"_DWORD",	0);
	create_insn	(x=0X35005688);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X35005698,	"_DWORD",	0);
	create_insn	(x=0X35005698);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X350056A8,	"_DWORD",	0);
	create_insn	(x=0X350056A8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X350056B8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X350056BD,	"hModule",	0);
	create_insn	(x=0X350056D6);
	op_stkvar	(x,	1);
	create_insn	(x=0X350056EB);
	op_stkvar	(x,	0);
	create_insn	(x=0X350056F5);
	op_stkvar	(x,	0);
	create_insn	(x=0X35005703);
	op_stkvar	(x,	1);
	set_cmt	(0X3500570E,	"_DWORD",	0);
	create_insn	(x=0X3500570E);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X35005713,	"_DWORD",	0);
	create_insn	(0X35005729);
	set_cmt	(0X3500572E,	"_DWORD",	0);
	create_insn	(x=0X3500572E);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X35005733,	"_DWORD",	0);
	create_insn	(0X35005749);
	set_cmt	(0X3500574E,	"_DWORD",	0);
	create_insn	(x=0X3500574E);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X35005753,	"_DWORD",	0);
	create_insn	(0X35005769);
	set_cmt	(0X3500576E,	"_DWORD",	0);
	create_insn	(x=0X3500576E);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X35005773,	"_DWORD",	0);
	create_insn	(0X35005789);
	set_cmt	(0X3500578E,	"_DWORD",	0);
	create_insn	(x=0X3500578E);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X35005793,	"_DWORD",	0);
	create_insn	(0X350057A9);
	set_cmt	(0X350057AE,	"_DWORD",	0);
	create_insn	(x=0X350057AE);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X350057B3,	"_DWORD",	0);
	create_insn	(0X350057C9);
	set_cmt	(0X350057CE,	"_DWORD",	0);
	create_insn	(x=0X350057CE);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X350057D3,	"_DWORD",	0);
	create_insn	(0X350057E9);
	set_cmt	(0X350057EE,	"_DWORD",	0);
	create_insn	(x=0X350057EE);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X350057F3,	"_DWORD",	0);
	create_insn	(0X35005809);
	set_cmt	(0X3500580E,	"_DWORD",	0);
	create_insn	(x=0X3500580E);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X35005813,	"_DWORD",	0);
	create_insn	(0X35005829);
	set_cmt	(0X3500582E,	"_DWORD",	0);
	create_insn	(x=0X3500582E);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X35005833,	"_DWORD",	0);
	create_insn	(0X35005849);
	set_cmt	(0X3500584E,	"_DWORD",	0);
	create_insn	(x=0X3500584E);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X35005853,	"_DWORD",	0);
	create_insn	(0X35005869);
	set_cmt	(0X3500586E,	"_DWORD",	0);
	create_insn	(x=0X3500586E);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X35005873,	"_DWORD",	0);
	create_insn	(0X35005889);
	set_cmt	(0X3500588E,	"_DWORD",	0);
	create_insn	(x=0X3500588E);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X35005893,	"_DWORD",	0);
	create_insn	(0X350058A9);
	set_cmt	(0X350058AE,	"_DWORD",	0);
	create_insn	(x=0X350058AE);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X350058B3,	"_DWORD",	0);
	create_insn	(0X350058C9);
	set_cmt	(0X350058CE,	"_DWORD",	0);
	create_insn	(x=0X350058CE);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X350058D3,	"_DWORD",	0);
	create_insn	(0X350058E9);
	set_cmt	(0X350058EE,	"_DWORD",	0);
	create_insn	(x=0X350058EE);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X350058F3,	"_DWORD",	0);
	create_insn	(0X35005909);
	set_cmt	(0X3500590E,	"_DWORD",	0);
	create_insn	(x=0X3500590E);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X35005913,	"_DWORD",	0);
	create_insn	(0X35005929);
	set_cmt	(0X3500592E,	"_DWORD",	0);
	create_insn	(x=0X3500592E);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X35005933,	"_DWORD",	0);
	create_insn	(0X35005949);
	set_cmt	(0X3500594E,	"_DWORD",	0);
	create_insn	(x=0X3500594E);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X35005953,	"_DWORD",	0);
	create_insn	(0X35005969);
	set_cmt	(0X3500596E,	"_DWORD",	0);
	create_insn	(x=0X3500596E);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X35005973,	"_DWORD",	0);
	create_insn	(0X35005989);
	set_cmt	(0X3500598E,	"_DWORD",	0);
	create_insn	(x=0X3500598E);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X35005993,	"_DWORD",	0);
	create_insn	(0X350059A9);
	set_cmt	(0X350059AE,	"_DWORD",	0);
	create_insn	(x=0X350059AE);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X350059B3,	"_DWORD",	0);
	create_insn	(0X350059C9);
	set_cmt	(0X350059CE,	"_DWORD",	0);
	create_insn	(x=0X350059CE);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X350059D3,	"_DWORD",	0);
	create_insn	(0X350059E9);
	set_cmt	(0X350059EE,	"_DWORD",	0);
	create_insn	(x=0X350059EE);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X350059F3,	"_DWORD",	0);
	create_insn	(0X35005A09);
	set_cmt	(0X35005A0E,	"_DWORD",	0);
	create_insn	(x=0X35005A0E);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X35005A13,	"_DWORD",	0);
	create_insn	(0X35005A29);
	set_cmt	(0X35005A2E,	"_DWORD",	0);
	create_insn	(x=0X35005A2E);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X35005A33,	"_DWORD",	0);
	create_insn	(0X35005A49);
	set_cmt	(0X35005A4E,	"_DWORD",	0);
	create_insn	(x=0X35005A4E);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X35005A53,	"_DWORD",	0);
	create_insn	(0X35005A69);
	set_cmt	(0X35005A6E,	"_DWORD",	0);
	create_insn	(x=0X35005A6E);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X35005A73,	"_DWORD",	0);
	create_insn	(0X35005A89);
	set_cmt	(0X35005A8E,	"_DWORD",	0);
	create_insn	(x=0X35005A8E);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X35005A93,	"_DWORD",	0);
	create_insn	(0X35005AA9);
	set_cmt	(0X35005AAE,	"_DWORD",	0);
	create_insn	(x=0X35005AAE);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X35005AB3,	"_DWORD",	0);
	create_insn	(0X35005AC9);
	set_cmt	(0X35005ACE,	"_DWORD",	0);
	create_insn	(x=0X35005ACE);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X35005AD3,	"_DWORD",	0);
	create_insn	(0X35005AE9);
	set_cmt	(0X35005AEE,	"_DWORD",	0);
	create_insn	(x=0X35005AEE);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X35005AF3,	"_DWORD",	0);
	create_insn	(0X35005B09);
	set_cmt	(0X35005B0E,	"_DWORD",	0);
	create_insn	(x=0X35005B0E);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X35005B13,	"_DWORD",	0);
	create_insn	(0X35005B29);
	set_cmt	(0X35005B2E,	"_DWORD",	0);
	create_insn	(x=0X35005B2E);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X35005B33,	"_DWORD",	0);
	create_insn	(0X35005B49);
	set_cmt	(0X35005B4E,	"_DWORD",	0);
	create_insn	(x=0X35005B4E);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X35005B53,	"_DWORD",	0);
	create_insn	(0X35005B69);
	set_cmt	(0X35005B6E,	"_DWORD",	0);
	create_insn	(x=0X35005B6E);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X35005B73,	"_DWORD",	0);
	create_insn	(0X35005B89);
	set_cmt	(0X35005B8E,	"_DWORD",	0);
	create_insn	(x=0X35005B8E);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X35005B93,	"_DWORD",	0);
	create_insn	(0X35005BA9);
	set_cmt	(0X35005BAE,	"_DWORD",	0);
	create_insn	(x=0X35005BAE);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X35005BB3,	"_DWORD",	0);
	create_insn	(0X35005BC9);
	set_cmt	(0X35005BCE,	"_DWORD",	0);
	create_insn	(x=0X35005BCE);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X35005BD3,	"_DWORD",	0);
	create_insn	(0X35005BE9);
	set_cmt	(0X35005BEE,	"_DWORD",	0);
	create_insn	(x=0X35005BEE);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X35005BF3,	"_DWORD",	0);
	create_insn	(0X35005C09);
	create_insn	(x=0X35005C0E);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X35005C13,	"_DWORD",	0);
	create_insn	(0X35005C29);
	set_cmt	(0X35005C2E,	"_DWORD",	0);
	create_insn	(x=0X35005C2E);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X35005C33,	"_DWORD",	0);
	create_insn	(0X35005C49);
	set_cmt	(0X35005C4E,	"_DWORD",	0);
	create_insn	(x=0X35005C4E);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X35005C53,	"_DWORD",	0);
	create_insn	(0X35005C69);
	set_cmt	(0X35005C6E,	"_DWORD",	0);
	create_insn	(x=0X35005C6E);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X35005C73,	"_DWORD",	0);
	create_insn	(0X35005C89);
	set_cmt	(0X35005C8E,	"_DWORD",	0);
	create_insn	(x=0X35005C8E);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X35005C93,	"_DWORD",	0);
	create_insn	(0X35005CA9);
	set_cmt	(0X35005CAE,	"_DWORD",	0);
	create_insn	(x=0X35005CAE);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X35005CB3,	"_DWORD",	0);
	create_insn	(0X35005CC9);
	set_cmt	(0X35005CCE,	"_DWORD",	0);
	create_insn	(x=0X35005CCE);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X35005CD3,	"_DWORD",	0);
	create_insn	(0X35005CE9);
	set_cmt	(0X35005CEE,	"_DWORD",	0);
	create_insn	(x=0X35005CEE);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X35005CF3,	"_DWORD",	0);
	create_insn	(0X35005D09);
	set_cmt	(0X35005D0E,	"_DWORD",	0);
	create_insn	(x=0X35005D0E);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X35005D13,	"_DWORD",	0);
	create_insn	(0X35005D29);
	set_cmt	(0X35005D2E,	"_DWORD",	0);
	create_insn	(x=0X35005D2E);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X35005D33,	"_DWORD",	0);
	create_insn	(0X35005D49);
	set_cmt	(0X35005D4E,	"_DWORD",	0);
	create_insn	(x=0X35005D4E);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X35005D53,	"_DWORD",	0);
	create_insn	(0X35005D69);
	set_cmt	(0X35005D6E,	"_DWORD",	0);
	create_insn	(x=0X35005D6E);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X35005D73,	"_DWORD",	0);
	create_insn	(0X35005D89);
	set_cmt	(0X35005D8E,	"_DWORD",	0);
	create_insn	(x=0X35005D8E);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X35005D93,	"_DWORD",	0);
	create_insn	(0X35005DA9);
	set_cmt	(0X35005DAE,	"_DWORD",	0);
	create_insn	(x=0X35005DAE);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X35005DB3,	"_DWORD",	0);
	create_insn	(0X35005DC9);
	set_cmt	(0X35005DCE,	"_DWORD",	0);
	create_insn	(x=0X35005DCE);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X35005DD3,	"_DWORD",	0);
	create_insn	(0X35005DE9);
	set_cmt	(0X35005DEE,	"_DWORD",	0);
	create_insn	(x=0X35005DEE);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X35005DF3,	"_DWORD",	0);
	create_insn	(0X35005E09);
	set_cmt	(0X35005E0E,	"_DWORD",	0);
	create_insn	(x=0X35005E0E);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X35005E13,	"_DWORD",	0);
	create_insn	(0X35005E29);
	set_cmt	(0X35005E2E,	"_DWORD",	0);
	create_insn	(x=0X35005E2E);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X35005E33,	"_DWORD",	0);
	create_insn	(0X35005E49);
	set_cmt	(0X35005E4E,	"_DWORD",	0);
	create_insn	(x=0X35005E4E);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X35005E53,	"_DWORD",	0);
	create_insn	(0X35005E69);
	set_cmt	(0X35005E6E,	"_DWORD",	0);
	create_insn	(x=0X35005E6E);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X35005E73,	"_DWORD",	0);
	create_insn	(0X35005E89);
	set_cmt	(0X35005E8E,	"_DWORD",	0);
	create_insn	(x=0X35005E8E);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X35005E93,	"_DWORD",	0);
	create_insn	(0X35005EA9);
	set_cmt	(0X35005EAE,	"_DWORD",	0);
	create_insn	(x=0X35005EAE);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X35005EB3,	"_DWORD",	0);
	create_insn	(0X35005EC9);
	set_cmt	(0X35005ECE,	"_DWORD",	0);
	create_insn	(x=0X35005ECE);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X35005ED3,	"_DWORD",	0);
	create_insn	(0X35005EE9);
	set_cmt	(0X35005EEE,	"_DWORD",	0);
	create_insn	(x=0X35005EEE);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X35005EF3,	"_DWORD",	0);
	create_insn	(0X35005F09);
	set_cmt	(0X35005F0E,	"_DWORD",	0);
	create_insn	(x=0X35005F0E);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X35005F13,	"_DWORD",	0);
	create_insn	(0X35005F29);
	set_cmt	(0X35005F2E,	"_DWORD",	0);
	create_insn	(x=0X35005F2E);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X35005F33,	"_DWORD",	0);
	create_insn	(0X35005F49);
	set_cmt	(0X35005F4E,	"_DWORD",	0);
	create_insn	(x=0X35005F4E);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X35005F53,	"_DWORD",	0);
	create_insn	(0X35005F69);
	set_cmt	(0X35005F6E,	"_DWORD",	0);
	create_insn	(x=0X35005F6E);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X35005F73,	"_DWORD",	0);
	create_insn	(0X35005F89);
	set_cmt	(0X35005F8E,	"_DWORD",	0);
	create_insn	(x=0X35005F8E);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X35005F93,	"_DWORD",	0);
	create_insn	(0X35005FA9);
	set_cmt	(0X35005FAE,	"_DWORD",	0);
	create_insn	(x=0X35005FAE);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X35005FB3,	"_DWORD",	0);
	create_insn	(0X35005FC9);
	set_cmt	(0X35005FCE,	"_DWORD",	0);
	create_insn	(x=0X35005FCE);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X35005FD3,	"_DWORD",	0);
	create_insn	(0X35005FE9);
	set_cmt	(0X35005FEE,	"_DWORD",	0);
	create_insn	(x=0X35005FEE);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X35005FF3,	"_DWORD",	0);
	create_insn	(0X35006009);
	set_cmt	(0X3500600E,	"_DWORD",	0);
	create_insn	(x=0X3500600E);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X35006013,	"_DWORD",	0);
	create_insn	(0X35006029);
	set_cmt	(0X3500602E,	"_DWORD",	0);
	create_insn	(x=0X3500602E);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X35006033,	"_DWORD",	0);
	create_insn	(0X35006049);
	set_cmt	(0X3500604E,	"_DWORD",	0);
	create_insn	(x=0X3500604E);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X35006053,	"_DWORD",	0);
	create_insn	(0X35006069);
	set_cmt	(0X3500606E,	"_DWORD",	0);
	create_insn	(x=0X3500606E);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X35006073,	"_DWORD",	0);
	create_insn	(0X35006089);
	set_cmt	(0X3500608E,	"_DWORD",	0);
	create_insn	(x=0X3500608E);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X35006093,	"_DWORD",	0);
	create_insn	(0X350060A9);
	set_cmt	(0X350060AE,	"_DWORD",	0);
	create_insn	(x=0X350060AE);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X350060B3,	"_DWORD",	0);
	create_insn	(0X350060C9);
	set_cmt	(0X350060CE,	"_DWORD",	0);
	create_insn	(x=0X350060CE);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X350060D3,	"_DWORD",	0);
	create_insn	(0X350060E9);
	set_cmt	(0X350060EE,	"_DWORD",	0);
	create_insn	(x=0X350060EE);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X350060F3,	"_DWORD",	0);
	create_insn	(0X35006109);
	set_cmt	(0X3500610E,	"_DWORD",	0);
	create_insn	(x=0X3500610E);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X35006113,	"_DWORD",	0);
	create_insn	(0X35006129);
	set_cmt	(0X3500612E,	"_DWORD",	0);
	create_insn	(x=0X3500612E);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X35006133,	"_DWORD",	0);
	create_insn	(0X35006149);
	set_cmt	(0X3500614E,	"_DWORD",	0);
	create_insn	(x=0X3500614E);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X35006153,	"_DWORD",	0);
	create_insn	(0X35006169);
	set_cmt	(0X3500616E,	"_DWORD",	0);
	create_insn	(x=0X3500616E);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X35006173,	"_DWORD",	0);
	create_insn	(0X35006189);
	set_cmt	(0X3500618E,	"_DWORD",	0);
	create_insn	(x=0X3500618E);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X35006193,	"_DWORD",	0);
	create_insn	(0X350061A9);
	set_cmt	(0X350061AE,	"_DWORD",	0);
	create_insn	(x=0X350061AE);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X350061B3,	"_DWORD",	0);
	create_insn	(0X350061C9);
	set_cmt	(0X350061CE,	"_DWORD",	0);
	create_insn	(x=0X350061CE);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X350061D3,	"_DWORD",	0);
	create_insn	(0X350061E9);
	set_cmt	(0X350061EE,	"_DWORD",	0);
	create_insn	(x=0X350061EE);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X350061F3,	"_DWORD",	0);
	create_insn	(0X35006209);
	set_cmt	(0X3500620E,	"_DWORD",	0);
	create_insn	(x=0X3500620E);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X35006213,	"_DWORD",	0);
	create_insn	(0X35006229);
	set_cmt	(0X3500622E,	"_DWORD",	0);
	create_insn	(x=0X3500622E);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X35006233,	"_DWORD",	0);
	create_insn	(0X35006249);
	set_cmt	(0X3500624E,	"_DWORD",	0);
	create_insn	(x=0X3500624E);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X35006253,	"_DWORD",	0);
	create_insn	(0X35006269);
	set_cmt	(0X3500626E,	"_DWORD",	0);
	create_insn	(x=0X3500626E);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X35006273,	"_DWORD",	0);
	create_insn	(0X35006289);
	set_cmt	(0X3500628E,	"_DWORD",	0);
	create_insn	(x=0X3500628E);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X35006293,	"_DWORD",	0);
	create_insn	(0X350062A9);
	set_cmt	(0X350062AE,	"_DWORD",	0);
	create_insn	(x=0X350062AE);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X350062B3,	"_DWORD",	0);
	create_insn	(0X350062C9);
	set_cmt	(0X350062CE,	"_DWORD",	0);
	create_insn	(x=0X350062CE);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X350062D3,	"_DWORD",	0);
	create_insn	(0X350062E9);
	set_cmt	(0X350062EE,	"_DWORD",	0);
	create_insn	(x=0X350062EE);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X350062F3,	"_DWORD",	0);
	create_insn	(0X35006309);
	set_cmt	(0X3500630E,	"_DWORD",	0);
	create_insn	(x=0X3500630E);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X35006313,	"_DWORD",	0);
	create_insn	(0X35006329);
	set_cmt	(0X3500632E,	"_DWORD",	0);
	create_insn	(x=0X3500632E);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X35006333,	"_DWORD",	0);
	create_insn	(0X35006349);
	set_cmt	(0X3500634E,	"_DWORD",	0);
	create_insn	(x=0X3500634E);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X35006353,	"_DWORD",	0);
	create_insn	(0X35006369);
	set_cmt	(0X3500636E,	"_DWORD",	0);
	create_insn	(x=0X3500636E);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X35006373,	"_DWORD",	0);
	create_insn	(0X35006389);
	set_cmt	(0X3500638E,	"_DWORD",	0);
	create_insn	(x=0X3500638E);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X35006393,	"_DWORD",	0);
	create_insn	(0X350063A6);
	set_cmt	(0X350063AB,	"_DWORD",	0);
	create_insn	(x=0X350063AB);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X350063B0,	"_DWORD",	0);
	create_insn	(0X350063C3);
	set_cmt	(0X350063C8,	"_DWORD",	0);
	create_insn	(x=0X350063C8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X350063CD,	"_DWORD",	0);
	create_insn	(0X350063E0);
	set_cmt	(0X350063E5,	"_DWORD",	0);
	create_insn	(x=0X350063E5);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X350063EA,	"_DWORD",	0);
	create_insn	(0X350063FD);
	set_cmt	(0X35006402,	"_DWORD",	0);
	create_insn	(x=0X35006402);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X35006407,	"_DWORD",	0);
	make_array	(0X35006428,	0X8);
	create_insn	(0X35006430);
	create_insn	(x=0X35006433);
	op_hex		(x,	1);
	create_insn	(x=0X35006438);
	op_stkvar	(x,	1);
	set_cmt	(0X3500643B,	"_DWORD",	0);
	create_insn	(x=0X3500644B);
	op_stkvar	(x,	0);
	create_insn	(x=0X35006452);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500646D);
	op_stkvar	(x,	1);
	create_insn	(x=0X35006477);
	op_hex		(x,	1);
	set_cmt	(0X35006485,	"_DWORD",	0);
	create_insn	(0X35006485);
	set_cmt	(0X3500648A,	"_DWORD",	0);
	create_insn	(x=0X3500648C);
	op_stkvar	(x,	1);
	set_cmt	(0X3500648F,	"_DWORD",	0);
	set_cmt	(0X35006490,	"_DWORD",	0);
	set_cmt	(0X35006492,	"_DWORD",	0);
	create_insn	(x=0X35006494);
	op_stkvar	(x,	1);
	set_cmt	(0X35006497,	"_DWORD",	0);
	set_cmt	(0X35006498,	"_DWORD",	0);
	set_cmt	(0X35006499,	"_DWORD",	0);
	set_cmt	(0X350064A0,	"_DWORD",	0);
	create_insn	(x=0X350064B4);
	op_hex		(x,	1);
	create_insn	(0X350064BE);
	create_insn	(x=0X350064C0);
	op_stkvar	(x,	0);
	make_array	(0X350064DD,	0X3);
	create_insn	(0X350064E0);
	create_insn	(x=0X350064E3);
	op_hex		(x,	1);
	set_cmt	(0X350064E8,	"_DWORD",	0);
	set_cmt	(0X350064EA,	"_DWORD",	0);
	set_cmt	(0X350064EF,	"_DWORD",	0);
	set_cmt	(0X350064F4,	"_DWORD",	0);
	set_cmt	(0X350064FC,	"_DWORD",	0);
	set_cmt	(0X35006500,	"_DWORD",	0);
	set_cmt	(0X35006505,	"_DWORD",	0);
	set_cmt	(0X3500650A,	"_DWORD",	0);
	create_insn	(x=0X3500650C);
	op_stkvar	(x,	0);
	set_cmt	(0X3500651D,	"_DWORD",	0);
	set_cmt	(0X35006522,	"_DWORD",	0);
	set_cmt	(0X35006523,	"_DWORD",	0);
	create_insn	(x=0X35006525);
	op_stkvar	(x,	0);
	set_cmt	(0X35006538,	"_DWORD",	0);
	set_cmt	(0X3500653D,	"_DWORD",	0);
	set_cmt	(0X3500653E,	"_DWORD",	0);
	set_cmt	(0X35006545,	"_DWORD",	0);
	set_cmt	(0X3500654A,	"_DWORD",	0);
	set_cmt	(0X3500654C,	"_DWORD",	0);
	create_insn	(x=0X35006554);
	op_hex		(x,	1);
	create_insn	(0X3500655C);
	create_insn	(x=0X3500655E);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500656B);
	op_hex		(x,	1);
	create_insn	(x=0X3500657E);
	op_hex		(x,	1);
	create_insn	(0X35006597);
	create_insn	(x=0X350065A1);
	op_stkvar	(x,	1);
	create_insn	(x=0X350065C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X350065E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X350065E5);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500660D);
	op_stkvar	(x,	1);
	create_insn	(x=0X35006612);
	op_hex		(x,	1);
	create_insn	(x=0X35006619);
	op_hex		(x,	1);
	create_insn	(x=0X3500661E);
	op_stkvar	(x,	1);
	create_insn	(x=0X35006621);
	op_stkvar	(x,	1);
	set_cmt	(0X35006624,	"_DWORD",	0);
	set_cmt	(0X35006626,	"_DWORD",	0);
	set_cmt	(0X35006627,	"_DWORD",	0);
	set_cmt	(0X35006632,	"_DWORD",	0);
	set_cmt	(0X35006637,	"_DWORD",	0);
	set_cmt	(0X35006638,	"_DWORD",	0);
	set_cmt	(0X3500663F,	"_DWORD",	0);
	set_cmt	(0X35006644,	"_DWORD",	0);
	set_cmt	(0X35006646,	"_DWORD",	0);
	create_insn	(0X35006659);
	set_cmt	(0X35006670,	"_DWORD",	0);
	set_cmt	(0X35006675,	"_DWORD",	0);
	set_cmt	(0X35006677,	"_DWORD",	0);
	set_cmt	(0X3500667E,	"_DWORD",	0);
	set_cmt	(0X35006683,	"_DWORD",	0);
	set_cmt	(0X35006685,	"_DWORD",	0);
	make_array	(0X35006698,	0X8);
	create_insn	(0X350066A0);
	create_insn	(x=0X350066A3);
	op_hex		(x,	1);
	create_insn	(x=0X350066AE);
	op_stkvar	(x,	1);
	create_insn	(x=0X350066BE);
	op_hex		(x,	1);
	create_insn	(x=0X350066C1);
	op_stkvar	(x,	1);
	create_insn	(x=0X350066C6);
	op_stkvar	(x,	0);
	create_insn	(x=0X350066CF);
	op_stkvar	(x,	0);
	create_insn	(x=0X350066DE);
	op_stkvar	(x,	1);
	create_insn	(x=0X350066F4);
	op_hex		(x,	1);
	set_cmt	(0X350066F9,	"_DWORD",	0);
	set_cmt	(0X350066FB,	"_DWORD",	0);
	create_insn	(x=0X35006702);
	op_hex		(x,	1);
	set_cmt	(0X35006705,	"_DWORD",	0);
	set_cmt	(0X3500670C,	"_DWORD",	0);
	create_insn	(x=0X35006720);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X3500672A);
	op_stkvar	(x,	0);
	create_insn	(x=0X35006740);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X3500674A);
	op_stkvar	(x,	0);
	set_cmt	(0X35006757,	"_DWORD",	0);
	set_cmt	(0X35006759,	"_DWORD",	0);
	set_cmt	(0X3500675E,	"_DWORD",	0);
	set_cmt	(0X35006763,	"_DWORD",	0);
	set_cmt	(0X3500676D,	"_DWORD",	0);
	set_cmt	(0X35006772,	"_DWORD",	0);
	set_cmt	(0X35006773,	"_DWORD",	0);
	create_insn	(x=0X35006775);
	op_stkvar	(x,	0);
	set_cmt	(0X35006794,	"_DWORD",	0);
	create_insn	(0X35006794);
	set_cmt	(0X35006796,	"_DWORD",	0);
	set_cmt	(0X3500679B,	"_DWORD",	0);
	set_cmt	(0X350067A0,	"_DWORD",	0);
	create_insn	(x=0X350067AC);
	op_stkvar	(x,	0);
	create_insn	(x=0X350067CD);
	op_hex		(x,	1);
	create_insn	(0X350067E6);
	create_insn	(x=0X35006812);
	op_stkvar	(x,	0);
	create_insn	(x=0X35006819);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500681C);
	op_stkvar	(x,	0);
	create_insn	(x=0X35006825);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500682C);
	op_stkvar	(x,	0);
	create_insn	(x=0X35006836);
	op_stkvar	(x,	1);
	create_insn	(x=0X35006864);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500688E);
	op_hex		(x,	1);
	create_insn	(x=0X35006895);
	op_hex		(x,	1);
	set_cmt	(0X3500689A,	"_DWORD",	0);
	create_insn	(x=0X350068AA);
	op_hex		(x,	1);
	create_insn	(x=0X350068B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X350068BA);
	op_stkvar	(x,	0);
	create_insn	(x=0X350068DE);
	op_hex		(x,	1);
	set_cmt	(0X350068E3,	"_DWORD",	0);
	set_cmt	(0X350068E5,	"_DWORD",	0);
	set_cmt	(0X350068EA,	"_DWORD",	0);
	set_cmt	(0X350068EC,	"_DWORD",	0);
	set_cmt	(0X350068EE,	"_DWORD",	0);
	create_insn	(x=0X350068F2);
	op_hex		(x,	1);
	set_cmt	(0X350068F5,	"_DWORD",	0);
	set_cmt	(0X350068FC,	"_DWORD",	0);
	create_insn	(x=0X35006905);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500691D);
	op_hex		(x,	1);
	create_insn	(0X35006931);
	create_insn	(x=0X35006938);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500695E);
	op_hex		(x,	1);
	set_cmt	(0X35006963,	"_DWORD",	0);
	set_cmt	(0X35006965,	"_DWORD",	0);
	set_cmt	(0X3500696A,	"_DWORD",	0);
	set_cmt	(0X3500696C,	"_DWORD",	0);
	set_cmt	(0X3500696E,	"_DWORD",	0);
	create_insn	(x=0X35006972);
	op_hex		(x,	1);
	set_cmt	(0X35006975,	"_DWORD",	0);
	set_cmt	(0X3500697C,	"_DWORD",	0);
	create_insn	(x=0X35006985);
	op_stkvar	(x,	1);
	set_cmt	(0X35006997,	"hObject",	0);
	set_cmt	(0X3500699A,	"hObject",	0);
	create_insn	(x=0X350069B0);
	op_hex		(x,	1);
	create_insn	(x=0X350069C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X350069E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X350069E3);
	op_stkvar	(x,	0);
	create_insn	(x=0X350069EB);
	op_stkvar	(x,	0);
	create_insn	(x=0X350069F3);
	op_stkvar	(x,	1);
	create_insn	(0X350069FB);
	set_cmt	(0X35006A01,	"hObject",	0);
	create_insn	(x=0X35006A02);
	op_stkvar	(x,	0);
	set_cmt	(0X35006A0B,	"hObject",	0);
	set_cmt	(0X35006A0E,	"_DWORD",	0);
	set_cmt	(0X35006A13,	"_DWORD",	0);
	set_cmt	(0X35006A15,	"_DWORD",	0);
	create_insn	(x=0X35006A15);
	op_stkvar	(x,	0);
	set_cmt	(0X35006A1E,	"_DWORD",	0);
	set_cmt	(0X35006A23,	"_DWORD",	0);
	set_cmt	(0X35006A25,	"_DWORD",	0);
	create_insn	(x=0X35006A25);
	op_stkvar	(x,	0);
	set_cmt	(0X35006A2E,	"_DWORD",	0);
	set_cmt	(0X35006A33,	"_DWORD",	0);
	set_cmt	(0X35006A35,	"_DWORD",	0);
	create_insn	(x=0X35006A3C);
	op_stkvar	(x,	0);
	create_insn	(x=0X35006A4E);
	op_stkvar	(x,	1);
	make_array	(0X35006A5C,	0X4);
	create_insn	(0X35006A60);
	set_name	(0X35006A60,	"StartAddress");
	set_cmt	(0X35006A65,	"_DWORD",	0);
	set_cmt	(0X35006A67,	"_DWORD",	0);
	set_cmt	(0X35006A6C,	"_DWORD",	0);
	set_cmt	(0X35006A6E,	"_DWORD",	0);
	create_insn	(x=0X35006A76);
	op_stkvar	(x,	1);
	set_cmt	(0X35006A96,	"Seed",	0);
	create_insn	(x=0X35006A9C);
	op_hex		(x,	1);
	set_cmt	(0X35006A9F,	"_DWORD",	0);
	set_cmt	(0X35006AA1,	"_DWORD",	0);
	set_cmt	(0X35006AA6,	"_DWORD",	0);
	set_cmt	(0X35006AAB,	"_DWORD",	0);
	create_insn	(x=0X35006AC2);
	op_hex		(x,	1);
	set_cmt	(0X35006AC9,	"_DWORD",	0);
	create_insn	(x=0X35006ADB);
	op_hex		(x,	1);
	create_insn	(x=0X35006AE8);
	op_hex		(x,	1);
	create_insn	(x=0X35006AF0);
	op_hex		(x,	1);
	create_insn	(0X35006AF8);
	create_insn	(x=0X35006AFF);
	op_hex		(x,	1);
	set_cmt	(0X35006B02,	"_DWORD",	0);
	set_cmt	(0X35006B07,	"_DWORD",	0);
	set_cmt	(0X35006B09,	"_DWORD",	0);
	set_cmt	(0X35006B10,	"_DWORD",	0);
	set_cmt	(0X35006B15,	"_DWORD",	0);
	set_cmt	(0X35006B17,	"_DWORD",	0);
	make_array	(0X35006B29,	0X7);
	create_insn	(0X35006B30);
	create_insn	(x=0X35006B33);
	op_hex		(x,	1);
	create_insn	(x=0X35006B3A);
	op_hex		(x,	1);
	create_insn	(x=0X35006B49);
	op_hex		(x,	1);
	create_insn	(0X35006B64);
	create_insn	(x=0X35006B65);
	op_stkvar	(x,	1);
	set_cmt	(0X35006B68,	"_DWORD",	0);
	set_cmt	(0X35006B69,	"_DWORD",	0);
	create_insn	(x=0X35006B69);
	op_stkvar	(x,	0);
	set_cmt	(0X35006B6C,	"_DWORD",	0);
	create_insn	(x=0X35006B81);
	op_stkvar	(x,	1);
	create_insn	(x=0X35006B84);
	op_stkvar	(x,	0);
	create_insn	(x=0X35006B87);
	op_stkvar	(x,	1);
	create_insn	(x=0X35006B8A);
	op_stkvar	(x,	0);
	create_insn	(x=0X35006B8D);
	op_stkvar	(x,	1);
	create_insn	(x=0X35006B92);
	op_stkvar	(x,	0);
	set_cmt	(0X35006B99,	"_DWORD",	0);
	set_cmt	(0X35006B9D,	"_DWORD",	0);
	create_insn	(x=0X35006B9F);
	op_hex		(x,	1);
	set_cmt	(0X35006BA2,	"_DWORD",	0);
	create_insn	(x=0X35006BA4);
	op_stkvar	(x,	0);
	create_insn	(x=0X35006BA7);
	op_stkvar	(x,	1);
	set_cmt	(0X35006BAA,	"_DWORD",	0);
	set_cmt	(0X35006BAB,	"_DWORD",	0);
	set_cmt	(0X35006BAD,	"_DWORD",	0);
	create_insn	(x=0X35006BAD);
	op_stkvar	(x,	0);
	make_array	(0X35006BD3,	0XD);
	create_insn	(0X35006BE0);
	create_insn	(x=0X35006BE4);
	op_hex		(x,	1);
	create_insn	(x=0X35006BED);
	op_hex		(x,	1);
	create_insn	(x=0X35006BF3);
	op_hex		(x,	1);
	create_insn	(x=0X35006C02);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X35006C0C);
	op_hex		(x,	1);
	set_cmt	(0X35006C0F,	"_DWORD",	0);
	create_insn	(x=0X35006C1C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X35006C26);
	op_hex		(x,	1);
	set_cmt	(0X35006C29,	"_DWORD",	0);
	make_array	(0X35006C36,	0XA);
	create_insn	(0X35006C40);
	create_insn	(x=0X35006C43);
	op_hex		(x,	1);
	create_insn	(x=0X35006C4D);
	op_hex		(x,	1);
	create_word	(0X35006C62);
	create_insn	(0X35006C69);
	create_insn	(x=0X35006C6A);
	op_stkvar	(x,	1);
	create_insn	(x=0X35006C72);
	op_stkvar	(x,	0);
	create_insn	(x=0X35006C79);
	op_hex		(x,	1);
	create_insn	(x=0X35006C7C);
	op_stkvar	(x,	0);
	create_insn	(x=0X35006C82);
	op_stkvar	(x,	0);
	create_insn	(x=0X35006C89);
	op_stkvar	(x,	0);
	create_insn	(x=0X35006C8D);
	op_stkvar	(x,	0);
	create_insn	(x=0X35006C94);
	op_stkvar	(x,	0);
	create_insn	(x=0X35006C9A);
	op_stkvar	(x,	0);
	create_insn	(x=0X35006C9E);
	op_stkvar	(x,	0);
	create_insn	(x=0X35006CA5);
	op_stkvar	(x,	0);
	create_insn	(x=0X35006CA9);
	op_stkvar	(x,	0);
	create_insn	(x=0X35006CAD);
	op_stkvar	(x,	0);
	create_insn	(x=0X35006CB4);
	op_stkvar	(x,	0);
	create_insn	(x=0X35006CBE);
	op_stkvar	(x,	1);
	create_insn	(x=0X35006CC1);
	op_stkvar	(x,	1);
	create_insn	(x=0X35006CC7);
	op_stkvar	(x,	0);
	create_insn	(x=0X35006CCD);
	op_stkvar	(x,	1);
	create_insn	(x=0X35006CD3);
	op_stkvar	(x,	1);
	create_insn	(x=0X35006CDC);
	op_stkvar	(x,	0);
	create_insn	(x=0X35006CE3);
	op_stkvar	(x,	1);
	set_cmt	(0X35006CEB,	"_DWORD",	0);
	set_cmt	(0X35006CEC,	"_DWORD",	0);
	set_cmt	(0X35006D06,	"_DWORD",	0);
	create_insn	(0X35006D06);
	set_cmt	(0X35006D08,	"_DWORD",	0);
	set_cmt	(0X35006D0A,	"_DWORD",	0);
	set_cmt	(0X35006D19,	"_DWORD",	0);
	create_insn	(x=0X35006D1B);
	op_stkvar	(x,	1);
	set_cmt	(0X35006D1E,	"_DWORD",	0);
	set_cmt	(0X35006D1F,	"_DWORD",	0);
	set_cmt	(0X35006D21,	"_DWORD",	0);
	set_cmt	(0X35006D26,	"_DWORD",	0);
	create_insn	(x=0X35006D39);
	op_stkvar	(x,	0);
	set_cmt	(0X35006D3D,	"hostlong",	0);
	create_insn	(x=0X35006D3E);
	op_stkvar	(x,	0);
	set_cmt	(0X35006D4E,	"hostshort",	0);
	create_insn	(x=0X35006D50);
	op_stkvar	(x,	0);
	create_insn	(x=0X35006D55);
	op_stkvar	(x,	0);
	create_insn	(x=0X35006D59);
	op_stkvar	(x,	1);
	set_cmt	(0X35006D5C,	"namelen",	0);
	set_cmt	(0X35006D5E,	"name",	0);
	set_cmt	(0X35006D5F,	"s",	0);
	set_cmt	(0X35006D6A,	"cp",	0);
	create_insn	(x=0X35006D6A);
	op_stkvar	(x,	0);
	create_insn	(x=0X35006D70);
	op_stkvar	(x,	0);
	create_insn	(x=0X35006D74);
	op_stkvar	(x,	0);
	set_cmt	(0X35006D7E,	"hostshort",	0);
	create_insn	(x=0X35006D80);
	op_stkvar	(x,	0);
	set_cmt	(0X35006D85,	"_DWORD",	0);
	create_insn	(x=0X35006D87);
	op_stkvar	(x,	0);
	create_insn	(x=0X35006D8B);
	op_stkvar	(x,	1);
	set_cmt	(0X35006D8E,	"_DWORD",	0);
	set_cmt	(0X35006D8F,	"_DWORD",	0);
	set_cmt	(0X35006D91,	"_DWORD",	0);
	create_insn	(x=0X35006D93);
	op_stkvar	(x,	1);
	set_cmt	(0X35006D99,	"_DWORD",	0);
	set_cmt	(0X35006D9A,	"_DWORD",	0);
	set_cmt	(0X35006DAA,	"_DWORD",	0);
	set_cmt	(0X35006DB5,	"_DWORD",	0);
	make_array	(0X35006DCC,	0X4);
	create_insn	(0X35006DD0);
	create_insn	(x=0X35006DD3);
	op_hex		(x,	1);
	create_insn	(0X35006DE9);
	create_insn	(x=0X35006DFF);
	op_stkvar	(x,	1);
	create_insn	(x=0X35006E02);
	op_stkvar	(x,	0);
	set_cmt	(0X35006E09,	"_DWORD",	0);
	set_cmt	(0X35006E0B,	"_DWORD",	0);
	set_cmt	(0X35006E0C,	"_DWORD",	0);
	set_cmt	(0X35006E14,	"_DWORD",	0);
	set_cmt	(0X35006E16,	"_DWORD",	0);
	set_cmt	(0X35006E1B,	"_DWORD",	0);
	create_insn	(x=0X35006E1B);
	op_stkvar	(x,	0);
	set_cmt	(0X35006E1E,	"_DWORD",	0);
	create_insn	(x=0X35006E28);
	op_stkvar	(x,	1);
	set_cmt	(0X35006E2B,	"_DWORD",	0);
	set_cmt	(0X35006E2D,	"_DWORD",	0);
	set_cmt	(0X35006E2E,	"_DWORD",	0);
	create_insn	(x=0X35006E2F);
	op_stkvar	(x,	0);
	set_cmt	(0X35006E3A,	"_DWORD",	0);
	set_cmt	(0X35006E3C,	"_DWORD",	0);
	create_insn	(x=0X35006E44);
	op_hex		(x,	1);
	set_cmt	(0X35006E47,	"_DWORD",	0);
	set_cmt	(0X35006E48,	"_DWORD",	0);
	set_cmt	(0X35006E50,	"_DWORD",	0);
	set_cmt	(0X35006E55,	"_DWORD",	0);
	create_insn	(x=0X35006E57);
	op_stkvar	(x,	0);
	create_insn	(x=0X35006E6A);
	op_stkvar	(x,	1);
	create_insn	(x=0X35006E7C);
	op_stkvar	(x,	0);
	create_insn	(x=0X35006E7F);
	op_stkvar	(x,	1);
	set_cmt	(0X35006E82,	"_DWORD",	0);
	set_cmt	(0X35006E84,	"_DWORD",	0);
	create_insn	(x=0X35006E85);
	op_stkvar	(x,	1);
	set_cmt	(0X35006E88,	"_DWORD",	0);
	set_cmt	(0X35006E89,	"_DWORD",	0);
	create_insn	(x=0X35006EA1);
	op_stkvar	(x,	0);
	create_insn	(x=0X35006EA8);
	op_stkvar	(x,	0);
	create_insn	(x=0X35006EAF);
	op_stkvar	(x,	0);
	create_insn	(x=0X35006EB2);
	op_stkvar	(x,	1);
	create_insn	(x=0X35006EB5);
	op_stkvar	(x,	0);
	create_insn	(x=0X35006EB8);
	op_stkvar	(x,	0);
	create_insn	(x=0X35006EBB);
	op_stkvar	(x,	0);
	create_insn	(x=0X35006EC9);
	op_hex		(x,	1);
	create_insn	(0X35006ECE);
	create_insn	(0X35006EE2);
	create_insn	(0X35006EF2);
	create_insn	(0X35006F02);
	create_insn	(x=0X35006F03);
	op_stkvar	(x,	1);
	create_insn	(0X35006F15);
	create_insn	(x=0X35006F16);
	op_stkvar	(x,	1);
	create_insn	(0X35006F28);
	create_insn	(x=0X35006F2E);
	op_stkvar	(x,	1);
	create_insn	(x=0X35006F32);
	op_stkvar	(x,	1);
	create_insn	(x=0X35006F3B);
	op_hex		(x,	1);
	create_insn	(x=0X35006F3E);
	op_stkvar	(x,	1);
	create_insn	(x=0X35006F4D);
	op_stkvar	(x,	1);
	set_cmt	(0X35006F50,	"_DWORD",	0);
	set_cmt	(0X35006F55,	"_DWORD",	0);
	set_cmt	(0X35006F57,	"_DWORD",	0);
	set_cmt	(0X35006F5E,	"_DWORD",	0);
	set_cmt	(0X35006F63,	"_DWORD",	0);
	set_cmt	(0X35006F65,	"_DWORD",	0);
	create_insn	(x=0X35006F65);
	op_stkvar	(x,	0);
	make_array	(0X35006F7C,	0X4);
	create_insn	(0X35006F80);
	create_insn	(x=0X35006F83);
	op_hex		(x,	1);
	create_insn	(x=0X35006F8A);
	op_hex		(x,	1);
	create_insn	(0X35006F93);
	create_insn	(x=0X35006FAD);
	op_stkvar	(x,	1);
	create_insn	(x=0X35006FBB);
	op_stkvar	(x,	0);
	create_insn	(x=0X35006FC6);
	op_stkvar	(x,	0);
	create_insn	(x=0X35006FCB);
	op_stkvar	(x,	0);
	create_insn	(x=0X35006FCE);
	op_stkvar	(x,	0);
	create_insn	(x=0X35006FD5);
	op_stkvar	(x,	0);
	create_insn	(x=0X35006FE1);
	op_stkvar	(x,	0);
	create_insn	(x=0X35006FF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X35006FF4);
	op_stkvar	(x,	0);
	create_insn	(x=0X35006FF9);
	op_stkvar	(x,	0);
	create_insn	(x=0X35007000);
	op_stkvar	(x,	1);
	create_insn	(x=0X35007004);
	op_stkvar	(x,	0);
	create_insn	(x=0X35007009);
	op_stkvar	(x,	0);
	create_insn	(x=0X35007010);
	op_stkvar	(x,	1);
	create_insn	(x=0X35007014);
	op_stkvar	(x,	0);
	create_insn	(x=0X35007019);
	op_stkvar	(x,	0);
	create_insn	(x=0X35007020);
	op_stkvar	(x,	1);
	create_insn	(x=0X35007026);
	op_stkvar	(x,	0);
	create_insn	(x=0X35007030);
	op_stkvar	(x,	1);
	create_insn	(x=0X35007036);
	op_stkvar	(x,	0);
	create_insn	(x=0X35007040);
	op_stkvar	(x,	1);
	create_insn	(x=0X35007046);
	op_stkvar	(x,	0);
	create_insn	(x=0X35007050);
	op_stkvar	(x,	1);
	create_insn	(x=0X35007054);
	op_stkvar	(x,	1);
	create_insn	(x=0X35007057);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500705D);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500706A);
	op_stkvar	(x,	1);
	create_insn	(x=0X35007074);
	op_hex		(x,	1);
	create_insn	(x=0X35007077);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500707C);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500708E);
	op_stkvar	(x,	1);
	create_insn	(x=0X35007092);
	op_stkvar	(x,	0);
	create_insn	(x=0X35007099);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500709D);
	op_stkvar	(x,	0);
	create_insn	(x=0X350070A8);
	op_stkvar	(x,	1);
}

//------------------------------------------------------------------------
// Information about bytes

static Bytes_1(void) {
        auto x;
#define id x

	create_insn	(x=0X350070AC);
	op_stkvar	(x,	0);
	create_insn	(x=0X350070B7);
	op_stkvar	(x,	1);
	create_insn	(x=0X350070BB);
	op_stkvar	(x,	0);
	create_insn	(x=0X350070CD);
	op_stkvar	(x,	1);
	create_insn	(x=0X350070DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X350070E1);
	op_stkvar	(x,	1);
	create_insn	(x=0X350070E4);
	op_stkvar	(x,	1);
	make_array	(0X35007104,	0XC);
	create_insn	(0X35007110);
	create_insn	(x=0X35007113);
	op_hex		(x,	1);
	create_insn	(0X35007126);
	create_insn	(x=0X35007142);
	op_hex		(x,	1);
	create_insn	(x=0X35007144);
	op_hex		(x,	1);
	create_insn	(x=0X35007149);
	op_hex		(x,	1);
	create_insn	(x=0X3500714E);
	op_hex		(x,	1);
	create_insn	(x=0X35007152);
	op_hex		(x,	1);
	create_insn	(x=0X35007154);
	op_hex		(x,	1);
	create_insn	(x=0X3500715B);
	op_hex		(x,	1);
	create_insn	(x=0X3500715D);
	op_hex		(x,	1);
	create_insn	(x=0X35007161);
	op_hex		(x,	1);
	create_insn	(x=0X35007163);
	op_hex		(x,	1);
	create_insn	(x=0X3500716A);
	op_hex		(x,	1);
	create_insn	(x=0X3500716C);
	op_hex		(x,	1);
	create_insn	(x=0X35007170);
	op_hex		(x,	1);
	create_insn	(x=0X35007172);
	op_hex		(x,	1);
	create_insn	(x=0X35007179);
	op_hex		(x,	1);
	create_insn	(x=0X3500717B);
	op_hex		(x,	1);
	create_insn	(x=0X3500717F);
	op_hex		(x,	1);
	create_insn	(x=0X35007181);
	op_hex		(x,	1);
	create_insn	(x=0X35007188);
	op_hex		(x,	1);
	create_insn	(x=0X3500718A);
	op_hex		(x,	1);
	create_insn	(x=0X3500718E);
	op_hex		(x,	1);
	create_insn	(x=0X35007190);
	op_hex		(x,	1);
	create_insn	(x=0X35007197);
	op_hex		(x,	1);
	create_insn	(x=0X35007199);
	op_hex		(x,	1);
	create_insn	(x=0X3500719D);
	op_hex		(x,	1);
	create_insn	(x=0X3500719F);
	op_hex		(x,	1);
	create_insn	(x=0X350071A6);
	op_hex		(x,	1);
	create_insn	(x=0X350071A8);
	op_hex		(x,	1);
	create_insn	(x=0X350071AC);
	op_hex		(x,	1);
	create_insn	(x=0X350071AE);
	op_hex		(x,	1);
	create_insn	(x=0X350071B5);
	op_hex		(x,	1);
	create_insn	(x=0X350071B7);
	op_stkvar	(x,	0);
	create_insn	(x=0X350071CB);
	op_stkvar	(x,	1);
	create_insn	(x=0X350071CE);
	op_hex		(x,	1);
	create_insn	(x=0X350071D5);
	op_stkvar	(x,	1);
	create_insn	(x=0X350071E0);
	op_hex		(x,	1);
	create_insn	(x=0X350071E6);
	op_stkvar	(x,	1);
	make_array	(0X350071FD,	0X3);
	create_insn	(0X35007200);
	create_insn	(x=0X35007203);
	op_hex		(x,	1);
	create_insn	(x=0X35007214);
	op_hex		(x,	1);
	create_insn	(x=0X35007219);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X35007221);
	create_insn	(x=0X35007226);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X3500722C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X35007253);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X35007275);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X35007297);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X350072B9);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X350072DB);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X35007305);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X3500730B);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X35007316);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X3500731F);
	create_insn	(x=0X35007345);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X3500734B);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X35007357);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X35007368);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X3500737C);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500738D);
	op_stkvar	(x,	0);
	create_insn	(x=0X35007394);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500739D);
	op_stkvar	(x,	0);
	create_insn	(x=0X350073AA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X350073AF);
	op_hex		(x,	1);
	create_insn	(x=0X350073BB);
	op_stkvar	(x,	1);
	create_insn	(x=0X350073CE);
	op_hex		(x,	1);
	create_insn	(x=0X350073D5);
	op_hex		(x,	1);
	create_insn	(x=0X350073DA);
	op_stkvar	(x,	1);
	create_insn	(x=0X350073F1);
	op_stkvar	(x,	1);
	set_cmt	(0X35007410,	"Size",	0);
	create_insn	(x=0X35007411);
	op_stkvar	(x,	1);
	set_cmt	(0X35007417,	"Src",	0);
	set_cmt	(0X35007418,	"void *",	0);
	create_insn	(x=0X35007418);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X35007422);
	op_hex		(x,	1);
	create_insn	(x=0X35007432);
	op_stkvar	(x,	0);
	create_insn	(x=0X35007442);
	op_stkvar	(x,	0);
	create_insn	(x=0X35007448);
	op_stkvar	(x,	1);
	create_insn	(x=0X35007451);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500745E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X35007463);
	op_hex		(x,	1);
	create_insn	(x=0X3500746F);
	op_stkvar	(x,	1);
	create_insn	(x=0X35007482);
	op_hex		(x,	1);
	create_insn	(x=0X35007489);
	op_hex		(x,	1);
	create_insn	(x=0X3500748E);
	op_stkvar	(x,	1);
	create_insn	(x=0X350074B0);
	op_stkvar	(x,	1);
	set_cmt	(0X350074CB,	"Size",	0);
	create_insn	(x=0X350074CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X350074D2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X350074D8,	"Src",	0);
	set_cmt	(0X350074D9,	"void *",	0);
	create_insn	(x=0X350074DF);
	op_hex		(x,	1);
	make_array	(0X350074E9,	0X7);
	create_insn	(0X350074F0);
	create_insn	(x=0X350074F3);
	op_hex		(x,	1);
	create_insn	(x=0X350074FD);
	op_hex		(x,	1);
	create_insn	(0X35007506);
	set_cmt	(0X3500751A,	"dwErrCode",	0);
	create_insn	(x=0X35007528);
	op_stkvar	(x,	1);
	set_cmt	(0X3500752B,	"_DWORD",	0);
	set_cmt	(0X3500752C,	"_DWORD",	0);
	set_cmt	(0X3500752E,	"_DWORD",	0);
	set_cmt	(0X35007532,	"_DWORD",	0);
	set_cmt	(0X3500754A,	"_DWORD",	0);
	create_insn	(x=0X35007552);
	op_stkvar	(x,	1);
	set_cmt	(0X35007555,	"_DWORD",	0);
	set_cmt	(0X35007556,	"_DWORD",	0);
	set_cmt	(0X35007558,	"_DWORD",	0);
	set_cmt	(0X3500755C,	"_DWORD",	0);
	create_insn	(x=0X35007565);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X3500756A);
	op_stkvar	(x,	0);
	create_insn	(x=0X35007572);
	op_hex		(x,	1);
	set_cmt	(0X3500757A,	"_DWORD",	0);
	set_cmt	(0X3500757C,	"_DWORD",	0);
	create_insn	(x=0X3500757C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X3500758C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X35007593,	"_DWORD",	0);
	set_cmt	(0X350075A1,	"_DWORD",	0);
	create_insn	(x=0X350075B9);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X350075C0);
	op_stkvar	(x,	0);
	create_insn	(x=0X350075E1);
	op_stkvar	(x,	1);
	create_insn	(x=0X350075E6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X350075ED);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500760E);
	op_stkvar	(x,	1);
	create_insn	(x=0X35007613);
	op_hex		(x,	1);
	create_insn	(x=0X3500761A);
	op_hex		(x,	1);
	create_insn	(x=0X3500761F);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X35007629);
	op_hex		(x,	1);
	set_cmt	(0X35007631,	"_DWORD",	0);
	create_insn	(x=0X3500763C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X35007646);
	op_stkvar	(x,	1);
	create_insn	(x=0X35007649);
	op_hex		(x,	1);
	create_insn	(x=0X35007671);
	op_stkvar	(x,	0);
	create_insn	(x=0X35007674);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500767D);
	op_hex		(x,	1);
	create_insn	(x=0X35007688);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500768F);
	op_stkvar	(x,	0);
	create_insn	(x=0X350076A0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X350076A9);
	op_stkvar	(x,	0);
	create_insn	(x=0X350076B1);
	op_stkvar	(x,	1);
	create_insn	(x=0X350076BD);
	op_stkvar	(x,	1);
	create_insn	(x=0X350076CD);
	op_hex		(x,	1);
	create_insn	(x=0X350076D4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X350076D9);
	op_hex		(x,	1);
	create_insn	(x=0X350076E7);
	op_stkvar	(x,	1);
	create_insn	(x=0X350076FA);
	op_stkvar	(x,	1);
	create_insn	(x=0X350076FD);
	op_hex		(x,	1);
	create_insn	(x=0X35007704);
	op_hex		(x,	1);
	set_cmt	(0X35007707,	"uCmdShow",	0);
	set_cmt	(0X3500770B,	"lpCmdLine",	0);
	create_insn	(x=0X35007712);
	op_stkvar	(x,	1);
	create_insn	(x=0X35007715);
	op_stkvar	(x,	1);
	create_insn	(x=0X35007719);
	op_stkvar	(x,	0);
	create_insn	(x=0X35007725);
	op_stkvar	(x,	1);
	set_cmt	(0X3500773B,	"_DWORD",	0);
	set_cmt	(0X3500773D,	"_DWORD",	0);
	set_cmt	(0X3500773F,	"_DWORD",	0);
	set_cmt	(0X35007741,	"_DWORD",	0);
	create_insn	(x=0X35007741);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X35007746,	"_DWORD",	0);
	set_cmt	(0X35007748,	"_DWORD",	0);
	set_cmt	(0X35007755,	"_DWORD",	0);
	set_cmt	(0X35007757,	"_DWORD",	0);
	set_cmt	(0X35007759,	"_DWORD",	0);
	set_cmt	(0X3500775B,	"_DWORD",	0);
	create_insn	(x=0X3500775B);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X35007760,	"_DWORD",	0);
	set_cmt	(0X35007762,	"_DWORD",	0);
	set_cmt	(0X3500777F,	"_DWORD",	0);
	create_insn	(x=0X35007786);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X35007790);
	op_hex		(x,	1);
	create_insn	(x=0X35007793);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X350077A0,	"_DWORD",	0);
	set_cmt	(0X350077A2,	"_DWORD",	0);
	set_cmt	(0X350077A7,	"_DWORD",	0);
	set_cmt	(0X350077AC,	"_DWORD",	0);
	set_cmt	(0X350077B4,	"_DWORD",	0);
	set_cmt	(0X350077B6,	"_DWORD",	0);
	set_cmt	(0X350077BB,	"_DWORD",	0);
	set_cmt	(0X350077C0,	"_DWORD",	0);
	set_cmt	(0X350077CB,	"_DWORD",	0);
	set_cmt	(0X350077CD,	"_DWORD",	0);
	set_cmt	(0X350077D2,	"_DWORD",	0);
	set_cmt	(0X350077D7,	"_DWORD",	0);
	create_insn	(x=0X350077F0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X3500780B);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X35007815);
	op_hex		(x,	1);
	set_cmt	(0X35007818,	"_DWORD",	0);
	create_insn	(0X35007828);
	set_cmt	(0X35007831,	"_DWORD",	0);
	set_cmt	(0X35007833,	"_DWORD",	0);
	set_cmt	(0X35007838,	"_DWORD",	0);
	set_cmt	(0X3500783A,	"_DWORD",	0);
	set_cmt	(0X3500783C,	"_DWORD",	0);
	set_cmt	(0X3500783E,	"_DWORD",	0);
	set_cmt	(0X35007843,	"_DWORD",	0);
	create_insn	(x=0X35007843);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X35007850);
	op_stkvar	(x,	0);
	set_cmt	(0X3500785C,	"_DWORD",	0);
	set_cmt	(0X3500785E,	"_DWORD",	0);
	set_cmt	(0X3500786B,	"_DWORD",	0);
	set_cmt	(0X35007872,	"_DWORD",	0);
	set_cmt	(0X35007874,	"_DWORD",	0);
	set_cmt	(0X35007879,	"_DWORD",	0);
	set_cmt	(0X3500787A,	"_DWORD",	0);
	create_insn	(x=0X35007884);
	op_stkvar	(x,	0);
	set_cmt	(0X3500788B,	"_DWORD",	0);
	create_insn	(x=0X3500788B);
	op_stkvar	(x,	0);
	set_cmt	(0X35007894,	"_DWORD",	0);
	set_cmt	(0X3500789C,	"_DWORD",	0);
	create_insn	(x=0X3500789E);
	op_stkvar	(x,	1);
	create_insn	(x=0X350078A1);
	op_stkvar	(x,	0);
	set_cmt	(0X350078A8,	"_DWORD",	0);
	set_cmt	(0X350078A9,	"_DWORD",	0);
	create_insn	(x=0X350078AA);
	op_stkvar	(x,	1);
	set_cmt	(0X350078AD,	"_DWORD",	0);
	set_cmt	(0X350078AE,	"_DWORD",	0);
	set_cmt	(0X350078B9,	"_DWORD",	0);
	set_cmt	(0X350078C0,	"_DWORD",	0);
	set_cmt	(0X350078C5,	"_DWORD",	0);
	set_cmt	(0X350078C7,	"_DWORD",	0);
	set_cmt	(0X350078CE,	"_DWORD",	0);
	create_insn	(x=0X350078D8);
	op_stkvar	(x,	1);
	set_cmt	(0X350078E3,	"_DWORD",	0);
	set_cmt	(0X350078EA,	"_DWORD",	0);
	create_insn	(x=0X350078F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X350078F9);
	op_stkvar	(x,	0);
	create_insn	(x=0X350078FC);
	op_stkvar	(x,	0);
	create_insn	(x=0X35007916);
	op_stkvar	(x,	1);
	create_insn	(x=0X35007927);
	op_stkvar	(x,	0);
	create_insn	(0X35007935);
	create_insn	(x=0X3500793C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X35007943);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500795D);
	op_hex		(x,	1);
	create_insn	(x=0X35007964);
	op_stkvar	(x,	1);
	set_cmt	(0X3500796B,	"C",	0);
	create_insn	(x=0X35007971);
	op_hex		(x,	1);
	create_insn	(x=0X35007978);
	op_stkvar	(x,	0);
	create_insn	(0X35007987);
	create_insn	(x=0X35007989);
	op_stkvar	(x,	1);
	create_insn	(x=0X350079A0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X350079AA);
	op_stkvar	(x,	0);
	create_insn	(x=0X350079B7);
	op_stkvar	(x,	1);
	create_insn	(x=0X350079CB);
	op_stkvar	(x,	1);
	create_insn	(x=0X350079E4);
	op_hex		(x,	1);
	create_insn	(x=0X350079EB);
	op_hex		(x,	1);
	create_insn	(x=0X350079F2);
	op_stkvar	(x,	1);
	create_insn	(x=0X350079FD);
	op_stkvar	(x,	0);
	create_insn	(x=0X35007A0A);
	op_stkvar	(x,	1);
	create_insn	(x=0X35007A0D);
	op_stkvar	(x,	1);
	create_insn	(x=0X35007A18);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X35007A1D);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X35007A58);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X35007A5D);
	op_hex		(x,	1);
	create_insn	(x=0X35007A62);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X35007A7D);
	op_hex		(x,	1);
	create_insn	(0X35007A99);
	create_insn	(x=0X35007AA7);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X35007AB1);
	op_hex		(x,	1);
	set_cmt	(0X35007AB4,	"_DWORD",	0);
	create_insn	(x=0X35007AC6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X35007ACF);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X35007AED);
	op_hex		(x,	1);
	create_insn	(x=0X35007AF3);
	op_stkvar	(x,	1);
	create_insn	(x=0X35007AF6);
	op_stkvar	(x,	1);
	create_insn	(x=0X35007B0B);
	op_stkvar	(x,	1);
	create_insn	(x=0X35007B0F);
	op_stkvar	(x,	0);
	create_insn	(x=0X35007B15);
	op_stkvar	(x,	0);
	create_insn	(x=0X35007B1F);
	op_stkvar	(x,	1);
	set_cmt	(0X35007B2A,	"_DWORD",	0);
	create_insn	(x=0X35007B2A);
	op_stkvar	(x,	0);
	set_cmt	(0X35007B33,	"_DWORD",	0);
	set_cmt	(0X35007B38,	"_DWORD",	0);
	set_cmt	(0X35007B3A,	"_DWORD",	0);
	create_insn	(x=0X35007B3A);
	op_stkvar	(x,	0);
	set_cmt	(0X35007B43,	"_DWORD",	0);
	set_cmt	(0X35007B4E,	"_DWORD",	0);
	set_cmt	(0X35007B61,	"_DWORD",	0);
	set_cmt	(0X35007B63,	"_DWORD",	0);
	set_cmt	(0X35007B67,	"_DWORD",	0);
	create_insn	(x=0X35007B67);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X35007B6C,	"_DWORD",	0);
	create_insn	(x=0X35007B6C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X35007B71,	"_DWORD",	0);
	create_insn	(x=0X35007B71);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X35007B80,	"_DWORD",	0);
	set_cmt	(0X35007B82,	"_DWORD",	0);
	set_cmt	(0X35007B84,	"_DWORD",	0);
	create_insn	(x=0X35007B84);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X35007B89,	"_DWORD",	0);
	create_insn	(x=0X35007B89);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X35007B8E,	"_DWORD",	0);
	create_insn	(x=0X35007B8E);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X35007B99);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X35007BA0,	"_DWORD",	0);
	set_cmt	(0X35007BA5,	"_DWORD",	0);
	set_cmt	(0X35007BA7,	"_DWORD",	0);
	set_cmt	(0X35007BB0,	"_DWORD",	0);
	set_cmt	(0X35007BB5,	"_DWORD",	0);
	set_cmt	(0X35007BB7,	"_DWORD",	0);
	set_cmt	(0X35007BBF,	"_DWORD",	0);
	set_cmt	(0X35007BC4,	"_DWORD",	0);
	set_cmt	(0X35007BC6,	"_DWORD",	0);
	create_insn	(x=0X35007BD2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X35007BE1);
	set_cmt	(0X35007BFA,	"_DWORD",	0);
	create_insn	(x=0X35007BFA);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X35007BFF);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X35007C06,	"_DWORD",	0);
	create_insn	(x=0X35007C11);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X35007C1B);
	op_hex		(x,	1);
	create_insn	(x=0X35007C25);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X35007C3B);
	op_stkvar	(x,	0);
	create_insn	(x=0X35007C3E);
	op_stkvar	(x,	0);
	create_insn	(x=0X35007C42);
	op_stkvar	(x,	0);
	create_insn	(x=0X35007C49);
	op_stkvar	(x,	0);
	create_insn	(x=0X35007C53);
	op_stkvar	(x,	0);
	create_insn	(x=0X35007C60);
	op_stkvar	(x,	0);
	create_insn	(x=0X35007C6C);
	op_hex		(x,	1);
	set_cmt	(0X35007C7D,	"_DWORD",	0);
	create_insn	(x=0X35007C7D);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X35007C8E);
	op_stkvar	(x,	1);
	create_insn	(x=0X35007CA2);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X35007CAC);
	op_hex		(x,	1);
	create_insn	(x=0X35007CC2);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X35007CCC);
	op_hex		(x,	1);
	create_insn	(x=0X35007CD4);
	op_stkvar	(x,	1);
	create_insn	(0X35007CDF);
	create_insn	(x=0X35007CE8);
	op_hex		(x,	1);
	set_cmt	(0X35007CF9,	"_DWORD",	0);
	create_insn	(x=0X35007CF9);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X35007D0A);
	op_stkvar	(x,	1);
	create_insn	(x=0X35007D1E);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X35007D28);
	op_hex		(x,	1);
	create_insn	(x=0X35007D3E);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X35007D48);
	op_hex		(x,	1);
	create_insn	(x=0X35007D50);
	op_stkvar	(x,	1);
	create_insn	(x=0X35007D58);
	op_stkvar	(x,	1);
	create_insn	(x=0X35007D65);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X35007D6F);
	op_hex		(x,	1);
	set_cmt	(0X35007D72,	"_DWORD",	0);
	create_insn	(x=0X35007D7F);
	op_stkvar	(x,	1);
	create_insn	(x=0X35007D88);
	op_stkvar	(x,	0);
	create_insn	(x=0X35007D92);
	op_stkvar	(x,	1);
	create_insn	(x=0X35007D95);
	op_stkvar	(x,	1);
	create_insn	(x=0X35007DA1);
	op_hex		(x,	1);
	create_insn	(x=0X35007DA4);
	op_hex		(x,	1);
	set_cmt	(0X35007DA7,	"_DWORD",	0);
	set_cmt	(0X35007DA9,	"_DWORD",	0);
	set_cmt	(0X35007DAE,	"_DWORD",	0);
	set_cmt	(0X35007DAF,	"_DWORD",	0);
	create_insn	(x=0X35007DB9);
	op_stkvar	(x,	0);
	create_insn	(x=0X35007DC8);
	op_hex		(x,	1);
	create_insn	(x=0X35007DCF);
	op_hex		(x,	1);
	set_cmt	(0X35007DD4,	"_DWORD",	0);
	create_insn	(x=0X35007DE1);
	op_stkvar	(x,	0);
	create_insn	(x=0X35007DE4);
	op_stkvar	(x,	1);
	create_insn	(x=0X35007DED);
	op_hex		(x,	1);
	set_cmt	(0X35007DF0,	"_DWORD",	0);
	create_insn	(x=0X35007DFB);
	op_stkvar	(x,	1);
	create_insn	(x=0X35007E00);
	op_stkvar	(x,	1);
	create_insn	(x=0X35007E03);
	op_stkvar	(x,	0);
	create_insn	(x=0X35007E39);
	op_hex		(x,	1);
	create_insn	(x=0X35007E43);
	op_stkvar	(x,	0);
	create_insn	(x=0X35007E48);
	op_stkvar	(x,	1);
	create_insn	(x=0X35007E4D);
	op_stkvar	(x,	0);
	create_insn	(x=0X35007EE5);
	op_stkvar	(x,	1);
	create_insn	(x=0X35007EF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X35007EF9);
	op_stkvar	(x,	1);
	create_insn	(x=0X35007F18);
	op_stkvar	(x,	0);
	create_insn	(x=0X35007F30);
	op_stkvar	(x,	1);
	create_insn	(x=0X35007F3A);
	op_stkvar	(x,	1);
	create_insn	(x=0X35007F44);
	op_stkvar	(x,	1);
	create_insn	(x=0X35007F48);
	op_stkvar	(x,	0);
	create_insn	(x=0X35007F54);
	op_stkvar	(x,	1);
	create_insn	(x=0X35007F59);
	op_stkvar	(x,	1);
	set_cmt	(0X35007F5C,	"_DWORD",	0);
	set_cmt	(0X35007F5E,	"_DWORD",	0);
	set_cmt	(0X35007F6A,	"_DWORD",	0);
	set_cmt	(0X35007F6B,	"_DWORD",	0);
	set_cmt	(0X35007F73,	"_DWORD",	0);
	set_cmt	(0X35007F75,	"_DWORD",	0);
	set_cmt	(0X35007F7A,	"_DWORD",	0);
	set_cmt	(0X35007F7D,	"_DWORD",	0);
	create_insn	(x=0X35007F7F);
	op_stkvar	(x,	0);
	create_insn	(x=0X35007F8A);
	op_stkvar	(x,	0);
	create_insn	(x=0X35007F8D);
	op_stkvar	(x,	0);
	create_insn	(x=0X35007F94);
	op_stkvar	(x,	0);
	create_insn	(x=0X35007F9B);
	op_stkvar	(x,	1);
	set_cmt	(0X35007FAB,	"_DWORD",	0);
	set_cmt	(0X35007FB1,	"_DWORD",	0);
	create_insn	(x=0X35007FB2);
	op_stkvar	(x,	1);
	create_insn	(x=0X35007FB9);
	op_stkvar	(x,	1);
	create_insn	(x=0X35007FBE);
	op_stkvar	(x,	1);
	set_cmt	(0X35007FD1,	"Seed",	0);
	create_insn	(x=0X35007FD7);
	op_stkvar	(x,	1);
	create_insn	(x=0X35007FDC);
	op_hex		(x,	1);
	create_insn	(x=0X35007FDF);
	op_stkvar	(x,	0);
	create_insn	(x=0X35007FED);
	op_stkvar	(x,	1);
	create_insn	(x=0X35007FF6);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500800F);
	op_stkvar	(x,	1);
	create_insn	(x=0X35008012);
	op_stkvar	(x,	1);
	create_insn	(x=0X35008023);
	op_stkvar	(x,	1);
	create_insn	(x=0X35008026);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500802D);
	op_stkvar	(x,	0);
	create_insn	(x=0X35008039);
	op_stkvar	(x,	1);
	create_insn	(x=0X35008074);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500807A);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500807D);
	op_stkvar	(x,	0);
	set_cmt	(0X35008084,	"_DWORD",	0);
	create_insn	(x=0X3500808C);
	op_stkvar	(x,	1);
	create_insn	(x=0X35008092);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500809B);
	op_stkvar	(x,	0);
	create_insn	(x=0X350080A4);
	op_stkvar	(x,	0);
	create_insn	(x=0X350080B2);
	op_stkvar	(x,	1);
	set_cmt	(0X350080B5,	"_DWORD",	0);
	create_insn	(x=0X350080B6);
	op_stkvar	(x,	1);
	set_cmt	(0X350080B9,	"_DWORD",	0);
	set_cmt	(0X350080BA,	"_DWORD",	0);
	create_insn	(x=0X350080BC);
	op_stkvar	(x,	0);
	create_insn	(x=0X350080C4);
	op_stkvar	(x,	0);
	create_insn	(x=0X350080CE);
	op_stkvar	(x,	1);
	create_insn	(x=0X350080D1);
	op_stkvar	(x,	1);
	set_cmt	(0X350080F0,	"lpThreadId",	0);
	set_cmt	(0X350080F2,	"dwCreationFlags",	0);
	set_cmt	(0X350080F4,	"lpParameter",	0);
	create_insn	(x=0X350080F4);
	op_stkvar	(x,	0);
	set_cmt	(0X350080F7,	"lpStartAddress",	0);
	create_insn	(x=0X350080F7);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X350080FC,	"dwStackSize",	0);
	set_cmt	(0X350080FE,	"lpThreadAttributes",	0);
	set_cmt	(0X35008106,	"dwMilliseconds",	0);
	create_insn	(x=0X3500810B);
	op_stkvar	(x,	0);
	set_cmt	(0X3500811B,	"dwMilliseconds",	0);
	create_insn	(0X3500811B);
	set_cmt	(0X35008122,	"dwMilliseconds",	0);
	set_cmt	(0X35008127,	"bWaitAll",	0);
	create_insn	(x=0X35008129);
	op_stkvar	(x,	1);
	set_cmt	(0X3500812F,	"lpHandles",	0);
	set_cmt	(0X35008130,	"nCount",	0);
	create_insn	(x=0X35008139);
	op_stkvar	(x,	1);
	set_cmt	(0X3500814B,	"dwMilliseconds",	0);
	set_cmt	(0X35008152,	"dwMilliseconds",	0);
	set_cmt	(0X35008157,	"bWaitAll",	0);
	create_insn	(x=0X35008159);
	op_stkvar	(x,	1);
	set_cmt	(0X3500815F,	"lpHandles",	0);
	set_cmt	(0X35008160,	"nCount",	0);
	create_insn	(x=0X35008169);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500816C);
	op_stkvar	(x,	0);
	create_insn	(x=0X35008177);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500817E);
	op_stkvar	(x,	0);
	create_insn	(x=0X35008182);
	op_stkvar	(x,	1);
	create_insn	(x=0X35008188);
	op_stkvar	(x,	0);
	set_cmt	(0X3500818F,	"_DWORD",	0);
	create_insn	(x=0X35008194);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500819A);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500819D);
	op_stkvar	(x,	1);
	set_cmt	(0X350081A0,	"_DWORD",	0);
	create_insn	(x=0X350081A1);
	op_stkvar	(x,	1);
	create_insn	(x=0X350081A4);
	op_stkvar	(x,	0);
	set_cmt	(0X350081AA,	"_DWORD",	0);
	set_cmt	(0X350081AB,	"_DWORD",	0);
	create_insn	(x=0X350081AD);
	op_stkvar	(x,	0);
	create_insn	(x=0X350081B5);
	op_stkvar	(x,	0);
	create_insn	(x=0X350081C1);
	op_stkvar	(x,	1);
	create_insn	(x=0X350081C9);
	op_stkvar	(x,	0);
	create_insn	(x=0X350081D3);
	op_stkvar	(x,	0);
	create_insn	(x=0X350081E7);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X350081F0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X350081FA);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X35008206);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500821B);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X35008233);
	op_hex		(x,	1);
	create_insn	(x=0X3500823A);
	op_hex		(x,	1);
	create_insn	(x=0X3500823F);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X35008261);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500827B);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X3500829F);
	op_hex		(x,	1);
	create_insn	(x=0X350082A6);
	op_hex		(x,	1);
	create_insn	(x=0X350082AD);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X350082B7);
	op_stkvar	(x,	0);
	create_insn	(x=0X350082BB);
	op_hex		(x,	1);
	create_insn	(x=0X350082BE);
	op_stkvar	(x,	0);
	create_insn	(x=0X350082CF);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X350082E0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X350082EA);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X350082F6);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500830B);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X3500832F);
	op_hex		(x,	1);
	create_insn	(x=0X35008336);
	op_hex		(x,	1);
	create_insn	(x=0X3500833D);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X35008347);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500834A);
	op_hex		(x,	1);
	create_insn	(x=0X3500834E);
	op_stkvar	(x,	0);
	create_insn	(x=0X35008351);
	op_stkvar	(x,	1);
	create_insn	(x=0X35008360);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500836E);
	op_stkvar	(x,	1);
	create_insn	(x=0X35008373);
	op_hex		(x,	1);
	create_insn	(x=0X3500837C);
	op_hex		(x,	1);
	create_insn	(x=0X35008383);
	op_stkvar	(x,	0);
	create_insn	(x=0X35008386);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500838F);
	op_hex		(x,	1);
	set_cmt	(0X35008392,	"_DWORD",	0);
	create_insn	(x=0X3500839D);
	op_stkvar	(x,	1);
	create_insn	(x=0X350083A2);
	op_stkvar	(x,	1);
	create_insn	(x=0X350083A5);
	op_stkvar	(x,	0);
	create_insn	(x=0X350083DB);
	op_hex		(x,	1);
	create_insn	(x=0X350083EC);
	op_stkvar	(x,	0);
	create_insn	(x=0X350083EF);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500846E);
	op_stkvar	(x,	0);
	create_insn	(x=0X35008487);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500848A);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500848D);
	op_stkvar	(x,	1);
	create_insn	(x=0X35008498);
	op_stkvar	(x,	0);
	create_insn	(x=0X350084A1);
	op_stkvar	(x,	1);
	create_insn	(x=0X350084C0);
	op_stkvar	(x,	0);
	create_insn	(x=0X350084D2);
	op_stkvar	(x,	1);
	create_insn	(x=0X350084DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X350084E6);
	op_stkvar	(x,	1);
	create_insn	(x=0X350084EA);
	op_stkvar	(x,	0);
	create_insn	(x=0X350084F6);
	op_stkvar	(x,	1);
	create_insn	(x=0X350084FB);
	op_stkvar	(x,	1);
	set_cmt	(0X350084FE,	"_DWORD",	0);
	set_cmt	(0X35008500,	"_DWORD",	0);
	create_insn	(x=0X35008505);
	op_hex		(x,	1);
	set_cmt	(0X35008508,	"_DWORD",	0);
	set_cmt	(0X35008509,	"_DWORD",	0);
	create_insn	(x=0X35008515);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500851E);
	op_stkvar	(x,	0);
	create_insn	(x=0X35008523);
	op_stkvar	(x,	1);
	create_insn	(x=0X35008541);
	op_stkvar	(x,	1);
	create_insn	(x=0X35008548);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500854D);
	op_stkvar	(x,	1);
	create_insn	(x=0X35008552);
	op_stkvar	(x,	0);
	create_insn	(x=0X35008555);
	op_stkvar	(x,	0);
	create_insn	(x=0X35008560);
	op_stkvar	(x,	0);
	create_insn	(x=0X35008567);
	op_stkvar	(x,	0);
	create_insn	(x=0X35008570);
	op_stkvar	(x,	1);
	create_insn	(x=0X35008590);
	op_stkvar	(x,	1);
	create_insn	(x=0X35008593);
	op_stkvar	(x,	0);
	set_cmt	(0X3500859A,	"_DWORD",	0);
	create_insn	(x=0X3500859F);
	op_stkvar	(x,	0);
	create_insn	(x=0X350085A2);
	op_stkvar	(x,	1);
	set_cmt	(0X350085A5,	"_DWORD",	0);
	create_insn	(x=0X350085A6);
	op_stkvar	(x,	1);
	create_insn	(x=0X350085A9);
	op_stkvar	(x,	0);
	set_cmt	(0X350085AF,	"_DWORD",	0);
	set_cmt	(0X350085B0,	"_DWORD",	0);
	create_insn	(x=0X350085B2);
	op_stkvar	(x,	0);
	create_insn	(x=0X350085BA);
	op_stkvar	(x,	0);
	create_insn	(x=0X350085D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X350085D8);
	op_stkvar	(x,	0);
	create_insn	(x=0X350085E2);
	op_stkvar	(x,	0);
	create_insn	(x=0X350085F7);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X35008600);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X3500860A);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X35008616);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500862B);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X35008643);
	op_hex		(x,	1);
	create_insn	(x=0X3500864A);
	op_hex		(x,	1);
	create_insn	(x=0X3500864F);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X35008671);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500868B);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X350086AF);
	op_hex		(x,	1);
	create_insn	(x=0X350086B6);
	op_hex		(x,	1);
	create_insn	(x=0X350086BD);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X350086C7);
	op_stkvar	(x,	0);
	create_insn	(x=0X350086CB);
	op_hex		(x,	1);
	create_insn	(x=0X350086CE);
	op_stkvar	(x,	0);
	create_insn	(x=0X350086DF);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X350086F0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X350086FA);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X35008706);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500871B);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X3500873F);
	op_hex		(x,	1);
	create_insn	(x=0X35008746);
	op_hex		(x,	1);
	create_insn	(x=0X3500874D);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X35008757);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500875A);
	op_hex		(x,	1);
	create_insn	(x=0X3500875D);
	op_stkvar	(x,	1);
	create_insn	(x=0X35008761);
	op_stkvar	(x,	0);
	create_insn	(x=0X35008764);
	op_stkvar	(x,	1);
	set_cmt	(0X3500876D,	"_DWORD",	0);
	set_cmt	(0X35008772,	"_DWORD",	0);
	set_cmt	(0X35008774,	"_DWORD",	0);
	create_insn	(x=0X35008774);
	op_stkvar	(x,	0);
	set_cmt	(0X3500877D,	"_DWORD",	0);
	set_cmt	(0X3500879B,	"_DWORD",	0);
	make_array	(0X350087A7,	0X9);
	create_insn	(0X350087B0);
	create_insn	(x=0X350087B3);
	op_hex		(x,	1);
	create_insn	(x=0X350087BD);
	op_hex		(x,	1);
	create_insn	(0X350087C6);
	create_insn	(x=0X350087E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X350087ED);
	op_stkvar	(x,	1);
	create_insn	(x=0X350087F3);
	op_stkvar	(x,	0);
	set_cmt	(0X350087FD,	"_DWORD",	0);
	create_insn	(x=0X35008804);
	op_stkvar	(x,	1);
	make_array	(0X3500881B,	0X5);
	create_insn	(0X35008820);
	create_insn	(x=0X35008823);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500882A);
	op_stkvar	(x,	1);
	create_insn	(x=0X35008838);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500883B);
	op_hex		(x,	1);
	create_insn	(x=0X35008842);
	op_hex		(x,	1);
	create_insn	(x=0X35008849);
	op_stkvar	(x,	1);
	make_array	(0X3500884E,	0X2);
	create_insn	(0X35008850);
	set_name	(0X35008850,	"_WinMain@16");
	create_insn	(x=0X3500886F);
	op_hex		(x,	1);
	create_insn	(0X35008871);
	create_insn	(x=0X3500888B);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500888E);
	op_stkvar	(x,	0);
	set_cmt	(0X35008895,	"_DWORD",	0);
	set_cmt	(0X3500889C,	"_DWORD",	0);
	create_insn	(x=0X350088B5);
	op_stkvar	(x,	1);
	create_insn	(x=0X350088BC);
	op_stkvar	(x,	0);
	create_insn	(x=0X350088C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X350088C7);
	op_hex		(x,	1);
	set_cmt	(0X350088DB,	"_DWORD",	0);
	set_cmt	(0X350088E6,	"_DWORD",	0);
	create_insn	(x=0X350088F1);
	op_stkvar	(x,	1);
	create_insn	(x=0X35008903);
	op_stkvar	(x,	1);
	create_insn	(x=0X35008910);
	op_stkvar	(x,	1);
	set_cmt	(0X35008918,	"_DWORD",	0);
	create_insn	(x=0X3500891D);
	op_stkvar	(x,	1);
	set_cmt	(0X35008923,	"_DWORD",	0);
	set_cmt	(0X35008924,	"_DWORD",	0);
	create_insn	(x=0X35008930);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500893B);
	op_stkvar	(x,	0);
	create_insn	(x=0X35008948);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500895E);
	op_hex		(x,	1);
	create_insn	(x=0X35008970);
	op_stkvar	(x,	0);
	create_insn	(0X35008982);
	create_insn	(x=0X35008992);
	op_stkvar	(x,	1);
	create_insn	(x=0X35008998);
	op_stkvar	(x,	0);
	set_cmt	(0X350089A3,	"_DWORD",	0);
	create_insn	(x=0X350089B1);
	op_hex		(x,	1);
	create_insn	(x=0X350089C2);
	op_stkvar	(x,	1);
	create_insn	(x=0X350089D1);
	op_stkvar	(x,	1);
	create_insn	(x=0X350089DC);
	op_stkvar	(x,	0);
	set_cmt	(0X350089EB,	"_DWORD",	0);
	create_insn	(x=0X350089F0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X350089FD,	"Seed",	0);
	create_insn	(x=0X35008A03);
	op_hex		(x,	1);
	create_insn	(x=0X35008A06);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X35008A1E);
	op_hex		(x,	1);
	set_cmt	(0X35008A29,	"C",	0);
	create_insn	(x=0X35008A2F);
	op_hex		(x,	1);
	create_insn	(x=0X35008A3C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X35008A48);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X35008A7D);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X35008A8F);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X35008AAE);
	op_hex		(x,	1);
	create_insn	(x=0X35008AB5);
	op_hex		(x,	1);
	create_insn	(x=0X35008ABA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X35008ACC);
	op_stkvar	(x,	1);
	create_insn	(x=0X35008AEE);
	op_stkvar	(x,	1);
	create_insn	(x=0X35008AF4);
	op_hex		(x,	1);
	set_cmt	(0X35008AF9,	"_DWORD",	0);
	set_cmt	(0X35008AFD,	"_DWORD",	0);
	create_insn	(x=0X35008AFE);
	op_hex		(x,	1);
	create_insn	(x=0X35008B01);
	op_stkvar	(x,	1);
	set_cmt	(0X35008B09,	"_DWORD",	0);
	set_cmt	(0X35008B18,	"_DWORD",	0);
	create_insn	(x=0X35008B1A);
	op_stkvar	(x,	1);
	set_cmt	(0X35008B20,	"_DWORD",	0);
	create_insn	(x=0X35008B30);
	op_stkvar	(x,	1);
	create_insn	(x=0X35008B36);
	op_stkvar	(x,	0);
	create_insn	(x=0X35008B45);
	op_stkvar	(x,	0);
	create_insn	(0X35008B70);
	create_insn	(x=0X35008B72);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X35008B7C);
	op_stkvar	(x,	0);
	create_insn	(x=0X35008B89);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X35008B9B);
	op_stkvar	(x,	1);
	create_insn	(x=0X35008BB4);
	op_hex		(x,	1);
	create_insn	(x=0X35008BBB);
	op_hex		(x,	1);
	create_insn	(x=0X35008BC2);
	op_stkvar	(x,	1);
	create_insn	(x=0X35008BE2);
	op_hex		(x,	1);
	set_cmt	(0X35008BE4,	"_DWORD",	0);
	create_insn	(x=0X35008BE6);
	op_stkvar	(x,	0);
	create_insn	(x=0X35008BEE);
	op_stkvar	(x,	1);
	set_cmt	(0X35008BF4,	"_DWORD",	0);
	create_insn	(x=0X35008BF5);
	op_stkvar	(x,	1);
	set_cmt	(0X35008BFB,	"_DWORD",	0);
	set_cmt	(0X35008C02,	"_DWORD",	0);
	create_insn	(x=0X35008C04);
	op_stkvar	(x,	1);
	set_cmt	(0X35008C0A,	"_DWORD",	0);
	set_cmt	(0X35008C11,	"_DWORD",	0);
	set_cmt	(0X35008C13,	"_DWORD",	0);
	create_insn	(x=0X35008C15);
	op_stkvar	(x,	1);
	set_cmt	(0X35008C1B,	"_DWORD",	0);
	create_insn	(x=0X35008C1C);
	op_stkvar	(x,	1);
	set_cmt	(0X35008C22,	"_DWORD",	0);
	set_cmt	(0X35008C23,	"_DWORD",	0);
	set_cmt	(0X35008C25,	"_DWORD",	0);
	set_cmt	(0X35008C2D,	"_DWORD",	0);
	create_insn	(0X35008C47);
	set_cmt	(0X35008C5E,	"_DWORD",	0);
	create_insn	(x=0X35008C82);
	op_hex		(x,	1);
	set_cmt	(0X35008C85,	"_DWORD",	0);
	set_cmt	(0X35008C90,	"_DWORD",	0);
	create_insn	(0X35008C98);
	create_insn	(x=0X35008CB1);
	op_hex		(x,	1);
	set_cmt	(0X35008CB4,	"_DWORD",	0);
	set_cmt	(0X35008CBF,	"_DWORD",	0);
	create_insn	(0X35008CC7);
	create_insn	(x=0X35008CCA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X35008CF7);
	create_insn	(x=0X35008CF9);
	op_hex		(x,	1);
	create_insn	(x=0X35008D00);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X35008D2B);
	create_insn	(x=0X35008D2D);
	op_hex		(x,	1);
	create_insn	(x=0X35008D53);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X35008D78);
	op_hex		(x,	1);
	set_cmt	(0X35008D7B,	"_DWORD",	0);
	create_insn	(x=0X35008D8D);
	op_hex		(x,	1);
	set_cmt	(0X35008D90,	"_DWORD",	0);
	create_insn	(x=0X35008D9E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X35008DC9);
	create_insn	(x=0X35008DCB);
	op_hex		(x,	1);
	create_insn	(x=0X35008DD9);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X35008DF8);
	op_hex		(x,	1);
	set_cmt	(0X35008DFB,	"dwMilliseconds",	0);
	create_insn	(x=0X35008E0D);
	op_hex		(x,	1);
	create_insn	(0X35008E15);
	set_cmt	(0X35008E1E,	"_DWORD",	0);
	create_insn	(x=0X35008E2A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X35008E56);
	create_insn	(x=0X35008E58);
	op_hex		(x,	1);
	create_insn	(x=0X35008E7E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X35008E9B);
	op_hex		(x,	1);
	set_cmt	(0X35008E9E,	"_DWORD",	0);
	create_insn	(x=0X35008EB0);
	op_hex		(x,	1);
	set_cmt	(0X35008EB3,	"_DWORD",	0);
	create_insn	(x=0X35008EC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X35008ECD);
	op_stkvar	(x,	1);
	create_insn	(x=0X35008ED3);
	op_stkvar	(x,	0);
	set_cmt	(0X35008EDD,	"_DWORD",	0);
	create_insn	(x=0X35008EE4);
	op_stkvar	(x,	0);
	set_cmt	(0X35008EED,	"_DWORD",	0);
	set_cmt	(0X35008EEF,	"_DWORD",	0);
	set_cmt	(0X35008EF1,	"_DWORD",	0);
	set_cmt	(0X35008EF3,	"_DWORD",	0);
	create_insn	(x=0X35008EF3);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X35008EF8,	"_DWORD",	0);
	set_cmt	(0X35008EFA,	"_DWORD",	0);
	create_insn	(x=0X35008F09);
	op_hex		(x,	1);
	set_cmt	(0X35008F0C,	"_DWORD",	0);
	set_cmt	(0X35008F17,	"FileName",	0);
	make_array	(0X35008F1E,	0X2);
	create_insn	(x=0X35008F20);
	op_stkvar	(x,	1);
	set_name	(0X35008F20,	"__allmul");
	create_insn	(x=0X35008F24);
	op_stkvar	(x,	1);
	create_insn	(x=0X35008F2A);
	op_stkvar	(x,	1);
	create_insn	(x=0X35008F30);
	op_stkvar	(x,	1);
	create_insn	(0X35008F39);
	set_name	(0X35008F39,	"hard");
	create_insn	(x=0X35008F3E);
	op_stkvar	(x,	1);
	create_insn	(x=0X35008F42);
	op_stkvar	(x,	1);
	create_insn	(x=0X35008F48);
	op_stkvar	(x,	1);
	make_array	(0X35008F54,	0XC);
	create_insn	(0X35008F60);
	set_name	(0X35008F60,	"__aulldiv");
	create_insn	(x=0X35008F62);
	op_stkvar	(x,	1);
	create_insn	(x=0X35008F6A);
	op_stkvar	(x,	1);
	create_insn	(x=0X35008F6E);
	op_stkvar	(x,	1);
	create_insn	(x=0X35008F78);
	op_stkvar	(x,	1);
	create_insn	(0X35008F82);
	create_insn	(x=0X35008F84);
	op_stkvar	(x,	1);
	create_insn	(x=0X35008F88);
	op_stkvar	(x,	1);
	create_insn	(x=0X35008F8C);
	op_stkvar	(x,	1);
	create_insn	(x=0X35008F90);
	op_hex		(x,	1);
	create_insn	(x=0X35008F92);
	op_hex		(x,	1);
	create_insn	(x=0X35008F94);
	op_hex		(x,	1);
	create_insn	(x=0X35008F96);
	op_hex		(x,	1);
	create_insn	(x=0X35008FA0);
	op_stkvar	(x,	1);
	create_insn	(x=0X35008FA6);
	op_stkvar	(x,	1);
	create_insn	(x=0X35008FB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X35008FB8);
	op_stkvar	(x,	1);
	make_array	(0X35008FC8,	0X8);
	create_insn	(0X35008FD0);
	set_name	(0X35008FD0,	"__alloca_probe");
	create_insn	(x=0X35008FD1);
	op_stkvar	(x,	1);
	create_insn	(x=0X35008FDF);
	op_hex		(x,	1);
	set_name	(0X35008FE4,	"cs10");
	create_insn	(x=0X35008FEF);
	op_stkvar	(x,	0);
	create_insn	(0X35008FF4);
	set_name	(0X35008FF4,	"cs20");
	create_insn	(0X35008FFD);
	set_name	(0X35008FFD,	"?pre_c_initialization@@YAHXZ");
	set_cmt	(0X3500900A,	"struct _exception *",	0);
	create_insn	(x=0X35009025);
	op_hex		(x,	1);
	set_cmt	(0X35009034,	"void (__cdecl *)()",	0);
	create_insn	(x=0X35009034);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X35009043,	"mode",	0);
	set_cmt	(0X3500905D,	"UserMathErrorFunction",	0);
	create_insn	(x=0X3500905D);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X3500907C,	"Flag",	0);
	create_insn	(0X35009099);
	set_cmt	(0X350090A0,	"Trap to Debugger",	0);
	create_insn	(x=0X350090A0);
	op_hex		(x,	0);
	create_insn	(0X350090A1);
	set_name	(0X350090A1,	"?post_pgo_initialization@@YAHXZ");
	create_insn	(0X350090A9);
	set_name	(0X350090A9,	"?pre_cpp_initialization@@YAXXZ");
	set_cmt	(0X350090B3,	"NewMode",	0);
	create_insn	(0X350090BB);
	set_name	(0X350090BB,	"?__scrt_common_main_seh@@YAHXZ");
	create_insn	(x=0X350090BD);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X350090DC);
	op_stkvar	(x,	0);
	create_insn	(x=0X350090DF);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0X350090E8);
	op_stkvar	(x,	0);
	set_cmt	(0X35009101,	"Last",	0);
	create_insn	(x=0X35009101);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X35009106,	"First",	0);
	create_insn	(x=0X35009106);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X35009116);
	op_stkvar	(x,	0);
	set_cmt	(0X35009127,	"Last",	0);
	create_insn	(x=0X35009127);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X3500912C,	"First",	0);
	create_insn	(x=0X3500912C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X35009144);
	create_insn	(x=0X35009146);
	op_stkvar	(x,	0);
	create_insn	(x=0X35009149);
	op_stkvar	(x,	0);
	set_cmt	(0X3500918F,	"Callback",	0);
	set_cmt	(0X3500919F,	"nShowCmd",	0);
	set_cmt	(0X350091A5,	"lpCmdLine",	0);
	set_cmt	(0X350091A6,	"hPrevInstance",	0);
	set_cmt	(0X350091A7,	"hInstance",	0);
	create_insn	(x=0X350091E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X350091E7);
	op_stkvar	(x,	0);
	set_cmt	(0X350091EA,	"ExceptionPtr",	0);
	set_cmt	(0X350091EB,	"ExceptionNum",	0);
	create_insn	(x=0X350091F4);
	op_stkvar	(x,	1);
	set_cmt	(0X35009200,	"Code",	0);
	create_insn	(x=0X35009200);
	op_stkvar	(x,	0);
	create_insn	(x=0X35009208);
	op_stkvar	(x,	0);
	create_insn	(x=0X35009213);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500921A);
	op_stkvar	(x,	1);
	create_insn	(0X35009223);
	set_name	(0X35009223,	"start");
	create_insn	(0X3500922D);
	set_name	(0X3500922D,	"?find_pe_section@@YAPAU_IMAGE_SECTION_HEADER@@QAEI@Z");
	create_insn	(x=0X35009230);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500924F);
	op_stkvar	(x,	1);
	create_insn	(0X3500926D);
	create_insn	(0X35009271);
	set_name	(0X35009271,	"___scrt_acquire_startup_lock");
	create_insn	(0X3500927D);
	create_insn	(x=0X35009284);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X3500928E);
	create_insn	(0X350092A2);
	create_insn	(0X350092A6);
	set_name	(0X350092A6,	"___scrt_initialize_crt");
	create_insn	(x=0X350092A9);
	op_stkvar	(x,	0);
	create_insn	(0X350092C8);
	set_cmt	(0X350092D1,	"Terminating",	0);
	create_insn	(0X350092DB);
	create_insn	(0X350092DF);
	set_name	(0X350092DF,	"___scrt_initialize_onexit_tables");
	create_insn	(x=0X350092E2);
	op_hex		(x,	1);
	create_insn	(x=0X350092E6);
	op_stkvar	(x,	1);
	set_cmt	(0X350092FF,	"Table",	0);
	create_insn	(x=0X350092FF);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X35009312,	"Table",	0);
	create_insn	(x=0X35009312);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X35009325);
	create_insn	(x=0X3500932A);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500932E);
	op_hex		(x,	1);
	create_insn	(x=0X35009331);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X3500933B);
	op_hex		(x,	1);
	create_insn	(x=0X35009346);
	op_stkvar	(x,	0);
	create_insn	(x=0X35009349);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500934C);
	op_stkvar	(x,	0);
	create_insn	(x=0X35009352);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X35009357);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500935A);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500935D);
	op_stkvar	(x,	1);
	create_insn	(x=0X35009360);
	op_stkvar	(x,	0);
	create_insn	(0X3500936E);
	set_cmt	(0X35009375,	"Trap to Debugger",	0);
	create_insn	(x=0X35009375);
	op_hex		(x,	0);
	create_insn	(0X35009376);
	set_name	(0X35009376,	"___scrt_is_nonwritable_in_current_image");
	create_insn	(x=0X35009378);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X35009382);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0X350093B3);
	op_stkvar	(x,	1);
	set_cmt	(0X350093BD,	"unsigned int",	0);
	set_cmt	(0X350093BE,	"unsigned __int8 *",	0);
	create_insn	(x=0X350093D0);
	op_stkvar	(x,	0);
	create_insn	(x=0X350093DB);
	op_stkvar	(x,	1);
	create_insn	(x=0X350093EE);
	op_stkvar	(x,	1);
	create_insn	(x=0X350093F1);
	op_stkvar	(x,	0);
	create_insn	(0X35009400);
	set_name	(0X35009400,	"___scrt_release_startup_lock");
	create_insn	(x=0X3500940C);
	op_stkvar	(x,	0);
	create_insn	(x=0X35009414);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X3500941D);
	set_name	(0X3500941D,	"___scrt_uninitialize_crt");
	create_insn	(x=0X35009429);
	op_stkvar	(x,	0);
	set_cmt	(0X3500942F,	"Terminating",	0);
	create_insn	(x=0X3500942F);
	op_stkvar	(x,	0);
	set_cmt	(0X35009437,	"Terminating",	0);
	create_insn	(x=0X35009437);
	op_stkvar	(x,	0);
	create_insn	(0X35009445);
	set_name	(0X35009445,	"__onexit");
	create_insn	(x=0X35009455);
	op_hex		(x,	1);
	set_cmt	(0X35009458,	"Function",	0);
	create_insn	(x=0X35009458);
	op_stkvar	(x,	0);
	set_cmt	(0X35009469,	"Table",	0);
	create_insn	(x=0X35009469);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X3500947B);
	op_stkvar	(x,	1);
	create_insn	(0X35009480);
	set_name	(0X35009480,	"_atexit");
	set_cmt	(0X35009483,	"Func",	0);
	create_insn	(x=0X35009483);
	op_stkvar	(x,	0);
	create_insn	(0X35009495);
	set_name	(0X35009495,	"___security_init_cookie");
	create_insn	(x=0X35009498);
	op_hex		(x,	1);
	create_insn	(x=0X3500949B);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0X3500949F);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0X350094C5);
	op_stkvar	(x,	1);
	set_cmt	(0X350094C8,	"lpSystemTimeAsFileTime",	0);
	create_insn	(x=0X350094CF);
	op_stkvar	(x,	1);
	create_insn	(x=0X350094D2);
	op_stkvar	(x,	1);
	create_insn	(x=0X350094D5);
	op_stkvar	(x,	0);
	create_insn	(x=0X350094DE);
	op_stkvar	(x,	0);
	create_insn	(x=0X350094E7);
	op_stkvar	(x,	0);
	create_insn	(x=0X350094EA);
	op_stkvar	(x,	1);
	set_cmt	(0X350094ED,	"lpPerformanceCount",	0);
	create_insn	(x=0X350094F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X350094F7);
	op_stkvar	(x,	1);
	create_insn	(x=0X350094FA);
	op_stkvar	(x,	1);
	create_insn	(x=0X350094FD);
	op_stkvar	(x,	1);
	create_insn	(0X3500950D);
	create_insn	(x=0X35009513);
	op_hex		(x,	1);
	create_insn	(x=0X35009518);
	op_hex		(x,	1);
	create_insn	(0X35009531);
	create_insn	(0X35009535);
	set_name	(0X35009535,	"__get_startup_file_mode");
	create_insn	(0X3500953B);
	set_name	(0X3500953B,	"UserMathErrorFunction");
	set_cmt	(0X3500953E,	"ListHead",	0);
	create_insn	(x=0X3500953E);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X3500954A,	"Mask",	0);
	create_insn	(0X3500954A);
	set_name	(0X3500954A,	"__initialize_default_precision");
	set_cmt	(0X3500954F,	"NewValue",	0);
	set_cmt	(0X35009554,	"CurrentState",	0);
	create_insn	(x=0X3500955B);
	op_hex		(x,	1);
	create_insn	(0X35009563);
	set_cmt	(0X3500956A,	"Trap to Debugger",	0);
	create_insn	(x=0X3500956A);
	op_hex		(x,	0);
	create_insn	(0X3500956B);
	set_name	(0X3500956B,	"nullsub_1");
	create_insn	(x=0X3500956C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X35009572);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X35009578);
	set_name	(0X35009578,	"___scrt_initialize_default_local_stdio_options");
	create_insn	(x=0X35009580);
	op_hex		(x,	1);
	create_insn	(x=0X3500958E);
	op_hex		(x,	1);
	create_insn	(0X35009595);
	create_insn	(x=0X350095A1);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X350095A7);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X350095AD);
	set_name	(0X350095AD,	"___scrt_fastfail");
	create_insn	(x=0X350095B0);
	op_hex		(x,	1);
	set_cmt	(0X350095B8,	"ProcessorFeature",	0);
	create_insn	(x=0X350095C3);
	op_stkvar	(x,	1);
	set_cmt	(0X350095C6,	"Win8: RtlFailFast(ecx)",	0);
	create_insn	(x=0X350095C6);
	op_hex		(x,	0);
	create_insn	(0X350095C8);
	create_insn	(x=0X350095CA);
	op_stkvar	(x,	1);
	create_insn	(x=0X350095E2);
	op_hex		(x,	1);
	create_insn	(x=0X350095E5);
	op_stkvar	(x,	0);
	create_insn	(x=0X350095EB);
	op_stkvar	(x,	0);
	create_insn	(x=0X350095F1);
	op_stkvar	(x,	0);
	create_insn	(x=0X350095F7);
	op_stkvar	(x,	0);
	create_insn	(x=0X350095FD);
	op_stkvar	(x,	0);
	create_insn	(x=0X35009603);
	op_stkvar	(x,	0);
	create_insn	(x=0X35009609);
	op_stkvar	(x,	0);
	create_insn	(x=0X35009610);
	op_stkvar	(x,	0);
	create_insn	(x=0X35009617);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500961E);
	op_stkvar	(x,	0);
	create_insn	(x=0X35009625);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500962C);
	op_stkvar	(x,	0);
	create_insn	(x=0X35009634);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500963A);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500963D);
	op_stkvar	(x,	0);
	create_insn	(x=0X35009643);
	op_stkvar	(x,	1);
	create_insn	(x=0X35009646);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500964C);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500965B);
	op_stkvar	(x,	0);
	create_insn	(x=0X35009661);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500966B);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500966E);
	op_hex		(x,	1);
	create_insn	(x=0X35009671);
	op_stkvar	(x,	0);
	create_insn	(x=0X35009678);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500967F);
	op_stkvar	(x,	0);
	set_cmt	(0X35009688,	"lpTopLevelExceptionFilter",	0);
	create_insn	(x=0X3500968E);
	op_stkvar	(x,	1);
	create_insn	(x=0X35009691);
	op_stkvar	(x,	0);
	create_insn	(x=0X35009694);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500969C);
	op_stkvar	(x,	0);
	create_insn	(x=0X350096A7);
	op_stkvar	(x,	1);
	set_cmt	(0X350096AA,	"ExceptionInfo",	0);
	create_insn	(0X350096C8);
	set_name	(0X350096C8,	"___scrt_get_show_window_mode");
	create_insn	(x=0X350096CB);
	op_hex		(x,	1);
	create_insn	(x=0X350096D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X350096DB);
	op_hex		(x,	1);
	create_insn	(x=0X350096DE);
	op_stkvar	(x,	1);
	set_cmt	(0X350096E1,	"lpStartupInfo",	0);
	create_insn	(x=0X350096E8);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0X350096EE);
	op_stkvar	(x,	1);
	create_insn	(0X350096F4);
	set_cmt	(0X350096FB,	"lpModuleName",	0);
	create_insn	(0X350096FB);
	set_name	(0X350096FB,	"___scrt_is_managed_app");
	create_insn	(0X3500970C);
	set_cmt	(0X3500973F,	"lpTopLevelExceptionFilter",	0);
	create_insn	(x=0X3500973F);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X3500973F,	"___scrt_set_unhandled_exception_filter");
	create_insn	(0X3500974B);
	set_name	(0X3500974B,	"___scrt_unhandled_exception_filter@4");
	create_insn	(x=0X3500974E);
	op_stkvar	(x,	1);
	create_insn	(0X35009786);
	create_insn	(x=0X3500978C);
	op_hex		(x,	1);
	create_insn	(0X35009794);
	create_insn	(x=0X35009796);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X3500979B);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X350097BF);
	create_insn	(x=0X350097C1);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X350097C6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X350097EA);
	set_name	(0X350097EA,	"j_nullsub_1");
	create_insn	(x=0X350097F0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X350097F0,	"__SEH_prolog4");
	create_insn	(x=0X350097FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X35009800);
	op_stkvar	(x,	0);
	create_insn	(x=0X35009804);
	op_stkvar	(x,	1);
	create_insn	(0X35009836);
	set_name	(0X35009836,	"__SEH_epilog4");
	create_insn	(0X3500984B);
	create_insn	(x=0X3500984E);
	op_hex		(x,	1);
	create_insn	(x=0X35009855);
	op_hex		(x,	1);
	set_cmt	(0X35009862,	"ProcessorFeature",	0);
	create_insn	(x=0X35009871);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0X35009877);
	op_hex		(x,	1);
	create_insn	(x=0X35009888);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500989E);
	op_stkvar	(x,	1);
	create_insn	(x=0X350098A1);
	op_stkvar	(x,	1);
	create_insn	(x=0X350098A4);
	op_stkvar	(x,	0);
	create_insn	(x=0X350098A7);
	op_hex		(x,	1);
	create_insn	(x=0X350098AD);
	op_stkvar	(x,	1);
	create_insn	(x=0X350098B0);
	op_hex		(x,	1);
	create_insn	(x=0X350098B5);
	op_stkvar	(x,	0);
	create_insn	(x=0X350098B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X350098BB);
	op_hex		(x,	1);
	create_insn	(x=0X350098C0);
	op_stkvar	(x,	0);
	create_insn	(x=0X350098CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X350098CF);
	op_stkvar	(x,	1);
	create_insn	(x=0X350098D2);
	op_stkvar	(x,	1);
	create_insn	(x=0X350098E2);
	op_stkvar	(x,	1);
	create_insn	(x=0X350098E5);
	op_hex		(x,	1);
	create_insn	(x=0X3500991A);
	op_hex		(x,	1);
	create_insn	(0X35009925);
	create_insn	(x=0X3500992B);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500992F);
	op_stkvar	(x,	1);
	create_insn	(x=0X35009932);
	op_stkvar	(x,	0);
	create_insn	(x=0X35009935);
	op_stkvar	(x,	1);
	create_insn	(x=0X35009938);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500993B);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500994B);
	op_stkvar	(x,	1);
	create_insn	(x=0X35009959);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500995C);
	op_hex		(x,	1);
	create_insn	(x=0X35009961);
	op_stkvar	(x,	0);
	create_insn	(x=0X35009964);
	op_stkvar	(x,	1);
	create_insn	(x=0X35009969);
	op_hex		(x,	1);
	create_insn	(x=0X35009974);
	op_hex		(x,	1);
	create_insn	(x=0X3500997B);
	op_hex		(x,	1);
	create_insn	(x=0X3500998C);
	op_hex		(x,	1);
	create_insn	(x=0X35009993);
	op_hex		(x,	1);
	create_insn	(x=0X3500999F);
	op_stkvar	(x,	0);
	create_insn	(x=0X350099A2);
	op_stkvar	(x,	0);
	create_insn	(x=0X350099A5);
	op_stkvar	(x,	1);
	create_insn	(x=0X350099A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X350099AB);
	op_hex		(x,	1);
	create_insn	(x=0X350099BE);
	op_hex		(x,	1);
	create_insn	(x=0X350099CB);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0X350099D6);
	op_hex		(x,	1);
	create_insn	(0X350099EF);
	set_name	(0X350099EF,	"___scrt_is_ucrt_dll_in_use");
	create_insn	(0X350099FB);
	set_name	(0X350099FB,	"@__security_check_cookie@4");
	create_insn	(0X35009A06);
	set_name	(0X35009A06,	"$failure$4");
	create_insn	(0X35009A0C);
	set_name	(0X35009A0C,	"___raise_securityfailure");
	set_cmt	(0X35009A0F,	"lpTopLevelExceptionFilter",	0);
	set_cmt	(0X35009A17,	"ExceptionInfo",	0);
	create_insn	(x=0X35009A17);
	op_stkvar	(x,	0);
	set_cmt	(0X35009A20,	"uExitCode",	0);
	set_cmt	(0X35009A2B,	"hProcess",	0);
	create_insn	(0X35009A34);
	set_name	(0X35009A34,	"___report_gsfailure");
	create_insn	(x=0X35009A37);
	op_hex		(x,	1);
	set_cmt	(0X35009A3D,	"ProcessorFeature",	0);
	set_cmt	(0X35009A4B,	"Win8: RtlFailFast(ecx)",	0);
	create_insn	(x=0X35009A4B);
	op_hex		(x,	0);
	create_insn	(0X35009A4D);
	create_insn	(x=0X35009AA1);
	op_stkvar	(x,	1);
	create_insn	(x=0X35009AA9);
	op_stkvar	(x,	1);
	create_insn	(x=0X35009AB1);
	op_stkvar	(x,	1);
	create_insn	(x=0X35009AB9);
	op_stkvar	(x,	1);
	create_insn	(x=0X35009AF7);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X35009B0D);
	op_stkvar	(x,	0);
	create_insn	(x=0X35009B14);
	op_hex		(x,	1);
	create_insn	(x=0X35009B1D);
	op_stkvar	(x,	0);
	set_cmt	(0X35009B21,	"ExceptionInfo",	0);
	create_insn	(x=0X35009B21);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X35009B30);
	op_stkvar	(x,	1);
	set_name	(0X35009B30,	"_strstr");
	create_insn	(x=0X35009B34);
	op_stkvar	(x,	1);
	create_insn	(x=0X35009B53);
	op_hex		(x,	1);
	create_insn	(x=0X35009B70);
	op_hex		(x,	1);
	set_name	(0X35009B73,	"strstr_sse_safeloop");
	create_insn	(x=0X35009B7D);
	op_hex		(x,	1);
	set_name	(0X35009B9A,	"strstr_sse_unsafe");
	set_name	(0X35009B9E,	"strstr_sse_srchloop");
	set_name	(0X35009BD4,	"strstr_sse_srchchar");
	set_name	(0X35009BE7,	"strstr_sse_cmploop");
	create_insn	(0X35009C22);
	set_name	(0X35009C22,	"strstr_sse_cmpchars");
	set_name	(0X35009C29,	"strstr_sse_cmpunsafe");
	create_insn	(0X35009C40);
	set_name	(0X35009C40,	"strstr_sse_match");
	create_insn	(0X35009C45);
	set_name	(0X35009C45,	"strstr_sse_not_found");
	set_name	(0X35009C47,	"strstr_sse_exit");
	create_insn	(0X35009C4B);
	set_name	(0X35009C4B,	"strstr_sttni");
	create_insn	(0X35009C67);
	set_name	(0X35009C67,	"strstr_sttni_setchars");
	set_name	(0X35009C6C,	"strstr_sttni_setloopchar");
	set_name	(0X35009C72,	"strstr_sttni_setloopnochar");
	create_insn	(0X35009C86);
	set_name	(0X35009C86,	"strstr_sttni_srchnext");
	set_name	(0X35009C89,	"strstr_sttni_srch");
	set_name	(0X35009C8D,	"strstr_sttni_srchloop");
	create_insn	(0X35009CAC);
	set_name	(0X35009CAC,	"strstr_sttni_srchxmm");
	set_name	(0X35009CBF,	"strstr_sttni_srchcheck");
	set_name	(0X35009CC3,	"strstr_sttni_cmploop");
	create_insn	(0X35009CFB);
	set_name	(0X35009CFB,	"strstr_sttni_cmpchar");
	create_insn	(0X35009D16);
	set_name	(0X35009D16,	"strstr_no_sse");
	set_name	(0X35009D25,	"findnext");
	create_insn	(x=0X35009D27);
	op_stkvar	(x,	1);
	set_name	(0X35009D38,	"loop_start");
	set_name	(0X35009D3D,	"in_loop");
	set_name	(0X35009D45,	"not_found");
	create_insn	(0X35009D4B);
	set_name	(0X35009D4B,	"first_char_found");
	set_name	(0X35009D54,	"two_first_chars_equal");
	set_name	(0X35009D57,	"compare_loop");
	create_insn	(0X35009D7A);
	set_name	(0X35009D7A,	"strchr_call");
	create_insn	(0X35009D86);
	set_name	(0X35009D86,	"match");
	create_insn	(0X35009D8D);
	set_name	(0X35009D8D,	"empty_str2");
	create_insn	(0X35009D93);
	set_name	(0X35009D93,	"_wcschr");
	create_insn	(x=0X35009D98);
	op_hex		(x,	1);
	create_insn	(x=0X35009D9B);
	op_hex		(x,	1);
	create_insn	(x=0X35009DA2);
	op_stkvar	(x,	0);
	create_insn	(x=0X35009DAB);
	op_hex		(x,	1);
	create_insn	(x=0X35009DCE);
	op_hex		(x,	1);
	create_insn	(0X35009DF9);
	create_insn	(0X35009E16);
	create_insn	(0X35009E2A);
	create_insn	(0X35009E34);
	create_insn	(0X35009E38);
	create_insn	(0X35009E41);
	set_name	(0X35009E41,	"_wcsstr");
	create_insn	(x=0X35009E46);
	op_hex		(x,	1);
	create_insn	(x=0X35009E49);
	op_hex		(x,	1);
	create_insn	(x=0X35009E50);
	op_stkvar	(x,	0);
	create_insn	(x=0X35009E56);
	op_hex		(x,	1);
	create_insn	(0X35009E73);
	create_insn	(x=0X35009E83);
	op_hex		(x,	1);
	create_insn	(0X35009E97);
	create_insn	(x=0X35009EC7);
	op_hex		(x,	1);
	create_insn	(0X35009EE3);
	create_insn	(x=0X35009EFC);
	op_hex		(x,	1);
	create_insn	(x=0X35009F0A);
	op_hex		(x,	1);
	create_insn	(0X35009F2E);
	create_insn	(0X35009F45);
	create_insn	(x=0X35009F48);
	op_hex		(x,	1);
	create_insn	(0X35009F5D);
	create_insn	(0X35009F64);
	create_insn	(0X35009F6B);
	create_insn	(x=0X35009F8E);
	op_hex		(x,	1);
	create_insn	(0X35009FB9);
	create_insn	(x=0X35009FBF);
	op_hex		(x,	1);
	create_insn	(x=0X35009FDE);
	op_hex		(x,	1);
	create_insn	(x=0X35009FEC);
	op_hex		(x,	1);
	create_insn	(0X3500A021);
	create_insn	(x=0X3500A027);
	op_hex		(x,	1);
	create_insn	(x=0X3500A031);
	op_hex		(x,	1);
	create_insn	(0X3500A046);
	create_insn	(0X3500A050);
	create_insn	(0X3500A054);
	create_insn	(x=0X3500A05F);
	op_hex		(x,	1);
	create_insn	(0X3500A09B);
	make_array	(0X3500A0C4,	0XC);
	create_insn	(0X3500A0D0);
	set_name	(0X3500A0D0,	"_memmove");
	create_insn	(x=0X3500A0D2);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500A0D6);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500A0DA);
	op_stkvar	(x,	1);
	set_name	(0X3500A0F0,	"CopyUp");
	create_insn	(0X3500A114);
	set_name	(0X3500A114,	"CopyUpLargeMov");
	create_insn	(x=0X3500A120);
	op_stkvar	(x,	1);
	create_insn	(0X3500A127);
	set_name	(0X3500A127,	"CopyUpSSE2Check");
	create_insn	(x=0X3500A12B);
	op_hex		(x,	1);
	set_name	(0X3500A140,	"AtomChk");
	create_insn	(x=0X3500A14E);
	op_hex		(x,	1);
	create_insn	(x=0X3500A15A);
	op_hex		(x,	1);
	set_name	(0X3500A166,	"PalignHead4");
	set_name	(0X3500A179,	"PalignHead8");
	create_insn	(x=0X3500A190);
	op_hex		(x,	1);
	set_name	(0X3500A190,	"PalignLoop");
	set_name	(0X3500A1A2,	"MovPalign12");
	set_name	(0X3500A1AC,	"PalignLoop12");
	create_insn	(0X3500A1FD);
	set_name	(0X3500A1FD,	"MovPalign8");
	set_name	(0X3500A208,	"PalignLoop8");
	create_insn	(0X3500A256);
	set_name	(0X3500A256,	"MovPalign4");
	set_name	(0X3500A260,	"PalignLoop4");
	set_name	(0X3500A2AC,	"PalignTail");
	create_insn	(0X3500A2C4);
	set_name	(0X3500A2C4,	"PalignTail4");
	set_name	(0X3500A2D7,	"PalignTail8");
	set_cmt	(0X3500A2EE,	"switch 4 cases",	0);
	create_insn	(x=0X3500A2EE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_name	(0X3500A2EE,	"PalignTailLE3");
	set_cmt	(0X3500A2F5,	"switch jump",	0);
	create_insn	(x=0X3500A2F7);
	op_hex		(x,	1);
	set_name	(0X3500A2F7,	"Dword_align");
	set_name	(0X3500A2FF,	"Dword_up_align_loop");
	create_insn	(x=0X3500A30A);
	op_hex		(x,	1);
	set_name	(0X3500A312,	"Dword_align_Ok");
	create_insn	(x=0X3500A31D);
	op_hex		(x,	1);
	create_insn	(x=0X3500A322);
	op_hex		(x,	1);
	set_cmt	(0X3500A325,	"switch 4 cases",	0);
	create_insn	(x=0X3500A325);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X3500A32C);
	set_name	(0X3500A32C,	"ByteCopyUp");
	set_cmt	(0X3500A334,	"jump table for switch statement",	0);
	create_dword	(x=0X3500A334);
	make_array	(x,	0X4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X3500A334,	"jpt_3500A2F5");
	set_cmt	(0X3500A344,	"jumptable 3500A2F5 case 0\njumptable 3500A325 case 0",	1);
	create_insn	(x=0X3500A344);
	op_stkvar	(x,	1);
	set_name	(0X3500A344,	"TrailingUp0");
	set_cmt	(0X3500A34C,	"jumptable 3500A2F5 case 1\njumptable 3500A325 case 1",	1);
	create_insn	(0X3500A34C);
	set_name	(0X3500A34C,	"TrailingUp1");
	create_insn	(x=0X3500A350);
	op_stkvar	(x,	1);
	set_cmt	(0X3500A358,	"jumptable 3500A2F5 case 2\njumptable 3500A325 case 2",	1);
	create_insn	(0X3500A358);
	set_name	(0X3500A358,	"TrailingUp2");
	create_insn	(x=0X3500A362);
	op_stkvar	(x,	1);
	make_array	(0X3500A369,	0X3);
	set_cmt	(0X3500A36C,	"jumptable 3500A2F5 case 3\njumptable 3500A325 case 3",	1);
	create_insn	(0X3500A36C);
	set_name	(0X3500A36C,	"TrailingUp3");
	create_insn	(x=0X3500A37C);
	op_stkvar	(x,	1);
	create_insn	(0X3500A384);
	set_name	(0X3500A384,	"CopyDown");
	create_insn	(x=0X3500A3A1);
	op_hex		(x,	1);
	set_name	(0X3500A3A9,	"CopyDownNotAligned");
	create_insn	(x=0X3500A3AB);
	op_hex		(x,	1);
	set_name	(0X3500A3B0,	"CopyDownAlignLoop");
	set_name	(0X3500A3BD,	"CopyDownAligned");
	create_insn	(x=0X3500A3C8);
	op_hex		(x,	1);
	create_insn	(x=0X3500A3CB);
	op_hex		(x,	1);
	set_cmt	(0X3500A3D8,	"switch 4 cases",	0);
	create_insn	(x=0X3500A3D8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X3500A3E0,	"jump table for switch statement",	0);
	create_dword	(x=0X3500A3E0);
	make_array	(x,	0X4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X3500A3E0,	"jpt_3500A3D8");
	set_cmt	(0X3500A3F0,	"jumptable 3500A3D8 case 0",	1);
	create_insn	(x=0X3500A3F0);
	op_stkvar	(x,	1);
	set_name	(0X3500A3F0,	"TrailingDown0");
	set_cmt	(0X3500A3F8,	"jumptable 3500A3D8 case 1",	1);
	create_insn	(0X3500A3F8);
	set_name	(0X3500A3F8,	"TrailingDown1");
	create_insn	(x=0X3500A3FE);
	op_stkvar	(x,	1);
	make_array	(0X3500A405,	0X3);
	set_cmt	(0X3500A408,	"jumptable 3500A3D8 case 2",	1);
	create_insn	(0X3500A408);
	set_name	(0X3500A408,	"TrailingDown2");
	create_insn	(x=0X3500A414);
	op_stkvar	(x,	1);
	set_cmt	(0X3500A41C,	"jumptable 3500A3D8 case 3",	1);
	create_insn	(0X3500A41C);
	set_name	(0X3500A41C,	"TrailingDown3");
	create_insn	(x=0X3500A42E);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500A435);
	op_hex		(x,	1);
	set_name	(0X3500A435,	"XmmMovLargeAlignTest");
	set_name	(0X3500A43D,	"XmmMovAlignLoop");
	create_insn	(x=0X3500A444);
	op_hex		(x,	1);
	set_name	(0X3500A44C,	"XmmMovLargeLoop");
	create_insn	(x=0X3500A4B4);
	op_hex		(x,	1);
	set_name	(0X3500A4BC,	"XmmMovSmallTest");
	set_name	(0X3500A4C1,	"XmmMovSmallLoop");
	create_insn	(x=0X3500A4DC);
	op_hex		(x,	1);
	create_insn	(x=0X3500A4E4);
	op_hex		(x,	1);
	set_name	(0X3500A4E4,	"CopyDownSmall");
	set_name	(0X3500A4EC,	"CopyDownDwordLoop");
	create_insn	(x=0X3500A4F9);
	op_hex		(x,	1);
	set_name	(0X3500A501,	"CopyDownByteTest");
	set_name	(0X3500A505,	"CopyDownByteLoop");
	create_insn	(x=0X3500A514);
	op_stkvar	(x,	1);
	set_name	(0X3500A514,	"CopyDownReturn");
	create_insn	(0X3500A51B);
	make_array	(0X3500A51D,	0X3);
	create_insn	(0X3500A520);
	set_name	(0X3500A520,	"XmmCopy");
	create_insn	(x=0X3500A522);
	op_hex		(x,	1);
	set_name	(0X3500A52D,	"XmmCopyAligned");
	create_insn	(x=0X3500A52F);
	op_hex		(x,	1);
	create_insn	(x=0X3500A532);
	op_hex		(x,	1);
	set_name	(0X3500A540,	"XmmCopyLargeLoop");
	set_name	(0X3500A59D,	"XmmCopySmallTest");
	create_insn	(x=0X3500A5A3);
	op_hex		(x,	1);
	set_name	(0X3500A5B0,	"XmmCopySmallLoop");
	create_insn	(x=0X3500A5CB);
	op_hex		(x,	1);
	set_name	(0X3500A5CB,	"CopyUpDwordMov");
	set_name	(0X3500A5D0,	"CopyUpDwordTest");
	create_insn	(x=0X3500A5D2);
	op_hex		(x,	1);
	set_name	(0X3500A5D7,	"CopyUpDwordLoop");
	set_name	(0X3500A5E6,	"CopyUpByteTest");
	create_insn	(x=0X3500A5E8);
	op_hex		(x,	1);
	set_name	(0X3500A5ED,	"CopyUpByteLoop");
	create_insn	(x=0X3500A600);
	op_stkvar	(x,	1);
	set_name	(0X3500A600,	"CopyUpReturn");
	make_array	(0X3500A607,	0X9);
	create_insn	(0X3500A610);
	set_name	(0X3500A610,	"XmmCopyUnaligned");
	create_insn	(x=0X3500A61E);
	op_hex		(x,	1);
	set_name	(0X3500A623,	"XmmAlignByte");
	create_insn	(x=0X3500A62C);
	op_hex		(x,	1);
	set_name	(0X3500A62C,	"XmmAlignDwordTest");
	set_name	(0X3500A631,	"XmmAlignDwordLoop");
	set_name	(0X3500A63E,	"XmmAlignAdjustCnt");
	make_array	(0X3500A644,	0XC);
	create_insn	(0X3500A650);
	set_name	(0X3500A650,	"_ValidateLocalCookies");
	create_insn	(x=0X3500A654);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500A658);
	op_stkvar	(x,	1);
	set_cmt	(0X3500A667,	"StackCookie",	0);
	set_cmt	(0X3500A677,	"StackCookie",	0);
	make_array	(0X3500A682,	0XE);
	create_insn	(0X3500A690);
	set_name	(0X3500A690,	"SEH_350136D0");
	create_insn	(x=0X3500A693);
	op_hex		(x,	1);
	create_insn	(x=0X3500A698);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500A69C);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500A6A0);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500A6B5);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500A6B8);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500A6C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500A6C9);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500A6CC);
	op_hex		(x,	1);
	create_insn	(x=0X3500A6CF);
	op_hex		(x,	1);
	create_insn	(x=0X3500A6D9);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500A6DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500A6DF);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500A700);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500A711);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500A71A);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500A72E);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X3500A738);
	op_hex		(x,	1);
	create_insn	(x=0X3500A749);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500A753);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500A756);
	op_hex		(x,	1);
	create_insn	(x=0X3500A759);
	op_stkvar	(x,	1);
	set_cmt	(0X3500A75C,	"ExceptionRecord",	0);
	set_cmt	(0X3500A75E,	"TargetFrame",	0);
	create_insn	(x=0X3500A76C);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500A776);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500A77E);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500A781);
	op_stkvar	(x,	0);
	create_insn	(0X3500A78A);
	create_insn	(x=0X3500A78E);
	op_stkvar	(x,	1);
	create_insn	(0X3500A793);
	create_insn	(x=0X3500A799);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X3500A7AE);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500A7B7);
	op_hex		(x,	1);
	create_insn	(x=0X3500A7BA);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500A7C4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X3500A7DD);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500A7E5);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500A7E8);
	op_hex		(x,	1);
	set_cmt	(0X3500A7F5,	"Trap to Debugger",	0);
	create_insn	(x=0X3500A7F5);
	op_hex		(x,	0);
	create_insn	(0X3500A7F6);
	set_name	(0X3500A7F6,	"___vcrt_initialize");
	create_insn	(0X3500A80C);
	create_insn	(0X3500A81C);
	create_insn	(0X3500A81F);
	set_name	(0X3500A81F,	"___vcrt_uninitialize");
	create_insn	(x=0X3500A822);
	op_stkvar	(x,	0);
	make_array	(0X3500A83E,	0X2);
	create_insn	(0X3500A840);
	set_name	(0X3500A840,	"_strchr");
	create_insn	(x=0X3500A849);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500A850);
	op_hex		(x,	1);
	create_insn	(x=0X3500A861);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500A86A);
	op_hex		(x,	1);
	set_name	(0X3500A873,	"strchr_sse_loop");
	create_insn	(x=0X3500A88F);
	op_hex		(x,	1);
	create_insn	(0X3500A897);
	set_name	(0X3500A897,	"strchr_sse_break");
	create_insn	(0X3500A8A8);
	set_name	(0X3500A8A8,	"strchr_no_sse2");
	create_insn	(x=0X3500A8AA);
	op_stkvar	(x,	1);
	create_insn	(0X3500A8AE);
	set_name	(0X3500A8AE,	"___from_strstr_to_strchr");
	create_insn	(x=0X3500A8B1);
	op_hex		(x,	1);
	create_insn	(x=0X3500A8B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500A8B8);
	op_hex		(x,	1);
	set_name	(0X3500A8C0,	"str_misaligned");
	create_insn	(x=0X3500A8CD);
	op_hex		(x,	1);
	set_name	(0X3500A8D5,	"main_loop_start");
	create_insn	(x=0X3500A8DA);
	op_hex		(x,	1);
	set_name	(0X3500A8E0,	"main_loop");
	create_insn	(x=0X3500A8F1);
	op_hex		(x,	1);
	create_insn	(x=0X3500A8F4);
	op_hex		(x,	1);
	create_insn	(x=0X3500A8FE);
	op_hex		(x,	1);
	create_insn	(x=0X3500A906);
	op_hex		(x,	1);
	create_insn	(x=0X3500A90D);
	op_hex		(x,	1);
	create_insn	(x=0X3500A914);
	op_hex		(x,	1);
	set_name	(0X3500A91C,	"retnull");
	set_name	(0X3500A91E,	"retnull_bx");
	create_insn	(0X3500A922);
	set_name	(0X3500A922,	"found_bx");
	create_insn	(0X3500A927);
	set_name	(0X3500A927,	"chr_is_found");
	create_insn	(x=0X3500A93A);
	op_hex		(x,	1);
	create_insn	(0X3500A94F);
	set_name	(0X3500A94F,	"_byte_3");
	create_insn	(0X3500A956);
	set_name	(0X3500A956,	"_byte_2");
	create_insn	(0X3500A95D);
	set_name	(0X3500A95D,	"_byte_1");
	create_insn	(0X3500A964);
	set_name	(0X3500A964,	"_byte_0");
	make_array	(0X3500A96B,	0X5);
	create_insn	(0X3500A970);
	set_name	(0X3500A970,	"__local_unwind4");
	create_insn	(x=0X3500A973);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500A977);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500A97B);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500A984);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X3500A997);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500A9A2);
	op_stkvar	(x,	1);
	set_name	(0X3500A9A2,	"_lu_top");
	create_insn	(x=0X3500A9A9);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500A9B7);
	op_stkvar	(x,	1);
	create_insn	(0X3500A9F2);
	set_name	(0X3500A9F2,	"_lu_done");
	create_insn	(x=0X3500A9F9);
	op_hex		(x,	1);
	create_insn	(x=0X3500AA00);
	op_stkvar	(x,	1);
	set_name	(0X3500AA00,	"__unwind_handler4");
	create_insn	(x=0X3500AA04);
	op_hex		(x,	1);
	create_insn	(x=0X3500AA12);
	op_stkvar	(x,	1);
	set_cmt	(0X3500AA19,	"StackCookie",	0);
	create_insn	(x=0X3500AA32);
	op_hex		(x,	1);
	create_insn	(x=0X3500AA36);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500AA3A);
	op_stkvar	(x,	1);
	create_insn	(0X3500AA46);
	set_name	(0X3500AA46,	"__seh_longjmp_unwind4@4");
	create_insn	(x=0X3500AA47);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500AA50);
	op_hex		(x,	1);
	create_insn	(x=0X3500AA53);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500AA67);
	op_hex		(x,	1);
	create_insn	(0X3500AA6E);
	set_name	(0X3500AA6E,	"@_EH4_CallFilterFunc@8");
	create_insn	(0X3500AA85);
	set_name	(0X3500AA85,	"@_EH4_TransferToHandler@8");
	create_insn	(0X3500AA9E);
	set_name	(0X3500AA9E,	"@_EH4_GlobalUnwind2@8");
	set_cmt	(0X3500AAA4,	"ReturnValue",	0);
	set_cmt	(0X3500AAA6,	"ExceptionRecord",	0);
	set_cmt	(0X3500AAA7,	"TargetIp",	0);
	create_insn	(x=0X3500AAA7);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X3500AAAC,	"TargetFrame",	0);
	set_name	(0X3500AAB2,	"ReturnPoint");
	create_insn	(0X3500AAB7);
	set_name	(0X3500AAB7,	"@_EH4_LocalUnwind@16");
	create_insn	(x=0X3500AAB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500AABE);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500AAC7);
	op_hex		(x,	1);
	create_insn	(0X3500AACE);
	set_name	(0X3500AACE,	"___vcrt_freefls@4");
	create_insn	(x=0X3500AAD1);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500AAD8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X3500AADF,	"Block",	0);
	create_insn	(x=0X3500AAEA);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X3500AAEA,	"___vcrt_initialize_ptd");
	set_cmt	(0X3500AB02,	"lpTlsValue",	0);
	create_insn	(x=0X3500AB02);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X3500AB07,	"dwTlsIndex",	0);
	create_insn	(0X3500AB1A);
	create_insn	(0X3500AB1D);
	set_name	(0X3500AB1D,	"___vcrt_uninitialize_ptd");
	set_cmt	(0X3500AB27,	"dwTlsIndex",	0);
	create_insn	(x=0X3500AB2D);
	op_hex		(x,	1);
	create_insn	(0X3500AB38);
	set_name	(0X3500AB38,	"___vcrt_initialize_locks");
	create_insn	(x=0X3500AB3A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X3500AB41,	"int",	0);
	set_cmt	(0X3500AB43,	"dwSpinCount",	0);
	set_cmt	(0X3500AB48,	"lpCriticalSection",	0);
	create_insn	(x=0X3500AB4E);
	op_hex		(x,	1);
	create_insn	(0X3500AB6A);
	create_insn	(0X3500AB74);
	set_name	(0X3500AB74,	"___vcrt_uninitialize_locks");
	create_insn	(x=0X3500AB83);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X3500AB89,	"lpCriticalSection",	0);
	create_insn	(0X3500ABA3);
	set_name	(0X3500ABA3,	"unknown_libname_53");
	create_insn	(x=0X3500ABAB);
	op_hex		(x,	1);
	create_insn	(x=0X3500ABB3);
	op_stkvar	(x,	1);
	create_insn	(0X3500ABC0);
	set_name	(0X3500ABC0,	"?try_get_function@@YAPAXW4function_id@?A0x4d80baa5@@QBDQBW4module_id@2@2@Z");
	create_insn	(x=0X3500ABC3);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500ABDE);
	op_hex		(x,	1);
	create_insn	(x=0X3500ABE5);
	op_hex		(x,	1);
	create_insn	(x=0X3500ABF8);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500ABFB);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500AC0F);
	op_stkvar	(x,	1);
	set_cmt	(0X3500AC20,	"lpProcName",	0);
	create_insn	(x=0X3500AC20);
	op_stkvar	(x,	0);
	set_cmt	(0X3500AC23,	"hModule",	0);
	create_insn	(0X3500AC3B);
	create_insn	(0X3500AC43);
	create_insn	(x=0X3500AC4D);
	op_hex		(x,	1);
	create_insn	(0X3500AC60);
	set_name	(0X3500AC60,	"?try_get_module@@YAPAUHINSTANCE__@@W4module_id@?A0x4d80baa5@@@Z");
	create_insn	(x=0X3500AC64);
	op_stkvar	(x,	1);
	create_insn	(0X3500AC88);
	set_cmt	(0X3500AC90,	"dwFlags",	0);
	set_cmt	(0X3500AC95,	"hFile",	0);
	set_cmt	(0X3500AC97,	"lpLibFileName",	0);
	set_cmt	(0X3500ACAF,	"dwFlags",	0);
	set_cmt	(0X3500ACB0,	"hFile",	0);
	set_cmt	(0X3500ACB1,	"lpLibFileName",	0);
	create_insn	(0X3500ACBC);
	create_insn	(x=0X3500ACC2);
	op_hex		(x,	1);
	create_insn	(0X3500ACCB);
	set_cmt	(0X3500ACD3,	"hLibModule",	0);
	create_insn	(0X3500ACE1);
	set_name	(0X3500ACE1,	"___vcrt_FlsAlloc");
	create_insn	(x=0X3500ACE5);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X3500ACEA);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X3500ACEF);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X3500ACFD);
	op_hex		(x,	1);
	create_insn	(x=0X3500AD04);
	op_stkvar	(x,	0);
	create_insn	(0X3500AD13);
	create_insn	(0X3500AD1B);
	set_name	(0X3500AD1B,	"___vcrt_FlsFree");
	create_insn	(x=0X3500AD1F);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X3500AD24);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X3500AD29);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X3500AD35);
	op_hex		(x,	1);
	set_cmt	(0X3500AD3A,	"dwTlsIndex",	0);
	create_insn	(x=0X3500AD3A);
	op_stkvar	(x,	0);
	create_insn	(0X3500AD4C);
	create_insn	(0X3500AD55);
	set_name	(0X3500AD55,	"___vcrt_FlsSetValue");
	create_insn	(x=0X3500AD59);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X3500AD5E);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X3500AD63);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X3500AD6F);
	op_hex		(x,	1);
	set_cmt	(0X3500AD74,	"lpTlsValue",	0);
	create_insn	(x=0X3500AD74);
	op_stkvar	(x,	0);
	set_cmt	(0X3500AD77,	"dwTlsIndex",	0);
	create_insn	(x=0X3500AD77);
	op_stkvar	(x,	0);
	create_insn	(0X3500AD89);
	create_insn	(0X3500AD92);
	set_name	(0X3500AD92,	"___vcrt_InitializeCriticalSectionEx");
	create_insn	(x=0X3500AD96);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X3500AD9B);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X3500ADA0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X3500ADAE);
	op_hex		(x,	1);
	create_insn	(x=0X3500ADB5);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500ADBA);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500ADBD);
	op_stkvar	(x,	0);
	set_cmt	(0X3500ADC9,	"dwSpinCount",	0);
	create_insn	(x=0X3500ADC9);
	op_stkvar	(x,	0);
	set_cmt	(0X3500ADCC,	"lpCriticalSection",	0);
	create_insn	(x=0X3500ADCC);
	op_stkvar	(x,	0);
	create_insn	(0X3500ADD8);
	set_name	(0X3500ADD8,	"___vcrt_initialize_winapi_thunks");
	create_insn	(x=0X3500ADDD);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X3500ADE3);
	op_hex		(x,	1);
	create_insn	(x=0X3500ADED);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X3500AE00);
	op_hex		(x,	1);
	create_insn	(0X3500AE12);
	set_name	(0X3500AE12,	"___vcrt_uninitialize_winapi_thunks");
	create_insn	(x=0X3500AE15);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500AE1C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X3500AE2B,	"hLibModule",	0);
	create_insn	(x=0X3500AE33);
	op_hex		(x,	1);
	create_insn	(x=0X3500AE39);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X3500AE44);
	set_name	(0X3500AE44,	"___vcrt_initialize_pure_virtual_call_handler");
	create_insn	(x=0X3500AE49);
	op_hex		(x,	1);
	make_array	(0X3500AE61,	0XF);
	create_insn	(0X3500AE70);
	set_name	(0X3500AE70,	"__global_unwind2");
	set_cmt	(0X3500AE77,	"ReturnValue",	0);
	set_cmt	(0X3500AE79,	"ExceptionRecord",	0);
	set_cmt	(0X3500AE7B,	"TargetIp",	0);
	create_insn	(x=0X3500AE7B);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X3500AE80,	"TargetFrame",	0);
	create_insn	(x=0X3500AE80);
	op_stkvar	(x,	0);
	set_name	(0X3500AE88,	"_gu_return");
	create_insn	(x=0X3500AE90);
	op_stkvar	(x,	1);
	set_name	(0X3500AE90,	"__unwind_handler");
	create_insn	(x=0X3500AE94);
	op_hex		(x,	1);
	create_insn	(x=0X3500AEA2);
	op_stkvar	(x,	1);
	set_cmt	(0X3500AEA9,	"StackCookie",	0);
	create_insn	(x=0X3500AEC1);
	op_hex		(x,	1);
	create_insn	(x=0X3500AEC5);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500AEC9);
	op_stkvar	(x,	1);
	set_name	(0X3500AED4,	"_uh_return");
	create_insn	(0X3500AED5);
	set_name	(0X3500AED5,	"__local_unwind2");
	create_insn	(x=0X3500AED8);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500AEE0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X3500AEF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500AEFE);
	op_stkvar	(x,	1);
	set_name	(0X3500AEFE,	"_lu_top_0");
	create_insn	(x=0X3500AF0D);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500AF14);
	op_stkvar	(x,	1);
	set_name	(0X3500AF1A,	"_continue_");
	create_insn	(x=0X3500AF20);
	op_stkvar	(x,	0);
	set_name	(0X3500AF45,	"_lu_continue");
	create_insn	(x=0X3500AF47);
	op_stkvar	(x,	1);
	set_name	(0X3500AF47,	"_lu_done_0");
	create_insn	(x=0X3500AF52);
	op_hex		(x,	1);
	create_insn	(0X3500AF59);
	set_name	(0X3500AF59,	"__abnormal_termination");
	create_insn	(x=0X3500AF62);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X3500AF7B);
	set_name	(0X3500AF7B,	"_at_done");
	create_insn	(0X3500AF7C);
	set_name	(0X3500AF7C,	"__NLG_Notify1");
	create_insn	(x=0X3500AF7E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X3500AF85);
	set_name	(0X3500AF85,	"__NLG_Notify");
	create_insn	(x=0X3500AF87);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X3500AF8C);
	op_stkvar	(x,	1);
	set_name	(0X3500AF90,	"__NLG_Go");
	set_name	(0X3500AF9C,	"__NLG_Dispatch2");
	create_insn	(0X3500AFA4);
	set_name	(0X3500AFA4,	"__NLG_Call");
	set_name	(0X3500AFA6,	"__NLG_Return2");
	create_insn	(0X3500AFA7);
	set_name	(0X3500AFA7,	"??0_LocaleUpdate@@QAE@QAU__crt_locale_pointers@@@Z");
	create_insn	(x=0X3500AFAF);
	op_stkvar	(x,	1);
	create_insn	(0X3500AFC4);
	create_insn	(0X3500AFDF);
	create_insn	(x=0X3500B008);
	op_hex		(x,	1);
	create_insn	(x=0X3500B012);
	op_hex		(x,	1);
	create_insn	(x=0X3500B016);
	op_hex		(x,	1);
	create_insn	(0X3500B02A);
	set_name	(0X3500B02A,	"__towlower_l");
	create_insn	(x=0X3500B034);
	op_hex		(x,	1);
	create_insn	(x=0X3500B037);
	op_stkvar	(x,	0);
	set_cmt	(0X3500B041,	"struct __crt_locale_pointers *",	0);
	create_insn	(x=0X3500B041);
	op_stkvar	(x,	0);
	set_cmt	(0X3500B044,	"this",	0);
	create_insn	(x=0X3500B044);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500B04C);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500B059);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500B06C);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500B075);
	op_stkvar	(x,	0);
	create_insn	(0X3500B07A);
	set_cmt	(0X3500B07F,	"cchDest",	0);
	create_insn	(x=0X3500B081);
	op_stkvar	(x,	0);
	set_cmt	(0X3500B087,	"C",	0);
	create_insn	(x=0X3500B087);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500B095);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500B09E);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500B0A1);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500B0B2);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500B0B7);
	op_stkvar	(x,	1);
	set_cmt	(0X3500B0BA,	"lpDestStr",	0);
	set_cmt	(0X3500B0BB,	"MaxCount",	0);
	create_insn	(x=0X3500B0BD);
	op_stkvar	(x,	1);
	set_cmt	(0X3500B0C0,	"Source",	0);
	set_cmt	(0X3500B0C1,	"dwMapFlags",	0);
	set_cmt	(0X3500B0C2,	"wchar_t *",	0);
	create_insn	(x=0X3500B0C8);
	op_hex		(x,	1);
	create_insn	(x=0X3500B0CF);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500B0D6);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500B0DB);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500B0DF);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500B0E5);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500B0E8);
	op_hex		(x,	1);
	create_insn	(0X3500B0F3);
	set_name	(0X3500B0F3,	"_towlower");
	create_insn	(0X3500B0F5);
	set_name	(0X3500B0F5,	"__Mtx_lock");
	set_cmt	(0X3500B0F8,	"Locale",	0);
	set_cmt	(0X3500B0FA,	"C",	0);
	create_insn	(x=0X3500B0FA);
	op_stkvar	(x,	0);
	create_insn	(0X3500B106);
	set_name	(0X3500B106,	"__chvalidchk_l");
	create_insn	(x=0X3500B10B);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500B116);
	op_stkvar	(x,	1);
	create_insn	(0X3500B11F);
	create_insn	(x=0X3500B124);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500B12B);
	op_stkvar	(x,	1);
	create_insn	(0X3500B130);
	set_name	(0X3500B130,	"__isalnum_l");
	create_insn	(x=0X3500B135);
	op_hex		(x,	1);
	set_cmt	(0X3500B138,	"struct __crt_locale_pointers *",	0);
	create_insn	(x=0X3500B138);
	op_stkvar	(x,	0);
	set_cmt	(0X3500B13B,	"this",	0);
	create_insn	(x=0X3500B13B);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500B143);
	op_stkvar	(x,	1);
	set_cmt	(0X3500B146,	"Locale",	0);
	set_cmt	(0X3500B147,	"Mask",	0);
	set_cmt	(0X3500B14C,	"C",	0);
	create_insn	(x=0X3500B14C);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500B154);
	op_hex		(x,	1);
	create_insn	(x=0X3500B157);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500B15D);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500B160);
	op_hex		(x,	1);
	create_insn	(0X3500B16B);
	set_name	(0X3500B16B,	"__isalpha_l");
	create_insn	(x=0X3500B170);
	op_hex		(x,	1);
	set_cmt	(0X3500B173,	"struct __crt_locale_pointers *",	0);
	create_insn	(x=0X3500B173);
	op_stkvar	(x,	0);
	set_cmt	(0X3500B176,	"this",	0);
	create_insn	(x=0X3500B176);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500B17E);
	op_stkvar	(x,	1);
	set_cmt	(0X3500B181,	"Locale",	0);
	set_cmt	(0X3500B182,	"Mask",	0);
	set_cmt	(0X3500B187,	"C",	0);
	create_insn	(x=0X3500B187);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500B18F);
	op_hex		(x,	1);
	create_insn	(x=0X3500B192);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500B198);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500B19B);
	op_hex		(x,	1);
	create_insn	(0X3500B1A6);
	set_name	(0X3500B1A6,	"__ischartype_l");
	create_insn	(x=0X3500B1AB);
	op_stkvar	(x,	1);
	set_cmt	(0X3500B1BA,	"Locale",	0);
	set_cmt	(0X3500B1BB,	"Type",	0);
	create_insn	(x=0X3500B1BB);
	op_stkvar	(x,	0);
	set_cmt	(0X3500B1BE,	"C",	0);
	create_insn	(x=0X3500B1BE);
	op_stkvar	(x,	0);
	set_cmt	(0X3500B1C8,	"Locale",	0);
	create_insn	(0X3500B1C8);
	set_cmt	(0X3500B1C9,	"Mask",	0);
	create_insn	(x=0X3500B1C9);
	op_stkvar	(x,	0);
	set_cmt	(0X3500B1CC,	"C",	0);
	create_insn	(x=0X3500B1CC);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500B1D4);
	op_hex		(x,	1);
	create_insn	(0X3500B1D9);
	set_name	(0X3500B1D9,	"_isalnum");
	set_cmt	(0X3500B1E7,	"Locale",	0);
	set_cmt	(0X3500B1E9,	"C",	0);
	create_insn	(x=0X3500B1E9);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500B1F5);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500B201);
	op_hex		(x,	1);
	create_insn	(0X3500B208);
	set_name	(0X3500B208,	"_isalpha");
	set_cmt	(0X3500B216,	"Locale",	0);
	set_cmt	(0X3500B218,	"C",	0);
	create_insn	(x=0X3500B218);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500B224);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500B230);
	op_hex		(x,	1);
	create_insn	(0X3500B237);
	set_name	(0X3500B237,	"??$common_tox_l@$1?internal_isupper_l@@YA_NHQAU__crt_locale_pointers@@@Z$1?internal_map_lower@@YAHH0@Z@@YAHHKQAU__crt_locale_pointers@@@Z");
	create_insn	(x=0X3500B23C);
	op_hex		(x,	1);
	set_cmt	(0X3500B23F,	"this",	0);
	create_insn	(x=0X3500B23F);
	op_stkvar	(x,	1);
	set_cmt	(0X3500B243,	"struct __crt_locale_pointers *",	0);
	create_insn	(x=0X3500B243);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500B24B);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500B256);
	op_stkvar	(x,	1);
	set_cmt	(0X3500B259,	"Locale",	0);
	set_cmt	(0X3500B25A,	"C",	0);
	create_insn	(x=0X3500B266);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500B26A);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500B279);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500B27C);
	op_hex		(x,	1);
	create_insn	(x=0X3500B28A);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500B290);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500B293);
	op_hex		(x,	1);
	create_insn	(0X3500B2A1);
	create_insn	(x=0X3500B2A3);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500B2A7);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500B2AA);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500B2B5);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500B2B8);
	op_hex		(x,	1);
	create_insn	(x=0X3500B2BB);
	op_stkvar	(x,	0);
	set_cmt	(0X3500B2BE,	"Locale",	0);
	set_cmt	(0X3500B2C2,	"C",	0);
	create_insn	(x=0X3500B2CE);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500B2D1);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500B2D8);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500B2DB);
	op_stkvar	(x,	0);
	create_insn	(0X3500B2E1);
	create_insn	(x=0X3500B2F0);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500B2F4);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500B2F7);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500B2FB);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500B2FE);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500B301);
	op_stkvar	(x,	1);
	set_cmt	(0X3500B304,	"int",	0);
	set_cmt	(0X3500B306,	"CodePage",	0);
	set_cmt	(0X3500B309,	"cchDest",	0);
	set_cmt	(0X3500B30B,	"lpDestStr",	0);
	set_cmt	(0X3500B30C,	"cbMultiByte",	0);
	create_insn	(x=0X3500B30D);
	op_stkvar	(x,	1);
	set_cmt	(0X3500B310,	"lpMultiByteStr",	0);
	set_cmt	(0X3500B311,	"dwMapFlags",	0);
	create_insn	(x=0X3500B311);
	op_stkvar	(x,	0);
	set_cmt	(0X3500B314,	"wchar_t *",	0);
	create_insn	(x=0X3500B31A);
	op_stkvar	(x,	1);
	set_cmt	(0X3500B31D,	"struct __crt_locale_pointers *",	0);
	create_insn	(x=0X3500B323);
	op_hex		(x,	1);
	create_insn	(x=0X3500B32A);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500B333);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500B336);
	op_hex		(x,	1);
	create_insn	(0X3500B342);
	create_insn	(x=0X3500B347);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500B34B);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500B351);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500B354);
	op_hex		(x,	1);
	create_insn	(x=0X3500B35D);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500B361);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500B365);
	op_hex		(x,	1);
	create_insn	(x=0X3500B36A);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500B370);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500B373);
	op_hex		(x,	1);
	create_insn	(0X3500B381);
	set_name	(0X3500B381,	"?internal_isupper_l@@YA_NHQAU__crt_locale_pointers@@@Z");
	set_cmt	(0X3500B386,	"Locale",	0);
	create_insn	(x=0X3500B386);
	op_stkvar	(x,	0);
	set_cmt	(0X3500B389,	"Mask",	0);
	set_cmt	(0X3500B38B,	"C",	0);
	create_insn	(x=0X3500B38B);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500B393);
	op_hex		(x,	1);
	create_insn	(0X3500B39E);
	set_name	(0X3500B39E,	"__tolower_l");
	set_cmt	(0X3500B3A3,	"struct __crt_locale_pointers *",	0);
	create_insn	(x=0X3500B3A3);
	op_stkvar	(x,	0);
	set_cmt	(0X3500B3A6,	"dwMapFlags",	0);
	set_cmt	(0X3500B3AB,	"C",	0);
	create_insn	(x=0X3500B3AB);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500B3B3);
	op_hex		(x,	1);
	create_insn	(0X3500B3B8);
	set_name	(0X3500B3B8,	"_tolower");
	set_cmt	(0X3500B3C6,	"Locale",	0);
	set_cmt	(0X3500B3C8,	"C",	0);
	create_insn	(x=0X3500B3C8);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500B3D6);
	op_stkvar	(x,	1);
	create_insn	(0X3500B3E8);
	set_name	(0X3500B3E8,	"??$common_xtox@KD@@YAHKQADII_N@Z");
	create_insn	(x=0X3500B3ED);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500B3F3);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500B3FA);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500B40C);
	op_stkvar	(x,	1);
	create_insn	(0X3500B419);
	create_insn	(x=0X3500B424);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500B429);
	op_stkvar	(x,	1);
	create_insn	(0X3500B444);
	create_insn	(0X3500B45D);
	set_name	(0X3500B45D,	"unknown_libname_41");
	create_insn	(x=0X3500B463);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500B469);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500B46D);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500B473);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500B477);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500B47A);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500B47F);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500B482);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500B48A);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500B48D);
	op_hex		(x,	1);
	create_insn	(0X3500B494);
	set_name	(0X3500B494,	"?atexit_exception_filter@@YAHK@Z");
	set_name	(0X3500B496,	"_dyntls_init_exception_filter");
	create_insn	(x=0X3500B49B);
	op_stkvar	(x,	0);
	create_insn	(0X3500B4A7);
	set_name	(0X3500B4A7,	"?common_exit@@YAXHW4_crt_exit_cleanup_mode@@W4_crt_exit_return_mode@@@Z");
	create_insn	(x=0X3500B4A9);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X3500B4B3);
	op_stkvar	(x,	1);
	set_cmt	(0X3500B4C3,	"unsigned int",	0);
	create_insn	(x=0X3500B4C3);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500B4D4);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0X3500B4E8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X3500B4EF);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500B4F6);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500B505);
	op_hex		(x,	1);
	create_insn	(x=0X3500B532);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X3500B539);
	set_cmt	(0X3500B53E,	"Table",	0);
	create_insn	(x=0X3500B53E);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X3500B549);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	set_cmt	(0X3500B551,	"Last",	0);
	create_insn	(x=0X3500B551);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X3500B556,	"First",	0);
	create_insn	(x=0X3500B556);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X3500B562,	"Last",	0);
	create_insn	(x=0X3500B562);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X3500B567,	"First",	0);
	create_insn	(x=0X3500B567);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X3500B57E);
	op_stkvar	(x,	0);
	create_insn	(0X3500B58A);
	set_cmt	(0X3500B58E,	"uExitCode",	0);
	create_insn	(x=0X3500B58E);
	op_stkvar	(x,	0);
	create_word	(0X3500B596);
	create_dword	(0X3500B598);
	make_array	(0X3500B598,	0X2);
	create_byte	(0X3500B5A0);
	make_array	(0X3500B5A0,	0X2);
	create_word	(0X3500B5A2);
	create_insn	(0X3500B5A4);
	create_insn	(x=0X3500B5A6);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500B5AE);
	op_stkvar	(x,	1);
	create_insn	(0X3500B5BA);
	create_insn	(0X3500B5C0);
	set_name	(0X3500B5C0,	"?exit_or_terminate_process@@YAXI@Z");
	create_insn	(x=0X3500B5D7);
	op_hex		(x,	1);
	create_insn	(x=0X3500B5DA);
	op_hex		(x,	1);
	set_cmt	(0X3500B5DE,	"uExitCode",	0);
	create_insn	(x=0X3500B5DE);
	op_stkvar	(x,	0);
	set_cmt	(0X3500B5E7,	"hProcess",	0);
	set_cmt	(0X3500B5EE,	"unsigned int",	0);
	create_insn	(x=0X3500B5EE);
	op_stkvar	(x,	0);
	set_cmt	(0X3500B5F7,	"uExitCode",	0);
	create_insn	(x=0X3500B5F7);
	op_stkvar	(x,	0);
	create_byte	(0X3500B600);
	create_insn	(0X3500B601);
	set_name	(0X3500B601,	"?try_cor_exit_process@@YAXI@Z");
	create_insn	(x=0X3500B60F);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500B612);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0X3500B616);
	op_stkvar	(x,	1);
	set_cmt	(0X3500B619,	"phModule",	0);
	create_insn	(x=0X3500B61A);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X3500B61F,	"dwFlags",	0);
	create_insn	(x=0X3500B62C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X3500B631,	"hModule",	0);
	create_insn	(x=0X3500B631);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500B640);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500B64E);
	op_stkvar	(x,	0);
	set_cmt	(0X3500B654,	"hLibModule",	0);
	create_insn	(x=0X3500B654);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500B65D);
	op_stkvar	(x,	1);
	set_cmt	(0X3500B660,	"StackCookie",	0);
	create_insn	(0X3500B66B);
	create_insn	(x=0X3500B670);
	op_stkvar	(x,	1);
	set_cmt	(0X3500B67A,	"enum _crt_exit_return_mode",	0);
	create_insn	(0X3500B67A);
	set_name	(0X3500B67A,	"__c_exit");
	set_cmt	(0X3500B67C,	"enum _crt_exit_cleanup_mode",	0);
	set_cmt	(0X3500B67E,	"uExitCode",	0);
	create_insn	(x=0X3500B685);
	op_hex		(x,	1);
	set_cmt	(0X3500B689,	"enum _crt_exit_return_mode",	0);
	create_insn	(0X3500B689);
	set_name	(0X3500B689,	"__cexit");
	set_cmt	(0X3500B68B,	"enum _crt_exit_cleanup_mode",	0);
	set_cmt	(0X3500B68D,	"uExitCode",	0);
	create_insn	(x=0X3500B694);
	op_hex		(x,	1);
	create_insn	(0X3500B698);
	set_name	(0X3500B698,	"__exit");
	set_cmt	(0X3500B69D,	"enum _crt_exit_return_mode",	0);
	set_cmt	(0X3500B69F,	"enum _crt_exit_cleanup_mode",	0);
	set_cmt	(0X3500B6A1,	"uExitCode",	0);
	create_insn	(x=0X3500B6A1);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500B6A9);
	op_hex		(x,	1);
	create_insn	(0X3500B6AE);
	set_name	(0X3500B6AE,	"__register_thread_local_exe_atexit_callback");
	create_insn	(x=0X3500B6B8);
	op_hex		(x,	1);
	create_insn	(x=0X3500B6D6);
	op_stkvar	(x,	0);
	create_insn	(0X3500B6E6);
	set_name	(0X3500B6E6,	"exit_1");
	set_cmt	(0X3500B6EB,	"enum _crt_exit_return_mode",	0);
	set_cmt	(0X3500B6ED,	"enum _crt_exit_cleanup_mode",	0);
	set_cmt	(0X3500B6EF,	"uExitCode",	0);
	create_insn	(x=0X3500B6EF);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500B6F7);
	op_hex		(x,	1);
	create_insn	(0X3500B6FC);
	set_name	(0X3500B6FC,	"_rand");
	create_insn	(x=0X3500B711);
	op_hex		(x,	1);
	create_insn	(x=0X3500B714);
	op_hex		(x,	1);
	create_insn	(0X3500B71D);
	set_name	(0X3500B71D,	"_srand");
	create_insn	(x=0X3500B727);
	op_stkvar	(x,	1);
	create_insn	(0X3500B72F);
	set_name	(0X3500B72F,	"??$is_overflow_condition@K@__crt_strtox@@YA_NIK@Z");
	create_insn	(x=0X3500B734);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500B737);
	op_hex		(x,	1);
	create_insn	(x=0X3500B73F);
	op_hex		(x,	1);
	create_insn	(x=0X3500B743);
	op_hex		(x,	1);
	create_insn	(x=0X3500B748);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500B755);
	op_stkvar	(x,	0);
	create_insn	(0X3500B762);
	set_name	(0X3500B762,	"unknown_libname_42");
	create_insn	(x=0X3500B767);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500B76A);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500B76D);
	op_stkvar	(x,	1);
	create_insn	(0X3500B77D);
	set_name	(0X3500B77D,	"??$parse_integer@KV?$c_string_character_source@D@__crt_strtox@@@__crt_strtox@@YAKQAU__crt_locale_pointers@@V?$c_string_character_source@D@0@H_N@Z");
	create_insn	(x=0X3500B782);
	op_hex		(x,	1);
	create_insn	(x=0X3500B785);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500B793);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500B7B6);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500B7BD);
	op_stkvar	(x,	1);
	create_insn	(0X3500B7CA);
	set_cmt	(0X3500B7CB,	"struct __crt_locale_pointers *",	0);
	create_insn	(x=0X3500B7CB);
	op_stkvar	(x,	0);
	set_cmt	(0X3500B7CE,	"this",	0);
	create_insn	(x=0X3500B7CE);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500B7D6);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500B7DB);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500B7DE);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500B7E3);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500B7E9);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500B7EC);
	op_stkvar	(x,	1);
	set_cmt	(0X3500B7EF,	"Locale",	0);
	set_cmt	(0X3500B7F3,	"Mask",	0);
	set_cmt	(0X3500B7F5,	"C",	0);
	create_insn	(x=0X3500B7F6);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500B7FE);
	op_hex		(x,	1);
	create_insn	(x=0X3500B805);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500B80B);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500B813);
	op_hex		(x,	1);
	create_insn	(x=0X3500B816);
	op_stkvar	(x,	0);
	create_insn	(0X3500B81B);
	create_insn	(x=0X3500B820);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500B826);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500B829);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500B82E);
	op_stkvar	(x,	1);
	create_insn	(0X3500B84A);
	create_insn	(0X3500B85A);
	create_insn	(x=0X3500B86A);
	op_hex		(x,	1);
	create_insn	(0X3500B87A);
	create_insn	(x=0X3500B87D);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500B880);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500B892);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500B895);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500B89D);
	op_stkvar	(x,	1);
	create_insn	(0X3500B8A2);
	create_insn	(x=0X3500B8AC);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500B8AF);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500B8B4);
	op_hex		(x,	1);
	create_insn	(x=0X3500B8B9);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500B8BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500B8BF);
	op_stkvar	(x,	0);
	create_insn	(0X3500B8D2);
	create_insn	(0X3500B8E2);
	create_insn	(x=0X3500B8F2);
	op_hex		(x,	1);
	create_insn	(x=0X3500B8FE);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500B901);
	op_hex		(x,	1);
	create_insn	(x=0X3500B904);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500B90D);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500B912);
	op_hex		(x,	1);
	create_insn	(0X3500B917);
	create_insn	(x=0X3500B91C);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500B922);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500B925);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500B92A);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500B92D);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500B930);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500B938);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500B93B);
	op_hex		(x,	1);
	create_insn	(x=0X3500B940);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500B945);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500B94A);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500B965);
	op_hex		(x,	1);
	create_insn	(x=0X3500B96A);
	op_hex		(x,	1);
	create_insn	(x=0X3500B96F);
	op_hex		(x,	1);
	create_insn	(0X3500B97B);
	create_insn	(x=0X3500B982);
	op_hex		(x,	1);
	create_insn	(x=0X3500B98B);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500B996);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500B999);
	op_hex		(x,	1);
	create_insn	(0X3500B9A5);
	set_name	(0X3500B9A5,	"?unget@?$c_string_character_source@D@__crt_strtox@@QAEXD@Z");
	create_insn	(x=0X3500B9AC);
	op_stkvar	(x,	1);
	create_insn	(0X3500B9CD);
	set_name	(0X3500B9CD,	"unknown_libname_43");
	create_insn	(0X3500B9E5);
	create_insn	(0X3500B9E8);
	set_cmt	(0X3500B9EE,	"char",	0);
	set_cmt	(0X3500B9F0,	"int",	0);
	set_cmt	(0X3500B9F2,	"int",	0);
	set_cmt	(0X3500B9F3,	"int",	0);
	create_insn	(x=0X3500B9F8);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500BA01);
	op_hex		(x,	1);
	set_cmt	(0X3500BA04,	"struct __crt_locale_pointers *",	0);
	create_insn	(x=0X3500BA0B);
	op_hex		(x,	1);
	create_insn	(0X3500BA12);
	set_name	(0X3500BA12,	"__seh_filter_exe");
	create_insn	(x=0X3500BA20);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500BA45);
	op_stkvar	(x,	1);
	create_insn	(0X3500BA67);
	create_insn	(0X3500BA77);
	create_insn	(x=0X3500BA83);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500BA86);
	op_stkvar	(x,	1);
	create_insn	(0X3500BA9E);
	create_insn	(0X3500BADF);
	create_insn	(0X3500BAE8);
	create_insn	(0X3500BAF1);
	create_insn	(0X3500BAFA);
	create_insn	(0X3500BB03);
	create_insn	(0X3500BB2C);
	create_insn	(0X3500BB35);
	create_insn	(0X3500BB3E);
	create_insn	(0X3500BB5A);
	create_insn	(x=0X3500BB6A);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500BB71);
	op_hex		(x,	1);
	create_insn	(x=0X3500BB76);
	op_stkvar	(x,	1);
	set_cmt	(0X3500BB79,	"StackCookie",	0);
	create_insn	(0X3500BB85);
	create_insn	(0X3500BB8B);
	create_insn	(x=0X3500BB90);
	op_stkvar	(x,	1);
	create_insn	(0X3500BB9A);
	set_name	(0X3500BB9A,	"unknown_libname_44");
	set_cmt	(0X3500BB9C,	"Microsoft VisualC 14/net runtime",	1);
	set_name	(0X3500BB9C,	"unknown_libname_15");
	create_insn	(x=0X3500BBA4);
	op_hex		(x,	1);
	create_insn	(x=0X3500BBAC);
	op_stkvar	(x,	1);
	create_insn	(0X3500BBB9);
	set_name	(0X3500BBB9,	"unknown_libname_45");
	create_insn	(x=0X3500BBCB);
	op_hex		(x,	1);
	create_insn	(x=0X3500BBD8);
	op_stkvar	(x,	1);
	create_insn	(0X3500BBEA);
	set_name	(0X3500BBEA,	"___acrt_has_user_matherr");
	create_insn	(x=0X3500BBF7);
	op_hex		(x,	1);
	create_insn	(0X3500BC03);
	create_insn	(x=0X3500BC08);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500BC0B);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X3500BC17);
	set_name	(0X3500BC17,	"___acrt_invoke_user_matherr");
	create_insn	(x=0X3500BC24);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500BC36);
	op_hex		(x,	1);
	create_insn	(x=0X3500BC43);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500BC51);
	op_stkvar	(x,	1);
	set_cmt	(0X3500BC54,	"StackCookie",	0);
	create_insn	(0X3500BC60);
	set_name	(0X3500BC60,	"___setusermatherr");
	create_insn	(x=0X3500BC65);
	op_stkvar	(x,	0);
	create_insn	(0X3500BC75);
	set_name	(0X3500BC75,	"??$common_configure_argv@_W@@YAHW4_crt_argv_mode@@@Z");
	create_insn	(x=0X3500BC7A);
	op_hex		(x,	1);
	create_insn	(x=0X3500BC7D);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500BC84);
	op_stkvar	(x,	0);
	create_insn	(0X3500BCA0);
	set_cmt	(0X3500BCA2,	"nSize",	0);
	create_insn	(x=0X3500BCA7);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X3500BCAE,	"lpFilename",	0);
	set_cmt	(0X3500BCAF,	"hModule",	0);
	create_insn	(x=0X3500BCCD);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500BCD0);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500BCD4);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500BCD7);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500BCE5);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500BCE8);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500BCF2);
	op_hex		(x,	1);
	create_insn	(x=0X3500BD05);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500BD09);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500BD0D);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500BD1B);
	op_hex		(x,	1);
	create_insn	(x=0X3500BD1E);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500BD24);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500BD3A);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500BD3D);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500BD4F);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500BD54);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500BD6F);
	op_stkvar	(x,	0);
	set_cmt	(0X3500BD7A,	"Block",	0);
	create_insn	(x=0X3500BD81);
	op_stkvar	(x,	0);
	set_cmt	(0X3500BD84,	"Block",	0);
	create_insn	(0X3500BD94);
	set_name	(0X3500BD94,	"??$parse_command_line@_W@@YAXPA_WPAPA_W0PAI2@Z");
	create_insn	(x=0X3500BD99);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500BD9C);
	op_hex		(x,	1);
	create_insn	(x=0X3500BD9F);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500BDA2);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500BDA7);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500BDAD);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500BDC1);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500BDC4);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500BDCB);
	op_stkvar	(x,	0);
	create_insn	(0X3500BDE4);
	create_insn	(x=0X3500BE02);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500BE08);
	op_stkvar	(x,	1);
	create_insn	(0X3500BE1D);
	create_insn	(x=0X3500BE20);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500BE25);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500BE34);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500BE3A);
	op_stkvar	(x,	1);
	create_insn	(0X3500BE45);
	create_insn	(x=0X3500BE59);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500BE63);
	op_stkvar	(x,	0);
	create_insn	(0X3500BE6E);
	create_insn	(x=0X3500BE82);
	op_hex		(x,	1);
	create_insn	(x=0X3500BE86);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500BE9C);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500BE9F);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500BEA2);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500BEA6);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500BEA9);
	op_hex		(x,	1);
	create_insn	(0X3500BEAD);
	create_insn	(x=0X3500BEC6);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500BECB);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500BED1);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500BED7);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500BEF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500BEF3);
	op_stkvar	(x,	1);
	create_insn	(0X3500BF0B);
	create_insn	(0X3500BF1A);
	set_name	(0X3500BF1A,	"___acrt_allocate_buffer_for_argv");
	create_insn	(x=0X3500BF20);
	op_stkvar	(x,	1);
	create_insn	(0X3500BF2F);
	create_insn	(x=0X3500BF30);
	op_hex		(x,	1);
	create_insn	(x=0X3500BF33);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500BF3A);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500BF41);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500BF45);
	op_hex		(x,	1);
	create_insn	(0X3500BF52);
	set_cmt	(0X3500BF55,	"Size",	0);
	set_cmt	(0X3500BF57,	"Count",	0);
	set_cmt	(0X3500BF5D,	"Block",	0);
	create_insn	(x=0X3500BF66);
	op_hex		(x,	1);
	create_insn	(0X3500BF6F);
	set_name	(0X3500BF6F,	"__configure_wide_argv");
	create_insn	(0X3500BF7A);
	set_name	(0X3500BF7A,	"??$common_initialize_environment_nolock@_W@@YAHXZ");
	create_insn	(0X3500BF86);
	create_insn	(x=0X3500BF93);
	op_hex		(x,	1);
	set_cmt	(0X3500BF98,	"Source",	0);
	create_insn	(0X3500BF98);
	create_insn	(x=0X3500BFA3);
	op_hex		(x,	1);
	create_insn	(0X3500BFA8);
	create_insn	(x=0X3500BFA9);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X3500BFBA,	"Block",	0);
	set_cmt	(0X3500BFC2,	"Block",	0);
	create_insn	(0X3500BFCE);
	set_name	(0X3500BFCE,	"??$create_environment@_W@@YAQAPA_WQA_W@Z");
	create_insn	(x=0X3500BFD6);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500BFDB);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500C000);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500C008);
	op_hex		(x,	1);
	create_insn	(x=0X3500C018);
	op_stkvar	(x,	1);
	set_cmt	(0X3500C01E,	"Size",	0);
	set_cmt	(0X3500C020,	"Count",	0);
	create_insn	(x=0X3500C030);
	op_stkvar	(x,	0);
	create_insn	(0X3500C035);
	create_insn	(x=0X3500C047);
	op_hex		(x,	1);
	create_insn	(x=0X3500C04F);
	op_stkvar	(x,	0);
	set_cmt	(0X3500C057,	"Size",	0);
	set_cmt	(0X3500C059,	"Count",	0);
	set_cmt	(0X3500C067,	"Source",	0);
	set_cmt	(0X3500C068,	"SizeInWords",	0);
	create_insn	(x=0X3500C068);
	op_stkvar	(x,	0);
	set_cmt	(0X3500C06B,	"Destination",	0);
	create_insn	(x=0X3500C071);
	op_hex		(x,	1);
	create_insn	(x=0X3500C078);
	op_stkvar	(x,	1);
	set_cmt	(0X3500C082,	"Block",	0);
	create_insn	(x=0X3500C083);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500C08B);
	op_stkvar	(x,	1);
	set_cmt	(0X3500C099,	"Block",	0);
	create_insn	(0X3500C099);
	set_cmt	(0X3500C0A1,	"Block",	0);
	set_cmt	(0X3500C0AB,	"Block",	0);
	create_insn	(0X3500C0BB);
	set_cmt	(0X3500C0BD,	"Reserved",	0);
	set_cmt	(0X3500C0BE,	"LineNo",	0);
	set_cmt	(0X3500C0BF,	"FileName",	0);
	set_cmt	(0X3500C0C0,	"FunctionName",	0);
	set_cmt	(0X3500C0C1,	"Expression",	0);
	create_insn	(0X3500C0C8);
	set_name	(0X3500C0C8,	"unknown_libname_46");
	create_insn	(x=0X3500C0CE);
	op_stkvar	(x,	1);
	set_cmt	(0X3500C0DC,	"Block",	0);
	create_insn	(0X3500C0DC);
	set_cmt	(0X3500C0EC,	"Block",	0);
	create_insn	(0X3500C0F7);
	set_name	(0X3500C0F7,	"unknown_libname_47");
	create_insn	(x=0X3500C104);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500C110);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500C11A);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500C125);
	op_stkvar	(x,	1);
	set_cmt	(0X3500C129,	"StackCookie",	0);
	create_insn	(0X3500C137);
	create_insn	(x=0X3500C13C);
	op_stkvar	(x,	1);
	set_cmt	(0X3500C149,	"Block",	0);
	create_insn	(0X3500C152);
	create_insn	(x=0X3500C157);
	op_stkvar	(x,	1);
	set_cmt	(0X3500C164,	"Block",	0);
	create_insn	(x=0X3500C16D);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X3500C16D,	"___dcrt_uninitialize_environments_nolock");
	create_insn	(x=0X3500C172);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X3500C17C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X3500C181);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X3500C18B,	"Block",	0);
	set_cmt	(0X3500C196,	"Block",	0);
	create_insn	(0X3500C1A4);
	set_name	(0X3500C1A4,	"j_??$common_initialize_environment_nolock@_W@@YAHXZ");
	create_insn	(0X3500C1A9);
	set_name	(0X3500C1A9,	"unknown_libname_48");
	create_insn	(x=0X3500C1B2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X3500C1DD);
	create_insn	(0X3500C1EF);
	set_name	(0X3500C1EF,	"__initterm");
	create_insn	(x=0X3500C1FD);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500C200);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500C205);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500C210);
	op_hex		(x,	1);
	create_insn	(x=0X3500C213);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500C220);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500C22F);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500C23A);
	op_stkvar	(x,	1);
	set_cmt	(0X3500C23F,	"StackCookie",	0);
	create_insn	(0X3500C24B);
	set_name	(0X3500C24B,	"__initterm_e");
	create_insn	(x=0X3500C258);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500C25C);
	op_stkvar	(x,	1);
	create_insn	(0X3500C262);
	create_insn	(x=0X3500C279);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500C280);
	op_stkvar	(x,	1);
	set_cmt	(0X3500C284,	"StackCookie",	0);
	create_insn	(0X3500C290);
	set_name	(0X3500C290,	"__set_fmode");
	create_insn	(x=0X3500C295);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500C2C2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X3500C2CD);
	create_insn	(x=0X3500C2CF);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X3500C2D8);
	set_name	(0X3500C2D8,	"___acrt_uninitialize_locale");
	create_insn	(x=0X3500C2DA);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X3500C2E4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X3500C2F9);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0X3500C2FE);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X3500C30F);
	op_stkvar	(x,	0);
	create_insn	(0X3500C31B);
	create_insn	(0X3500C321);
	create_insn	(0X3500C32A);
	set_name	(0X3500C32A,	"__configthreadlocale");
	create_insn	(x=0X3500C335);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500C343);
	op_hex		(x,	1);
	create_insn	(x=0X3500C36D);
	op_hex		(x,	1);
	create_insn	(x=0X3500C372);
	op_hex		(x,	1);
	create_insn	(x=0X3500C377);
	op_hex		(x,	1);
	create_insn	(x=0X3500C382);
	op_hex		(x,	1);
	create_insn	(0X3500C38C);
	create_insn	(0X3500C392);
	set_name	(0X3500C392,	"__set_new_mode");
	create_insn	(x=0X3500C397);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500C3B3);
	op_hex		(x,	1);
	create_insn	(x=0X3500C3B8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X3500C3C1);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X3500C3C7);
	set_name	(0X3500C3C7,	"??$?RV_lambda_0fef6fff2b5e6b53303c9058db11ae1f_@@AAV_lambda_082c17da81b0962e08c0587ee0fac50c_@@V_lambda_fa6e051aed0a38726081083cc7c328e9_@@@?$__crt_seh_guarded_call@PAD@@QAEPAD$$QAV_lambda_0fef6fff2b5e6b53303c9058db11ae1f_@@AAV_lambda_082c17da81b0962e08c0587ee0fac50c_@@$$QAV_lambda_fa6e051aed0a38726081083cc7c328e9_@@@Z");
	create_insn	(x=0X3500C3C9);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X3500C3D3);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0X3500C3D7);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500C3E2);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0X3500C3E6);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500C3F0);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500C3F3);
	op_stkvar	(x,	0);
	create_insn	(0X3500C3FF);
	create_insn	(x=0X3500C409);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500C40C);
	op_stkvar	(x,	1);
	create_insn	(0X3500C418);
	set_name	(0X3500C418,	"??$?RV_lambda_0fef6fff2b5e6b53303c9058db11ae1f_@@AAV_lambda_082c17da81b0962e08c0587ee0fac50c_@@V_lambda_fa6e051aed0a38726081083cc7c328e9_@@@?$__crt_seh_guarded_call@PAD@@QAEPAD$$QAV_lambda_0fef6fff2b5e6b53303c9058db11ae1f_@@AAV_lambda_082c17da81b0962e08c0587ee0fac50c_@@$$QAV_lambda_fa6e051aed0a38726081083cc7c328e9_@@@Z_0");
	create_insn	(x=0X3500C41A);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X3500C424);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0X3500C428);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500C433);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0X3500C437);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500C441);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500C444);
	op_stkvar	(x,	0);
	create_insn	(0X3500C450);
	create_insn	(x=0X3500C45A);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500C45D);
	op_stkvar	(x,	1);
	create_insn	(0X3500C469);
	create_insn	(x=0X3500C46E);
	op_hex		(x,	1);
	create_insn	(x=0X3500C471);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500C474);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500C477);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500C47A);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500C47D);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500C481);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500C484);
	op_stkvar	(x,	1);
	create_insn	(0X3500C491);
	create_insn	(x=0X3500C496);
	op_hex		(x,	1);
	create_insn	(x=0X3500C499);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500C49C);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500C49F);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500C4A2);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500C4A5);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500C4A9);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500C4AC);
	op_stkvar	(x,	1);
	create_insn	(0X3500C4B9);
	set_name	(0X3500C4B9,	"??R_lambda_275893d493268fdec8709772e3fcec0e_@@QBEHXZ");
	create_insn	(x=0X3500C4BE);
	op_hex		(x,	1);
	create_insn	(x=0X3500C4C8);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500C4CD);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500C4D9);
	op_hex		(x,	1);
	create_insn	(0X3500C4E1);
	create_insn	(x=0X3500C4F0);
	op_hex		(x,	1);
	create_insn	(x=0X3500C4F5);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500C511);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500C514);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500C52F);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500C542);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500C54D);
	op_hex		(x,	1);
	create_insn	(x=0X3500C550);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500C55E);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500C565);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500C56A);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500C56D);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500C575);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500C57A);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500C57D);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500C582);
	op_stkvar	(x,	0);
	create_insn	(0X3500C589);
	set_cmt	(0X3500C58E,	"Block",	0);
	create_insn	(x=0X3500C59F);
	op_hex		(x,	1);
	create_insn	(x=0X3500C5A9);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500C5CA);
	op_stkvar	(x,	1);
	set_cmt	(0X3500C5CD,	"StackCookie",	0);
	create_insn	(0X3500C5D9);
	set_name	(0X3500C5D9,	"??R_lambda_4e60a939b0d047cfe11ddc22648dfba9_@@QBEHXZ");
	create_insn	(x=0X3500C5DE);
	op_hex		(x,	1);
	create_insn	(x=0X3500C5E3);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500C5EF);
	op_hex		(x,	1);
	create_insn	(0X3500C5F7);
	create_insn	(x=0X3500C601);
	op_hex		(x,	1);
	create_insn	(x=0X3500C626);
	op_hex		(x,	1);
	set_cmt	(0X3500C63D,	"int",	0);
	set_cmt	(0X3500C63F,	"int",	0);
	set_cmt	(0X3500C640,	"Block",	0);
	set_cmt	(0X3500C646,	"Block",	0);
	create_insn	(x=0X3500C648);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500C650);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500C653);
	op_hex		(x,	1);
	set_cmt	(0X3500C65A,	"int",	0);
	set_cmt	(0X3500C65F,	"int",	0);
	set_cmt	(0X3500C660,	"Block",	0);
	set_cmt	(0X3500C666,	"Block",	0);
	create_insn	(x=0X3500C668);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500C670);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500C673);
	op_hex		(x,	1);
	create_insn	(x=0X3500C67A);
	op_hex		(x,	1);
	create_insn	(0X3500C682);
	create_insn	(x=0X3500C687);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500C692);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500C695);
	op_hex		(x,	1);
	create_insn	(x=0X3500C6A9);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500C6B3);
	op_hex		(x,	1);
	create_insn	(x=0X3500C6BE);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500C6C3);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500C6CE);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500C6D3);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500C6E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500C709);
	op_hex		(x,	1);
	create_insn	(0X3500C71A);
	set_cmt	(0X3500C71F,	"Function",	0);
	create_insn	(x=0X3500C71F);
	op_stkvar	(x,	0);
	set_cmt	(0X3500C722,	"Table",	0);
	create_insn	(x=0X3500C722);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X3500C730);
	set_name	(0X3500C730,	"__execute_onexit_table");
	create_insn	(x=0X3500C736);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500C739);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500C73C);
	op_stkvar	(x,	1);
	create_insn	(0X3500C74D);
	set_name	(0X3500C74D,	"__initialize_onexit_table");
	create_insn	(x=0X3500C753);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500C75A);
	op_hex		(x,	1);
	create_insn	(0X3500C75F);
	create_insn	(x=0X3500C76B);
	op_hex		(x,	1);
	create_insn	(0X3500C78A);
	set_name	(0X3500C78A,	"__register_onexit_function");
	create_insn	(x=0X3500C791);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500C794);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500C797);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500C79A);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500C79D);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500C7AE);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X3500C7B3);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X3500C7C0,	"Table",	0);
	create_insn	(x=0X3500C7C0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X3500C7C0,	"_initialize_c");
	set_cmt	(0X3500C7CA,	"Table",	0);
	create_insn	(x=0X3500C7CA);
	op_stkvar	(x,	0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X3500C7DA);
	create_insn	(0X3500C7DD);
	set_name	(0X3500C7DD,	"_uninitialize_environment");
	create_insn	(0X3500C7E5);
	set_name	(0X3500C7E5,	"_initialize_pointers");
	create_insn	(x=0X3500C7ED);
	op_hex		(x,	1);
	create_insn	(x=0X3500C81B);
	op_hex		(x,	1);
	set_cmt	(0X3500C822,	"Terminating",	0);
	create_insn	(0X3500C822);
	set_name	(0X3500C822,	"_uninitialize_vcruntime");
	create_insn	(0X3500C82B);
	set_name	(0X3500C82B,	"_uninitialize_allocated_memory");
	create_insn	(x=0X3500C830);
	op_hex		(x,	1);
	create_insn	(x=0X3500C83F);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X3500C848,	"Block",	0);
	set_cmt	(0X3500C855,	"Block",	0);
	set_cmt	(0X3500C860,	"Block",	0);
	set_cmt	(0X3500C873,	"Block",	0);
	set_cmt	(0X3500C884,	"Block",	0);
	create_insn	(x=0X3500C895);
	op_hex		(x,	1);
	create_insn	(x=0X3500C8A2);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X3500C8A2,	"___acrt_initialize");
	create_insn	(x=0X3500C8A7);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X3500C8B4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X3500C8B4,	"___acrt_uninitialize");
	create_insn	(x=0X3500C8B9);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X3500C8C6);
	set_name	(0X3500C8C6,	"__controlfp_s");
	create_insn	(x=0X3500C8CB);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500C8CE);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500C8D1);
	op_hex		(x,	1);
	create_insn	(x=0X3500C8DA);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500C8DD);
	op_hex		(x,	1);
	set_cmt	(0X3500C8E8,	"Mask",	0);
	set_cmt	(0X3500C8EA,	"NewValue",	0);
	set_cmt	(0X3500C908,	"Mask",	0);
	create_insn	(0X3500C908);
	set_cmt	(0X3500C909,	"NewValue",	0);
	create_insn	(x=0X3500C909);
	op_stkvar	(x,	0);
	create_insn	(0X3500C919);
	create_insn	(0X3500C925);
	set_name	(0X3500C925,	"_terminate");
	create_insn	(x=0X3500C927);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X3500C93D);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(0X3500C94D);
	create_insn	(x=0X3500C951);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500C954);
	op_stkvar	(x,	0);
	create_byte	(0X3500C960);
	create_insn	(0X3500C961);
	set_name	(0X3500C961,	"__free_base");
	create_insn	(x=0X3500C966);
	op_stkvar	(x,	0);
	set_cmt	(0X3500C96C,	"lpMem",	0);
	create_insn	(x=0X3500C96C);
	op_stkvar	(x,	0);
	set_cmt	(0X3500C96F,	"dwFlags",	0);
	set_cmt	(0X3500C971,	"hHeap",	0);
	create_insn	(0X3500C99B);
	set_name	(0X3500C99B,	"__malloc_base");
	create_insn	(x=0X3500C9A1);
	op_stkvar	(x,	1);
	create_insn	(0X3500C9B0);
	set_cmt	(0X3500C9B9,	"Size",	0);
	set_cmt	(0X3500C9C4,	"dwBytes",	0);
	set_cmt	(0X3500C9C5,	"dwFlags",	0);
	set_cmt	(0X3500C9C7,	"hHeap",	0);
	create_insn	(0X3500C9D9);
	create_insn	(0X3500C9E9);
	set_name	(0X3500C9E9,	"_abort");
	set_cmt	(0X3500C9F2,	"Signal",	0);
	create_insn	(x=0X3500C9FA);
	op_hex		(x,	1);
	set_cmt	(0X3500CA03,	"ProcessorFeature",	0);
	set_cmt	(0X3500CA11,	"Win8: RtlFailFast(ecx)",	0);
	create_insn	(x=0X3500CA11);
	op_hex		(x,	0);
	create_insn	(0X3500CA13);
	create_insn	(x=0X3500CA21);
	op_hex		(x,	1);
	set_cmt	(0X3500CA24,	"Code",	0);
	create_insn	(0X3500CA2C);
	set_name	(0X3500CA2C,	"__calloc_base");
	create_insn	(x=0X3500CA32);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500CA40);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500CA45);
	op_stkvar	(x,	1);
	create_insn	(0X3500CA50);
	set_cmt	(0X3500CA59,	"Size",	0);
	set_cmt	(0X3500CA64,	"dwBytes",	0);
	set_cmt	(0X3500CA65,	"dwFlags",	0);
	set_cmt	(0X3500CA67,	"hHeap",	0);
	create_insn	(0X3500CA79);
	create_insn	(0X3500CA89);
	set_name	(0X3500CA89,	"_iswctype");
	create_insn	(x=0X3500CA90);
	op_stkvar	(x,	1);
	create_insn	(0X3500CAA2);
	create_insn	(x=0X3500CABA);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500CAC0);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500CAC4);
	op_stkvar	(x,	1);
	set_cmt	(0X3500CAC7,	"lpCharType",	0);
	set_cmt	(0X3500CAC8,	"cchSrc",	0);
	create_insn	(x=0X3500CACA);
	op_stkvar	(x,	1);
	set_cmt	(0X3500CACD,	"lpSrcStr",	0);
	set_cmt	(0X3500CACE,	"dwInfoType",	0);
	create_insn	(x=0X3500CADA);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500CADE);
	op_stkvar	(x,	1);
	create_insn	(0X3500CAE8);
	set_name	(0X3500CAE8,	"___acrt_LCMapStringW");
	create_insn	(x=0X3500CAEE);
	op_stkvar	(x,	1);
	set_cmt	(0X3500CAF5,	"MaxCount",	0);
	set_cmt	(0X3500CAF6,	"Source",	0);
	create_insn	(x=0X3500CAF6);
	op_stkvar	(x,	0);
	set_cmt	(0X3500CB0B,	"int",	0);
	set_cmt	(0X3500CB0C,	"int",	0);
	set_cmt	(0X3500CB0D,	"int",	0);
	set_cmt	(0X3500CB0E,	"cchDest",	0);
	create_insn	(x=0X3500CB0E);
	op_stkvar	(x,	0);
	set_cmt	(0X3500CB11,	"lpDestStr",	0);
	create_insn	(x=0X3500CB11);
	op_stkvar	(x,	0);
	set_cmt	(0X3500CB14,	"cchSrc",	0);
	set_cmt	(0X3500CB15,	"lpSrcStr",	0);
	create_insn	(x=0X3500CB15);
	op_stkvar	(x,	0);
	set_cmt	(0X3500CB18,	"dwMapFlags",	0);
	create_insn	(x=0X3500CB18);
	op_stkvar	(x,	0);
	set_cmt	(0X3500CB1B,	"wchar_t *",	0);
	create_insn	(x=0X3500CB1B);
	op_stkvar	(x,	0);
	create_insn	(0X3500CB26);
	set_name	(0X3500CB26,	"??$?RV_lambda_3518db117f0e7cdb002338c5d3c47b6c_@@AAV_lambda_b2ea41f6bbb362cd97d94c6828d90b61_@@V_lambda_abdedf541bb04549bc734292b4a045d4_@@@?$__crt_seh_guarded_call@X@@QAEX$$QAV_lambda_3518db117f0e7cdb002338c5d3c47b6c_@@AAV_lambda_b2ea41f6bbb362cd97d94c6828d90b61_@@$$QAV_lambda_abdedf541bb04549bc734292b4a045d4_@@@Z");
	create_insn	(x=0X3500CB28);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X3500CB32);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500CB3D);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0X3500CB41);
	op_stkvar	(x,	1);
	set_cmt	(0X3500CB49,	"struct __crt_locale_data *",	0);
	set_cmt	(0X3500CB4D,	"struct __acrt_ptd *",	0);
	create_insn	(x=0X3500CB56);
	op_stkvar	(x,	0);
	create_insn	(0X3500CB62);
	create_insn	(x=0X3500CB6A);
	op_stkvar	(x,	1);
	create_insn	(0X3500CB76);
	set_name	(0X3500CB76,	"??$?RV_lambda_51b6e8b1eb166f2a3faf91f424b38130_@@AAV_lambda_6250bd4b2a391816dd638c3bf72b0bcb_@@V_lambda_0b5a4a3e68152e1d9b943535f5f47bed_@@@?$__crt_seh_guarded_call@X@@QAEX$$QAV_lambda_51b6e8b1eb166f2a3faf91f424b38130_@@AAV_lambda_6250bd4b2a391816dd638c3bf72b0bcb_@@$$QAV_lambda_0b5a4a3e68152e1d9b943535f5f47bed_@@@Z");
	create_insn	(x=0X3500CB78);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X3500CB82);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500CB8D);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0X3500CB91);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500CB9F);
	op_hex		(x,	1);
	create_insn	(x=0X3500CBA8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X3500CBB0,	"Block",	0);
	create_insn	(x=0X3500CBB7);
	op_stkvar	(x,	0);
	create_insn	(0X3500CBC3);
	create_insn	(x=0X3500CBCB);
	op_stkvar	(x,	1);
	create_insn	(0X3500CBD7);
	set_name	(0X3500CBD7,	"??$?RV_lambda_5b71d36f03204c0beab531769a5b5694_@@AAV_lambda_be2b3da3f62db62e9dad5dc70221a656_@@V_lambda_8f9ce462984622f9bf76b59e2aaaf805_@@@?$__crt_seh_guarded_call@X@@QAEX$$QAV_lambda_5b71d36f03204c0beab531769a5b5694_@@AAV_lambda_be2b3da3f62db62e9dad5dc70221a656_@@$$QAV_lambda_8f9ce462984622f9bf76b59e2aaaf805_@@@Z");
	create_insn	(x=0X3500CBD9);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X3500CBE3);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500CBEE);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	set_cmt	(0X3500CBF2,	"struct __crt_locale_data *",	0);
	create_insn	(x=0X3500CBF4);
	op_stkvar	(x,	1);
	set_cmt	(0X3500CBF9,	"struct __acrt_ptd *",	0);
	create_insn	(x=0X3500CC02);
	op_stkvar	(x,	0);
	create_insn	(0X3500CC0E);
	create_insn	(x=0X3500CC16);
	op_stkvar	(x,	1);
	create_insn	(0X3500CC22);
	set_name	(0X3500CC22,	"??$?RV_lambda_9df27f884b057bc3edfc946cb5b7cf47_@@AAV_lambda_e69574bed617af4e071282c136b37893_@@V_lambda_cc0d902bcbbeb830f749456577db4721_@@@?$__crt_seh_guarded_call@X@@QAEX$$QAV_lambda_9df27f884b057bc3edfc946cb5b7cf47_@@AAV_lambda_e69574bed617af4e071282c136b37893_@@$$QAV_lambda_cc0d902bcbbeb830f749456577db4721_@@@Z");
	create_insn	(x=0X3500CC24);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X3500CC2E);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500CC39);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0X3500CC3D);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500CC4A);
	op_stkvar	(x,	0);
	create_insn	(0X3500CC56);
	create_insn	(x=0X3500CC5E);
	op_stkvar	(x,	1);
	create_insn	(0X3500CC6A);
	create_insn	(x=0X3500CC6F);
	op_hex		(x,	1);
	create_insn	(x=0X3500CC72);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500CC75);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500CC78);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500CC7B);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500CC7E);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500CC82);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500CC85);
	op_stkvar	(x,	1);
	create_insn	(0X3500CC92);
	create_insn	(x=0X3500CC97);
	op_hex		(x,	1);
	create_insn	(x=0X3500CC9A);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500CC9D);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500CCA0);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500CCA3);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500CCA6);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500CCAA);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500CCAD);
	op_stkvar	(x,	1);
	create_insn	(0X3500CCBA);
	create_insn	(x=0X3500CCBF);
	op_hex		(x,	1);
	create_insn	(x=0X3500CCC2);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500CCC5);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500CCC8);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500CCCB);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500CCCE);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500CCD2);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500CCD5);
	op_stkvar	(x,	1);
	create_insn	(0X3500CCE2);
	create_insn	(x=0X3500CCE7);
	op_hex		(x,	1);
	create_insn	(x=0X3500CCEA);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500CCED);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500CCF0);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500CCF3);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500CCF6);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500CCFA);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500CCFD);
	op_stkvar	(x,	1);
	create_insn	(0X3500CD0A);
	set_name	(0X3500CD0A,	"?construct_ptd@@YAXQAU__acrt_ptd@@QAPAU__crt_locale_data@@@Z");
	create_insn	(x=0X3500CD11);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500CD1C);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500CD1F);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X3500CD25);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500CD2E);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500CD32);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X3500CD39);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500CD40);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500CD4A);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500CD4D);
	op_hex		(x,	1);
	create_insn	(x=0X3500CD54);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500CD57);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500CD5A);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500CD65);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500CD68);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500CD6B);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500CD6E);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500CD71);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500CD7C);
	op_hex		(x,	1);
	create_insn	(0X3500CD83);
	set_name	(0X3500CD83,	"?destroy_fls@@YGXPAX@Z");
	create_insn	(x=0X3500CD88);
	op_stkvar	(x,	0);
	set_cmt	(0X3500CD8E,	"struct __acrt_ptd *",	0);
	create_insn	(x=0X3500CD8E);
	op_stkvar	(x,	0);
	set_cmt	(0X3500CD96,	"Block",	0);
	create_insn	(x=0X3500CD96);
	op_stkvar	(x,	0);
	create_insn	(0X3500CDA4);
	set_name	(0X3500CDA4,	"?destroy_ptd@@YAXQAU__acrt_ptd@@@Z");
	create_insn	(x=0X3500CDAA);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500CDAF);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X3500CDB7,	"Block",	0);
	create_insn	(x=0X3500CDBD);
	op_stkvar	(x,	1);
	set_cmt	(0X3500CDC1,	"Block",	0);
	create_insn	(x=0X3500CDC9);
	op_stkvar	(x,	1);
	set_cmt	(0X3500CDCC,	"Block",	0);
	create_insn	(x=0X3500CDD4);
	op_stkvar	(x,	1);
	set_cmt	(0X3500CDD7,	"Block",	0);
	create_insn	(x=0X3500CDDF);
	op_stkvar	(x,	1);
	set_cmt	(0X3500CDE2,	"Block",	0);
	create_insn	(x=0X3500CDEA);
	op_stkvar	(x,	1);
	set_cmt	(0X3500CDED,	"Block",	0);
	create_insn	(x=0X3500CDF5);
	op_stkvar	(x,	1);
	set_cmt	(0X3500CDF8,	"Block",	0);
	create_insn	(x=0X3500CE00);
	op_stkvar	(x,	1);
	set_cmt	(0X3500CE03,	"Block",	0);
	create_insn	(x=0X3500CE0B);
	op_stkvar	(x,	1);
	set_cmt	(0X3500CE0E,	"Block",	0);
	create_insn	(x=0X3500CE16);
	op_stkvar	(x,	1);
	set_cmt	(0X3500CE19,	"Block",	0);
	create_insn	(x=0X3500CE24);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500CE27);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500CE2A);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500CE35);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500CE38);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500CE3B);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500CE46);
	op_hex		(x,	1);
	create_insn	(0X3500CE4D);
	set_name	(0X3500CE4D,	"?replace_current_thread_locale_nolock@@YAXQAU__acrt_ptd@@QAU__crt_locale_data@@@Z");
	create_insn	(x=0X3500CE53);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500CE70);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X3500CE7D,	"Block",	0);
	create_insn	(x=0X3500CE84);
	op_stkvar	(x,	1);
	create_insn	(0X3500CE98);
	set_name	(0X3500CE98,	"___acrt_getptd");
	set_cmt	(0X3500CEAE,	"dwTlsIndex",	0);
	set_cmt	(0X3500CEBA,	"Size",	0);
	set_cmt	(0X3500CEBF,	"Count",	0);
	set_cmt	(0X3500CECE,	"Block",	0);
	set_cmt	(0X3500CED7,	"lpTlsValue",	0);
	create_insn	(0X3500CED7);
	set_cmt	(0X3500CED8,	"dwTlsIndex",	0);
	set_cmt	(0X3500CEEA,	"struct __crt_locale_data **",	0);
	create_insn	(x=0X3500CEEA);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X3500CEEF,	"struct __acrt_ptd *",	0);
	set_cmt	(0X3500CEF5,	"Block",	0);
	create_insn	(x=0X3500CEFC);
	op_hex		(x,	1);
	set_cmt	(0X3500CF03,	"dwErrCode",	0);
	set_cmt	(0X3500CF0F,	"dwErrCode",	0);
	create_insn	(0X3500CF0F);
	create_insn	(0X3500CF1C);
	set_name	(0X3500CF1C,	"___acrt_getptd_noexit");
	set_cmt	(0X3500CF35,	"dwTlsIndex",	0);
	set_cmt	(0X3500CF41,	"Size",	0);
	set_cmt	(0X3500CF46,	"Count",	0);
	set_cmt	(0X3500CF55,	"Block",	0);
	set_cmt	(0X3500CF5E,	"lpTlsValue",	0);
	create_insn	(0X3500CF5E);
	set_cmt	(0X3500CF5F,	"dwTlsIndex",	0);
	set_cmt	(0X3500CF71,	"struct __crt_locale_data **",	0);
	create_insn	(x=0X3500CF71);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X3500CF76,	"struct __acrt_ptd *",	0);
	set_cmt	(0X3500CF7C,	"Block",	0);
	create_insn	(x=0X3500CF82);
	op_hex		(x,	1);
	set_cmt	(0X3500CF89,	"dwErrCode",	0);
	set_cmt	(0X3500CF92,	"dwErrCode",	0);
	create_insn	(0X3500CF92);
	create_insn	(x=0X3500CFA1);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X3500CFA1,	"___acrt_initialize_ptd");
	create_insn	(0X3500CFB8);
	create_insn	(0X3500CFCA);
	create_insn	(0X3500CFCD);
	set_name	(0X3500CFCD,	"___acrt_uninitialize_ptd");
	set_cmt	(0X3500CFD7,	"dwTlsIndex",	0);
	create_insn	(x=0X3500CFDD);
	op_hex		(x,	1);
	create_insn	(0X3500CFE7);
	create_insn	(x=0X3500CFED);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500CFFA);
	op_stkvar	(x,	1);
	create_insn	(0X3500D014);
	create_insn	(x=0X3500D01A);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500D027);
	op_stkvar	(x,	1);
	create_insn	(0X3500D041);
	set_name	(0X3500D041,	"___pctype_func");
	create_insn	(x=0X3500D04F);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500D052);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500D05C);
	op_stkvar	(x,	1);
	create_insn	(0X3500D067);
	set_name	(0X3500D067,	"__isctype_l");
	create_insn	(x=0X3500D06C);
	op_hex		(x,	1);
	create_insn	(x=0X3500D076);
	op_stkvar	(x,	0);
	set_cmt	(0X3500D07A,	"struct __crt_locale_pointers *",	0);
	create_insn	(x=0X3500D07A);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500D07D);
	op_stkvar	(x,	1);
	set_cmt	(0X3500D080,	"this",	0);
	create_insn	(x=0X3500D080);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500D092);
	op_stkvar	(x,	1);
	create_insn	(0X3500D09D);
	create_insn	(x=0X3500D09F);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500D0A2);
	op_hex		(x,	1);
	create_insn	(x=0X3500D0A5);
	op_stkvar	(x,	0);
	set_cmt	(0X3500D0A8,	"Locale",	0);
	set_cmt	(0X3500D0AC,	"C",	0);
	create_insn	(x=0X3500D0B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500D0BB);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500D0C2);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500D0C5);
	op_stkvar	(x,	0);
	create_insn	(0X3500D0CB);
	create_insn	(x=0X3500D0CD);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500D0D2);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500D0D6);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500D0D9);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500D0DD);
	op_stkvar	(x,	1);
	set_cmt	(0X3500D0E0,	"int",	0);
	set_cmt	(0X3500D0E2,	"CodePage",	0);
	create_insn	(x=0X3500D0E5);
	op_stkvar	(x,	1);
	set_cmt	(0X3500D0E8,	"lpCharType",	0);
	set_cmt	(0X3500D0E9,	"cbMultiByte",	0);
	create_insn	(x=0X3500D0EA);
	op_stkvar	(x,	1);
	set_cmt	(0X3500D0ED,	"lpMultiByteStr",	0);
	create_insn	(x=0X3500D0EE);
	op_stkvar	(x,	1);
	set_cmt	(0X3500D0F1,	"dwInfoType",	0);
	set_cmt	(0X3500D0F3,	"struct __crt_locale_pointers *",	0);
	create_insn	(x=0X3500D0F9);
	op_hex		(x,	1);
	create_insn	(x=0X3500D100);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500D105);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500D108);
	op_hex		(x,	1);
	create_insn	(x=0X3500D113);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500D117);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500D11A);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500D120);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500D123);
	op_hex		(x,	1);
	create_insn	(x=0X3500D12A);
	op_stkvar	(x,	1);
	set_cmt	(0X3500D12D,	"StackCookie",	0);
	create_insn	(0X3500D139);
	set_name	(0X3500D139,	"___acrt_errno_from_os_error");
	create_insn	(x=0X3500D13E);
	op_stkvar	(x,	1);
	create_insn	(0X3500D15F);
	create_insn	(0X3500D173);
	create_insn	(0X3500D17C);
	set_name	(0X3500D17C,	"___acrt_errno_map_os_error");
	create_insn	(x=0X3500D187);
	op_stkvar	(x,	1);
	create_insn	(0X3500D19F);
	set_name	(0X3500D19F,	"___doserrno");
	create_insn	(x=0X3500D1A8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X3500D1AE);
	create_insn	(0X3500D1B2);
	set_name	(0X3500D1B2,	"__errno");
	create_insn	(x=0X3500D1BB);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
}

//------------------------------------------------------------------------
// Information about bytes

static Bytes_2(void) {
        auto x;
#define id x

	create_insn	(0X3500D1C1);
	create_insn	(0X3500D1C5);
	set_name	(0X3500D1C5,	"__isleadbyte_l");
	create_insn	(x=0X3500D1CA);
	op_hex		(x,	1);
	set_cmt	(0X3500D1CD,	"struct __crt_locale_pointers *",	0);
	create_insn	(x=0X3500D1CD);
	op_stkvar	(x,	0);
	set_cmt	(0X3500D1D0,	"this",	0);
	create_insn	(x=0X3500D1D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500D1D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500D1DB);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500D1E5);
	op_hex		(x,	1);
	create_insn	(x=0X3500D1EA);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500D1F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500D1F3);
	op_hex		(x,	1);
	create_insn	(0X3500D1FE);
	set_name	(0X3500D1FE,	"?__acrt_LCMapStringA_stat@@YAHPAU__crt_locale_pointers@@PB_WKPBDHPADHHH@Z");
	create_insn	(x=0X3500D20C);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500D211);
	op_stkvar	(x,	1);
	set_cmt	(0X3500D219,	"Count",	0);
	set_cmt	(0X3500D21A,	"String",	0);
	create_insn	(x=0X3500D21A);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500D22D);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500D234);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500D23C);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500D241);
	op_stkvar	(x,	0);
	set_cmt	(0X3500D244,	"cchWideChar",	0);
	set_cmt	(0X3500D246,	"lpWideCharStr",	0);
	set_cmt	(0X3500D248,	"cbMultiByte",	0);
	set_cmt	(0X3500D249,	"lpMultiByteStr",	0);
	create_insn	(x=0X3500D249);
	op_stkvar	(x,	0);
	set_cmt	(0X3500D256,	"dwFlags",	0);
	set_cmt	(0X3500D257,	"CodePage",	0);
	create_insn	(x=0X3500D25E);
	op_stkvar	(x,	0);
	create_insn	(0X3500D2A7);
	set_cmt	(0X3500D2AD,	"Size",	0);
	create_insn	(0X3500D2C9);
	set_cmt	(0X3500D2D3,	"cchWideChar",	0);
	create_insn	(x=0X3500D2D3);
	op_stkvar	(x,	0);
	set_cmt	(0X3500D2D6,	"lpWideCharStr",	0);
	set_cmt	(0X3500D2D7,	"cbMultiByte",	0);
	set_cmt	(0X3500D2D8,	"lpMultiByteStr",	0);
	create_insn	(x=0X3500D2D8);
	op_stkvar	(x,	0);
	set_cmt	(0X3500D2DB,	"dwFlags",	0);
	set_cmt	(0X3500D2DD,	"CodePage",	0);
	create_insn	(x=0X3500D2EC);
	op_stkvar	(x,	1);
	set_cmt	(0X3500D2F1,	"int",	0);
	set_cmt	(0X3500D2F2,	"int",	0);
	set_cmt	(0X3500D2F3,	"int",	0);
	set_cmt	(0X3500D2F4,	"cchDest",	0);
	set_cmt	(0X3500D2F5,	"lpDestStr",	0);
	set_cmt	(0X3500D2F6,	"cchSrc",	0);
	set_cmt	(0X3500D2F7,	"lpSrcStr",	0);
	set_cmt	(0X3500D2F8,	"dwMapFlags",	0);
	create_insn	(x=0X3500D2F8);
	op_stkvar	(x,	0);
	set_cmt	(0X3500D2FB,	"wchar_t *",	0);
	create_insn	(x=0X3500D2FB);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500D30D);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0X3500D316);
	op_stkvar	(x,	1);
	set_cmt	(0X3500D32B,	"int",	0);
	set_cmt	(0X3500D32C,	"int",	0);
	set_cmt	(0X3500D32D,	"int",	0);
	set_cmt	(0X3500D32E,	"cchDest",	0);
	set_cmt	(0X3500D32F,	"lpDestStr",	0);
	create_insn	(x=0X3500D32F);
	op_stkvar	(x,	0);
	set_cmt	(0X3500D332,	"cchSrc",	0);
	set_cmt	(0X3500D333,	"lpSrcStr",	0);
	set_cmt	(0X3500D334,	"dwMapFlags",	0);
	create_insn	(x=0X3500D334);
	op_stkvar	(x,	0);
	set_cmt	(0X3500D337,	"wchar_t *",	0);
	create_insn	(x=0X3500D337);
	op_stkvar	(x,	0);
	create_insn	(0X3500D34E);
	create_insn	(0X3500D388);
	set_cmt	(0X3500D38E,	"Size",	0);
	create_insn	(0X3500D3A6);
	set_cmt	(0X3500D3AC,	"int",	0);
	set_cmt	(0X3500D3AE,	"int",	0);
	set_cmt	(0X3500D3B0,	"int",	0);
	set_cmt	(0X3500D3B2,	"cchDest",	0);
	set_cmt	(0X3500D3B3,	"lpDestStr",	0);
	set_cmt	(0X3500D3B4,	"cchSrc",	0);
	create_insn	(x=0X3500D3B4);
	op_stkvar	(x,	0);
	set_cmt	(0X3500D3B7,	"lpSrcStr",	0);
	set_cmt	(0X3500D3B8,	"dwMapFlags",	0);
	create_insn	(x=0X3500D3B8);
	op_stkvar	(x,	0);
	set_cmt	(0X3500D3BB,	"wchar_t *",	0);
	create_insn	(x=0X3500D3BB);
	op_stkvar	(x,	0);
	set_cmt	(0X3500D3C9,	"lpUsedDefaultChar",	0);
	set_cmt	(0X3500D3CA,	"lpDefaultChar",	0);
	create_insn	(x=0X3500D3CB);
	op_stkvar	(x,	0);
	set_cmt	(0X3500D3D0,	"cbMultiByte",	0);
	set_cmt	(0X3500D3D1,	"lpMultiByteStr",	0);
	set_cmt	(0X3500D3D2,	"cchWideChar",	0);
	set_cmt	(0X3500D3D3,	"lpWideCharStr",	0);
	set_cmt	(0X3500D3D4,	"dwFlags",	0);
	set_cmt	(0X3500D3D5,	"CodePage",	0);
	create_insn	(x=0X3500D3D5);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500D3FC);
	op_stkvar	(x,	1);
	set_cmt	(0X3500D3FF,	"StackCookie",	0);
	create_insn	(x=0X3500D40A);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500D40D);
	op_stkvar	(x,	0);
	create_insn	(0X3500D412);
	create_insn	(0X3500D41B);
	set_name	(0X3500D41B,	"___acrt_LCMapStringA");
	create_insn	(x=0X3500D420);
	op_hex		(x,	1);
	set_cmt	(0X3500D423,	"struct __crt_locale_pointers *",	0);
	create_insn	(x=0X3500D423);
	op_stkvar	(x,	0);
	set_cmt	(0X3500D426,	"this",	0);
	create_insn	(x=0X3500D426);
	op_stkvar	(x,	1);
	set_cmt	(0X3500D42E,	"int",	0);
	create_insn	(x=0X3500D42E);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500D431);
	op_stkvar	(x,	1);
	set_cmt	(0X3500D434,	"CodePage",	0);
	create_insn	(x=0X3500D434);
	op_stkvar	(x,	0);
	set_cmt	(0X3500D437,	"cchDest",	0);
	create_insn	(x=0X3500D437);
	op_stkvar	(x,	0);
	set_cmt	(0X3500D43A,	"lpDestStr",	0);
	create_insn	(x=0X3500D43A);
	op_stkvar	(x,	0);
	set_cmt	(0X3500D43D,	"cbMultiByte",	0);
	create_insn	(x=0X3500D43D);
	op_stkvar	(x,	0);
	set_cmt	(0X3500D440,	"lpMultiByteStr",	0);
	create_insn	(x=0X3500D440);
	op_stkvar	(x,	0);
	set_cmt	(0X3500D443,	"dwMapFlags",	0);
	create_insn	(x=0X3500D443);
	op_stkvar	(x,	0);
	set_cmt	(0X3500D446,	"wchar_t *",	0);
	create_insn	(x=0X3500D446);
	op_stkvar	(x,	0);
	set_cmt	(0X3500D449,	"struct __crt_locale_pointers *",	0);
	create_insn	(x=0X3500D44F);
	op_hex		(x,	1);
	create_insn	(x=0X3500D452);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500D458);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500D45B);
	op_hex		(x,	1);
	create_insn	(0X3500D466);
	set_name	(0X3500D466,	"__freea_crt");
	set_name	(0X3500D468,	"__freea_crt_0");
	create_insn	(x=0X3500D46B);
	op_stkvar	(x,	1);
	set_cmt	(0X3500D47D,	"Block",	0);
	create_insn	(0X3500D486);
	set_name	(0X3500D486,	"___acrt_call_reportfault");
	create_insn	(x=0X3500D48B);
	op_hex		(x,	1);
	create_insn	(x=0X3500D498);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500D49B);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500D4A2);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500D4AD);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500D4C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500D4CE);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500D4D4);
	op_hex		(x,	1);
	create_insn	(x=0X3500D4D7);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500D4DD);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500D4E3);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500D4E9);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500D4EF);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500D4F5);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500D4FB);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500D501);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500D507);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500D50D);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500D514);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500D51B);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500D522);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500D529);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500D530);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500D538);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500D53E);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500D541);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500D547);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500D54A);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500D550);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500D55D);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500D563);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500D566);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500D56C);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500D56F);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500D575);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500D578);
	op_stkvar	(x,	0);
	set_cmt	(0X3500D584,	"lpTopLevelExceptionFilter",	0);
	create_insn	(x=0X3500D58E);
	op_stkvar	(x,	1);
	set_cmt	(0X3500D594,	"ExceptionInfo",	0);
	create_insn	(x=0X3500D5A3);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500D5A9);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500D5B2);
	op_stkvar	(x,	1);
	set_cmt	(0X3500D5B5,	"StackCookie",	0);
	create_insn	(0X3500D5C1);
	create_insn	(x=0X3500D5C6);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500D5C9);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X3500D5D5);
	set_name	(0X3500D5D5,	"__invalid_parameter");
	create_insn	(x=0X3500D5E2);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500D5F9);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500D5FC);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500D5FF);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500D602);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500D605);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500D612);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500D615);
	op_hex		(x,	1);
	set_cmt	(0X3500D618,	"StackCookie",	0);
	set_cmt	(0X3500D624,	"Reserved",	0);
	create_insn	(x=0X3500D624);
	op_stkvar	(x,	0);
	set_cmt	(0X3500D62F,	"LineNo",	0);
	create_insn	(x=0X3500D62F);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500D638);
	op_hex		(x,	1);
	set_cmt	(0X3500D63B,	"FileName",	0);
	create_insn	(x=0X3500D63B);
	op_stkvar	(x,	0);
	set_cmt	(0X3500D640,	"FunctionName",	0);
	create_insn	(x=0X3500D640);
	op_stkvar	(x,	0);
	set_cmt	(0X3500D643,	"Expression",	0);
	create_insn	(x=0X3500D643);
	op_stkvar	(x,	0);
	create_insn	(0X3500D650);
	set_name	(0X3500D650,	"__invalid_parameter_noinfo");
	set_cmt	(0X3500D652,	"Reserved",	0);
	set_cmt	(0X3500D653,	"LineNo",	0);
	set_cmt	(0X3500D654,	"FileName",	0);
	set_cmt	(0X3500D655,	"FunctionName",	0);
	set_cmt	(0X3500D656,	"Expression",	0);
	create_insn	(x=0X3500D65C);
	op_hex		(x,	1);
	set_cmt	(0X3500D660,	"ProcessorFeature",	0);
	create_insn	(0X3500D660);
	set_name	(0X3500D660,	"__invoke_watson");
	set_cmt	(0X3500D66E,	"Win8: RtlFailFast(ecx)",	0);
	create_insn	(x=0X3500D66E);
	op_hex		(x,	0);
	create_insn	(0X3500D670);
	create_insn	(x=0X3500D680);
	op_hex		(x,	1);
	set_cmt	(0X3500D683,	"uExitCode",	0);
	set_cmt	(0X3500D68A,	"hProcess",	0);
	create_byte	(0X3500D693);
	make_array	(0X3500D693,	0X2);
	set_name	(0X3500D693,	"___acrt_initialize_locks");
	create_insn	(0X3500D695);
	create_insn	(x=0X3500D697);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X3500D69E,	"int",	0);
	set_cmt	(0X3500D6A0,	"dwSpinCount",	0);
	set_cmt	(0X3500D6A5,	"lpCriticalSection",	0);
	create_insn	(0X3500D6C7);
	create_insn	(0X3500D6D4);
	set_name	(0X3500D6D4,	"___acrt_lock");
	set_name	(0X3500D6D6,	"___vcrt_lock");
	create_insn	(x=0X3500D6D9);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500D6DD);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X3500D6E2,	"lpCriticalSection",	0);
	create_insn	(0X3500D6EB);
	set_name	(0X3500D6EB,	"___acrt_uninitialize_locks");
	set_name	(0X3500D6ED,	"___vcrt_uninitialize_locks_0");
	create_insn	(x=0X3500D6FC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X3500D702,	"lpCriticalSection",	0);
	create_insn	(0X3500D71C);
	set_name	(0X3500D71C,	"___acrt_unlock");
	set_name	(0X3500D71E,	"___vcrt_unlock");
	create_insn	(x=0X3500D721);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500D725);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X3500D72A,	"lpCriticalSection",	0);
	create_insn	(0X3500D733);
	set_name	(0X3500D733,	"?try_get_function@@YAPAXW4function_id@?A0x9b56aee1@@QBDQBW4module_id@2@2@Z");
	create_insn	(x=0X3500D738);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500D74D);
	op_hex		(x,	1);
	create_insn	(x=0X3500D754);
	op_hex		(x,	1);
	create_insn	(x=0X3500D767);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500D76A);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500D77E);
	op_stkvar	(x,	1);
	set_cmt	(0X3500D78F,	"lpProcName",	0);
	create_insn	(x=0X3500D78F);
	op_stkvar	(x,	0);
	set_cmt	(0X3500D792,	"hModule",	0);
	create_insn	(0X3500D7AA);
	create_insn	(0X3500D7B2);
	create_insn	(x=0X3500D7BC);
	op_hex		(x,	1);
	create_insn	(0X3500D7CF);
	set_name	(0X3500D7CF,	"?try_get_module@@YAPAUHINSTANCE__@@W4module_id@?A0x9b56aee1@@@Z");
	create_insn	(x=0X3500D7D4);
	op_stkvar	(x,	1);
	create_insn	(0X3500D7F0);
	set_cmt	(0X3500D7F9,	"dwFlags",	0);
	set_cmt	(0X3500D7FE,	"hFile",	0);
	set_cmt	(0X3500D800,	"lpLibFileName",	0);
	set_cmt	(0X3500D818,	"dwFlags",	0);
	set_cmt	(0X3500D819,	"hFile",	0);
	set_cmt	(0X3500D81A,	"lpLibFileName",	0);
	create_insn	(0X3500D825);
	create_insn	(x=0X3500D82B);
	op_hex		(x,	1);
	create_insn	(0X3500D834);
	set_cmt	(0X3500D83C,	"hLibModule",	0);
	create_insn	(0X3500D84A);
	set_name	(0X3500D84A,	"___acrt_FlsAlloc@4");
	create_insn	(x=0X3500D857);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500D85B);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X3500D860);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X3500D865);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X3500D873);
	op_hex		(x,	1);
	create_insn	(x=0X3500D87A);
	op_stkvar	(x,	0);
	create_insn	(0X3500D889);
	create_insn	(x=0X3500D88F);
	op_stkvar	(x,	1);
	set_cmt	(0X3500D892,	"StackCookie",	0);
	create_insn	(0X3500D8A0);
	set_name	(0X3500D8A0,	"___acrt_FlsFree@4");
	create_insn	(x=0X3500D8AD);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500D8B1);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X3500D8B6);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X3500D8BB);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X3500D8C7);
	op_hex		(x,	1);
	set_cmt	(0X3500D8CC,	"dwTlsIndex",	0);
	create_insn	(x=0X3500D8CC);
	op_stkvar	(x,	0);
	create_insn	(0X3500D8DF);
	create_insn	(x=0X3500D8E5);
	op_stkvar	(x,	1);
	set_cmt	(0X3500D8E8,	"StackCookie",	0);
	create_insn	(0X3500D8F6);
	set_name	(0X3500D8F6,	"___acrt_FlsGetValue@4");
	create_insn	(x=0X3500D903);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500D907);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X3500D90C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X3500D911);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X3500D91D);
	op_hex		(x,	1);
	set_cmt	(0X3500D922,	"dwTlsIndex",	0);
	create_insn	(x=0X3500D922);
	op_stkvar	(x,	0);
	create_insn	(0X3500D935);
	create_insn	(x=0X3500D93B);
	op_stkvar	(x,	1);
	set_cmt	(0X3500D93E,	"StackCookie",	0);
	create_insn	(0X3500D94C);
	set_name	(0X3500D94C,	"___acrt_FlsSetValue@8");
	create_insn	(x=0X3500D959);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500D95D);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X3500D962);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X3500D967);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X3500D973);
	op_hex		(x,	1);
	set_cmt	(0X3500D978,	"lpTlsValue",	0);
	create_insn	(x=0X3500D978);
	op_stkvar	(x,	0);
	set_cmt	(0X3500D97B,	"dwTlsIndex",	0);
	create_insn	(x=0X3500D97B);
	op_stkvar	(x,	0);
	create_insn	(0X3500D98E);
	create_insn	(x=0X3500D994);
	op_stkvar	(x,	1);
	set_cmt	(0X3500D997,	"StackCookie",	0);
	create_insn	(0X3500D9A5);
	set_name	(0X3500D9A5,	"___acrt_InitializeCriticalSectionEx@12");
	create_insn	(x=0X3500D9B2);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500D9B6);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X3500D9BB);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X3500D9C0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X3500D9CE);
	op_hex		(x,	1);
	create_insn	(x=0X3500D9D5);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500D9DA);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500D9DD);
	op_stkvar	(x,	0);
	set_cmt	(0X3500D9EA,	"dwSpinCount",	0);
	create_insn	(x=0X3500D9EA);
	op_stkvar	(x,	0);
	set_cmt	(0X3500D9ED,	"lpCriticalSection",	0);
	create_insn	(x=0X3500D9ED);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500D9F6);
	op_stkvar	(x,	1);
	set_cmt	(0X3500D9F9,	"StackCookie",	0);
	create_insn	(0X3500DA07);
	set_name	(0X3500DA07,	"___acrt_LCMapStringEx@36");
	create_insn	(x=0X3500DA14);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500DA18);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X3500DA1D);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X3500DA22);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X3500DA30);
	op_hex		(x,	1);
	create_insn	(x=0X3500DA37);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500DA3C);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500DA3F);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500DA42);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500DA45);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500DA48);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500DA4B);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500DA4E);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500DA51);
	op_stkvar	(x,	0);
	set_cmt	(0X3500DA5E,	"cchDest",	0);
	create_insn	(x=0X3500DA5E);
	op_stkvar	(x,	0);
	set_cmt	(0X3500DA61,	"lpDestStr",	0);
	create_insn	(x=0X3500DA61);
	op_stkvar	(x,	0);
	set_cmt	(0X3500DA64,	"cchSrc",	0);
	create_insn	(x=0X3500DA64);
	op_stkvar	(x,	0);
	set_cmt	(0X3500DA67,	"lpSrcStr",	0);
	create_insn	(x=0X3500DA67);
	op_stkvar	(x,	0);
	set_cmt	(0X3500DA6A,	"dwMapFlags",	0);
	create_insn	(x=0X3500DA6A);
	op_stkvar	(x,	0);
	set_cmt	(0X3500DA6D,	"int",	0);
	set_cmt	(0X3500DA6F,	"wchar_t *",	0);
	create_insn	(x=0X3500DA6F);
	op_stkvar	(x,	0);
	set_cmt	(0X3500DA77,	"Locale",	0);
	create_insn	(x=0X3500DA7E);
	op_stkvar	(x,	1);
	set_cmt	(0X3500DA81,	"StackCookie",	0);
	create_insn	(0X3500DA8F);
	set_name	(0X3500DA8F,	"___acrt_LocaleNameToLCID@8");
	create_insn	(x=0X3500DA9C);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500DAA0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X3500DAA5);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X3500DAAA);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X3500DAB8);
	op_hex		(x,	1);
	create_insn	(x=0X3500DABF);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500DAC4);
	op_stkvar	(x,	0);
	set_cmt	(0X3500DAD1,	"wchar_t *",	0);
	create_insn	(x=0X3500DAD1);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500DADA);
	op_stkvar	(x,	1);
	set_cmt	(0X3500DADD,	"StackCookie",	0);
	create_insn	(0X3500DAEB);
	set_name	(0X3500DAEB,	"___acrt_initialize_winapi_thunks");
	create_insn	(x=0X3500DAF3);
	op_hex		(x,	1);
	create_insn	(x=0X3500DAF6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X3500DB11);
	set_name	(0X3500DB11,	"___acrt_is_packaged_app");
	create_insn	(x=0X3500DB1F);
	op_stkvar	(x,	0);
	create_insn	(0X3500DB36);
	create_insn	(x=0X3500DB37);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X3500DB3C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X3500DB41);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X3500DB4F);
	op_hex		(x,	1);
	create_insn	(x=0X3500DB56);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0X3500DB5A);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500DB71);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X3500DB7D);
	create_insn	(x=0X3500DB80);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X3500DB8A);
	op_stkvar	(x,	1);
	set_cmt	(0X3500DB8D,	"StackCookie",	0);
	create_insn	(0X3500DB98);
	set_name	(0X3500DB98,	"___acrt_uninitialize_winapi_thunks");
	create_insn	(0X3500DB9A);
	set_name	(0X3500DB9A,	"___vcrt_uninitialize_winapi_thunks_0");
	create_insn	(x=0X3500DB9D);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500DBA4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X3500DBB3,	"hLibModule",	0);
	create_insn	(x=0X3500DBBB);
	op_hex		(x,	1);
	create_insn	(x=0X3500DBC1);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X3500DBCE);
	set_name	(0X3500DBCE,	"_wcscpy_s");
	create_insn	(x=0X3500DBD3);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500DBDB);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500DBE2);
	op_stkvar	(x,	1);
	create_insn	(0X3500DC02);
	create_insn	(0X3500DC2E);
	create_insn	(0X3500DC32);
	set_name	(0X3500DC32,	"??$common_tcsncpy_s@_W@@YAHQA_WIQB_WI@Z");
	create_insn	(x=0X3500DC38);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500DC3B);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500DC47);
	op_stkvar	(x,	0);
	create_insn	(0X3500DC50);
	create_insn	(x=0X3500DC54);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500DC66);
	op_stkvar	(x,	1);
	create_insn	(0X3500DC88);
	create_insn	(0X3500DCAB);
	create_insn	(x=0X3500DCC6);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500DCDF);
	op_stkvar	(x,	1);
	create_insn	(0X3500DCEE);
	create_insn	(0X3500DCFF);
	set_name	(0X3500DCFF,	"_wcsncpy_s");
	create_insn	(0X3500DD0A);
	set_name	(0X3500DD0A,	"unknown_libname_49");
	create_insn	(x=0X3500DD0F);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500DD12);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500DD17);
	op_hex		(x,	1);
	create_insn	(0X3500DD1C);
	create_insn	(0X3500DD22);
	set_name	(0X3500DD22,	"??$common_expand_argv_wildcards@_W@@YAHQAPA_WQAPAPA_W@Z");
	create_insn	(x=0X3500DD27);
	op_hex		(x,	1);
	create_insn	(x=0X3500DD31);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500DD34);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500DD37);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500DD3B);
	op_stkvar	(x,	1);
	create_insn	(0X3500DD58);
	create_insn	(x=0X3500DD62);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500DD65);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500DD68);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500DD6B);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500DD75);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500DD7C);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500DD82);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500DD86);
	op_stkvar	(x,	1);
	set_cmt	(0X3500DD89,	"Control",	0);
	set_cmt	(0X3500DD8A,	"String",	0);
	create_insn	(x=0X3500DD97);
	op_stkvar	(x,	1);
	set_cmt	(0X3500DD9A,	"int",	0);
	set_cmt	(0X3500DD9D,	"MaxCount",	0);
	set_cmt	(0X3500DD9E,	"Source",	0);
	set_cmt	(0X3500DD9F,	"wchar_t *",	0);
	create_insn	(x=0X3500DDA6);
	op_hex		(x,	1);
	create_insn	(x=0X3500DDAB);
	op_stkvar	(x,	1);
	set_cmt	(0X3500DDAE,	"int",	0);
	set_cmt	(0X3500DDAF,	"int",	0);
	set_cmt	(0X3500DDB0,	"lpFileName",	0);
	create_insn	(x=0X3500DDB7);
	op_hex		(x,	1);
	create_insn	(x=0X3500DDCD);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500DDD0);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500DDD5);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500DDDE);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500DDE1);
	op_hex		(x,	1);
	create_insn	(x=0X3500DDE8);
	op_hex		(x,	1);
	create_insn	(x=0X3500DDED);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500DDF8);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500DE02);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500DE0B);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500DE11);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500DE15);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500DE1B);
	op_hex		(x,	1);
	create_insn	(x=0X3500DE20);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500DE27);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500DE2A);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500DE2D);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500DE32);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500DE3D);
	op_hex		(x,	1);
	create_insn	(x=0X3500DE44);
	op_hex		(x,	1);
	create_insn	(x=0X3500DE49);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500DE4F);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500DE54);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500DE5F);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500DE67);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500DE70);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500DE76);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500DE79);
	op_hex		(x,	1);
	create_insn	(x=0X3500DE80);
	op_stkvar	(x,	1);
	set_cmt	(0X3500DE83,	"MaxCount",	0);
	set_cmt	(0X3500DE84,	"Source",	0);
	create_insn	(x=0X3500DE86);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500DE89);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500DE8C);
	op_hex		(x,	1);
	set_cmt	(0X3500DE90,	"SizeInWords",	0);
	set_cmt	(0X3500DE91,	"Destination",	0);
	create_insn	(x=0X3500DE97);
	op_hex		(x,	1);
	create_insn	(x=0X3500DE9E);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500DEA1);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500DEAA);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500DEB0);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500DEB7);
	op_stkvar	(x,	1);
	set_cmt	(0X3500DEC0,	"Block",	0);
	create_insn	(x=0X3500DEC7);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500DED3);
	op_stkvar	(x,	1);
	set_cmt	(0X3500DED6,	"StackCookie",	0);
	create_insn	(0X3500DEE2);
	set_cmt	(0X3500DEE4,	"Reserved",	0);
	set_cmt	(0X3500DEE5,	"LineNo",	0);
	set_cmt	(0X3500DEE6,	"FileName",	0);
	set_cmt	(0X3500DEE7,	"FunctionName",	0);
	set_cmt	(0X3500DEE8,	"Expression",	0);
	create_byte	(0X3500DEEE);
	create_insn	(0X3500DEEF);
	set_name	(0X3500DEEF,	"??$copy_and_add_argument_to_buffer@_W@@YAHQB_W0IAAV?$argument_list@_W@?A0xfd16de3c@@@Z");
	create_insn	(x=0X3500DEF5);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500DF0A);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500DF0F);
	op_hex		(x,	1);
	create_insn	(x=0X3500DF11);
	op_hex		(x,	1);
	create_insn	(x=0X3500DF17);
	op_stkvar	(x,	0);
	create_insn	(0X3500DF23);
	set_cmt	(0X3500DF29,	"Size",	0);
	set_cmt	(0X3500DF2B,	"Count",	0);
	set_cmt	(0X3500DF39,	"MaxCount",	0);
	set_cmt	(0X3500DF3A,	"Source",	0);
	create_insn	(x=0X3500DF3A);
	op_stkvar	(x,	0);
	set_cmt	(0X3500DF3D,	"SizeInWords",	0);
	set_cmt	(0X3500DF3E,	"Destination",	0);
	create_insn	(x=0X3500DF44);
	op_hex		(x,	1);
	set_cmt	(0X3500DF4B,	"MaxCount",	0);
	create_insn	(x=0X3500DF4B);
	op_stkvar	(x,	0);
	set_cmt	(0X3500DF53,	"Source",	0);
	create_insn	(x=0X3500DF53);
	op_stkvar	(x,	0);
	set_cmt	(0X3500DF56,	"SizeInWords",	0);
	set_cmt	(0X3500DF57,	"Destination",	0);
	create_insn	(x=0X3500DF5D);
	op_hex		(x,	1);
	create_insn	(x=0X3500DF64);
	op_stkvar	(x,	1);
	set_cmt	(0X3500DF67,	"Block",	0);
	set_cmt	(0X3500DF6D,	"Block",	0);
	create_insn	(0X3500DF80);
	set_cmt	(0X3500DF82,	"Reserved",	0);
	set_cmt	(0X3500DF83,	"LineNo",	0);
	set_cmt	(0X3500DF84,	"FileName",	0);
	set_cmt	(0X3500DF85,	"FunctionName",	0);
	set_cmt	(0X3500DF86,	"Expression",	0);
	create_byte	(0X3500DF8C);
	create_insn	(0X3500DF8D);
	set_name	(0X3500DF8D,	"??$expand_argument_wildcards@_W@@YAHQA_W0AAV?$argument_list@_W@?A0xfd16de3c@@@Z");
	create_insn	(x=0X3500DF92);
	op_hex		(x,	1);
	create_insn	(x=0X3500DF9F);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500DFA2);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500DFA5);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500DFA9);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500DFB3);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500DFB9);
	op_stkvar	(x,	0);
	create_insn	(0X3500DFC6);
	create_insn	(x=0X3500DFC9);
	op_stkvar	(x,	1);
	set_cmt	(0X3500DFF2,	"int",	0);
	set_cmt	(0X3500DFF5,	"MaxCount",	0);
	set_cmt	(0X3500DFF6,	"Source",	0);
	set_cmt	(0X3500DFF7,	"wchar_t *",	0);
	create_insn	(x=0X3500DFFD);
	op_hex		(x,	1);
	create_insn	(0X3500E005);
	create_insn	(0X3500E025);
	create_insn	(x=0X3500E02D);
	op_hex		(x,	1);
	create_insn	(x=0X3500E03B);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500E041);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500E04E);
	op_hex		(x,	1);
	create_insn	(x=0X3500E051);
	op_stkvar	(x,	1);
	set_cmt	(0X3500E057,	"dwAdditionalFlags",	0);
	set_cmt	(0X3500E058,	"lpSearchFilter",	0);
	set_cmt	(0X3500E059,	"fSearchOp",	0);
	set_cmt	(0X3500E05A,	"lpFindFileData",	0);
	set_cmt	(0X3500E05B,	"fInfoLevelId",	0);
	set_cmt	(0X3500E05C,	"lpFileName",	0);
	create_insn	(x=0X3500E06A);
	op_stkvar	(x,	1);
	set_cmt	(0X3500E070,	"int",	0);
	set_cmt	(0X3500E071,	"MaxCount",	0);
	set_cmt	(0X3500E072,	"Source",	0);
	set_cmt	(0X3500E073,	"wchar_t *",	0);
	create_insn	(x=0X3500E079);
	op_hex		(x,	1);
	set_cmt	(0X3500E083,	"hFindFile",	0);
	create_insn	(x=0X3500E08C);
	op_stkvar	(x,	1);
	set_cmt	(0X3500E091,	"StackCookie",	0);
	create_insn	(x=0X3500E09D);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500E0AA);
	op_hex		(x,	1);
	create_insn	(x=0X3500E0AD);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500E0B4);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500E0BD);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500E0C6);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500E0CF);
	op_stkvar	(x,	0);
	set_cmt	(0X3500E0D8,	"int",	0);
	set_cmt	(0X3500E0D9,	"MaxCount",	0);
	create_insn	(x=0X3500E0D9);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500E0DF);
	op_stkvar	(x,	1);
	set_cmt	(0X3500E0E5,	"Source",	0);
	set_cmt	(0X3500E0E6,	"wchar_t *",	0);
	create_insn	(x=0X3500E0EC);
	op_hex		(x,	1);
	create_insn	(x=0X3500E0F3);
	op_stkvar	(x,	1);
	set_cmt	(0X3500E0F9,	"lpFindFileData",	0);
	set_cmt	(0X3500E0FA,	"hFindFile",	0);
	create_insn	(x=0X3500E101);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500E110);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500E11D);
	op_hex		(x,	1);
	set_cmt	(0X3500E128,	"CompareFunction",	0);
	create_insn	(x=0X3500E128);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X3500E12F,	"SizeOfElements",	0);
	set_cmt	(0X3500E131,	"NumOfElements",	0);
	set_cmt	(0X3500E135,	"Base",	0);
	create_insn	(x=0X3500E13B);
	op_hex		(x,	1);
	create_insn	(0X3500E143);
	set_name	(0X3500E143,	"unknown_libname_50");
	set_cmt	(0X3500E14D,	"Block",	0);
	create_insn	(0X3500E14D);
	set_cmt	(0X3500E15D,	"Block",	0);
	create_insn	(0X3500E168);
	set_cmt	(0X3500E17C,	"Block",	0);
	create_insn	(x=0X3500E17C);
	op_stkvar	(x,	0);
	create_insn	(0X3500E189);
	create_insn	(x=0X3500E18C);
	op_stkvar	(x,	1);
	create_insn	(0X3500E19D);
	set_name	(0X3500E19D,	"unknown_libname_51");
	create_insn	(0X3500E1AF);
	set_cmt	(0X3500E1B4,	"Size",	0);
	set_cmt	(0X3500E1B6,	"Count",	0);
	set_cmt	(0X3500E1BD,	"Block",	0);
	create_insn	(x=0X3500E1C8);
	op_hex		(x,	1);
	create_insn	(0X3500E1D4);
	create_insn	(0X3500E1DF);
	create_insn	(x=0X3500E1E1);
	op_hex		(x,	1);
	set_cmt	(0X3500E1ED,	"int",	0);
	set_cmt	(0X3500E1F2,	"int",	0);
	set_cmt	(0X3500E1F3,	"Block",	0);
	create_insn	(x=0X3500E1FA);
	op_hex		(x,	1);
	create_insn	(0X3500E206);
	set_cmt	(0X3500E216,	"Block",	0);
	create_insn	(0X3500E224);
	set_name	(0X3500E224,	"___acrt_expand_wide_argv_wildcards");
	create_insn	(0X3500E22F);
	set_name	(0X3500E22F,	"??$?RV_lambda_c76fdea48760d5f9368b465f31df4405_@@AAV_lambda_e378711a6f6581bf7f0efd7cdf97f5d9_@@V_lambda_e927a58b2a85c081d733e8c6192ae2d2_@@@?$__crt_seh_guarded_call@X@@QAEX$$QAV_lambda_c76fdea48760d5f9368b465f31df4405_@@AAV_lambda_e378711a6f6581bf7f0efd7cdf97f5d9_@@$$QAV_lambda_e927a58b2a85c081d733e8c6192ae2d2_@@@Z");
	create_insn	(x=0X3500E231);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X3500E23B);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500E246);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0X3500E24A);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500E252);
	op_stkvar	(x,	0);
	create_insn	(0X3500E25E);
	create_insn	(x=0X3500E266);
	op_stkvar	(x,	1);
	create_insn	(0X3500E272);
	create_insn	(x=0X3500E277);
	op_hex		(x,	1);
	create_insn	(x=0X3500E27A);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500E27D);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500E280);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500E283);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500E286);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500E28A);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500E28D);
	op_stkvar	(x,	1);
	create_insn	(0X3500E29A);
	set_name	(0X3500E29A,	"??R_lambda_ad1ced32f4ac17aa236e5ef05d6b3b7c_@@QBEXXZ");
	set_cmt	(0X3500E29F,	"SourceSize",	0);
	set_cmt	(0X3500E2DB,	"Source",	0);
	set_cmt	(0X3500E2DC,	"DestinationSize",	0);
	set_cmt	(0X3500E2DE,	"Destination",	0);
	create_insn	(x=0X3500E2DE);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X3500E2EF,	"SourceSize",	0);
	set_cmt	(0X3500E2F8,	"Source",	0);
	set_cmt	(0X3500E2F9,	"DestinationSize",	0);
	set_cmt	(0X3500E2FA,	"Destination",	0);
	create_insn	(x=0X3500E2FA);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X3500E30B,	"SourceSize",	0);
	set_cmt	(0X3500E316,	"Source",	0);
	set_cmt	(0X3500E317,	"DestinationSize",	0);
	set_cmt	(0X3500E318,	"Destination",	0);
	create_insn	(x=0X3500E318);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X3500E327);
	op_hex		(x,	1);
	create_insn	(x=0X3500E32A);
	op_hex		(x,	1);
	create_insn	(x=0X3500E338);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X3500E33F,	"Block",	0);
	create_insn	(0X3500E35E);
	set_name	(0X3500E35E,	"?CPtoLocaleName@@YAPB_WH@Z");
	create_insn	(x=0X3500E363);
	op_stkvar	(x,	1);
	create_insn	(0X3500E380);
	create_insn	(0X3500E387);
	create_insn	(0X3500E38E);
	create_insn	(0X3500E395);
	create_insn	(0X3500E39C);
	set_name	(0X3500E39C,	"?getSystemCP@@YAHH@Z");
	create_insn	(x=0X3500E3A1);
	op_hex		(x,	1);
	set_cmt	(0X3500E3A4,	"this",	0);
	create_insn	(x=0X3500E3A4);
	op_stkvar	(x,	1);
	set_cmt	(0X3500E3A7,	"struct __crt_locale_pointers *",	0);
	create_insn	(x=0X3500E3AE);
	op_hex		(x,	1);
	create_insn	(x=0X3500E3B5);
	op_stkvar	(x,	1);
	create_insn	(0X3500E3CF);
	create_insn	(0X3500E3E6);
	create_insn	(x=0X3500E3EB);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500E3FB);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500E401);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500E404);
	op_hex		(x,	1);
	create_insn	(0X3500E40F);
	set_name	(0X3500E40F,	"?setSBCS@@YAXPAU__crt_multibyte_data@@@Z");
	create_insn	(x=0X3500E415);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500E433);
	op_hex		(x,	1);
	create_insn	(x=0X3500E447);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X3500E474);
	set_name	(0X3500E474,	"?setSBUpLow@@YAXPAU__crt_multibyte_data@@@Z");
	create_insn	(x=0X3500E479);
	op_hex		(x,	1);
	create_insn	(x=0X3500E486);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500E48B);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500E48E);
	op_stkvar	(x,	1);
	set_cmt	(0X3500E495,	"lpCPInfo",	0);
	set_cmt	(0X3500E496,	"CodePage",	0);
	create_insn	(x=0X3500E4B0);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500E4BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500E4C2);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500E4C8);
	op_stkvar	(x,	0);
	create_insn	(0X3500E4D1);
	create_insn	(0X3500E4DA);
	create_insn	(x=0X3500E4DE);
	op_stkvar	(x,	0);
	set_cmt	(0X3500E4F4,	"int",	0);
	set_cmt	(0X3500E4F5,	"CodePage",	0);
	create_insn	(x=0X3500E4F8);
	op_stkvar	(x,	1);
	set_cmt	(0X3500E4FE,	"lpCharType",	0);
	set_cmt	(0X3500E4FF,	"cbMultiByte",	0);
	create_insn	(x=0X3500E500);
	op_stkvar	(x,	1);
	set_cmt	(0X3500E506,	"lpMultiByteStr",	0);
	set_cmt	(0X3500E507,	"dwInfoType",	0);
	set_cmt	(0X3500E509,	"struct __crt_locale_pointers *",	0);
	set_cmt	(0X3500E50F,	"int",	0);
	set_cmt	(0X3500E510,	"CodePage",	0);
	create_insn	(x=0X3500E513);
	op_stkvar	(x,	1);
	set_cmt	(0X3500E519,	"cchDest",	0);
	set_cmt	(0X3500E51A,	"lpDestStr",	0);
	set_cmt	(0X3500E51B,	"cbMultiByte",	0);
	create_insn	(x=0X3500E51C);
	op_stkvar	(x,	1);
	set_cmt	(0X3500E522,	"lpMultiByteStr",	0);
	set_cmt	(0X3500E523,	"dwMapFlags",	0);
	set_cmt	(0X3500E524,	"wchar_t *",	0);
	set_cmt	(0X3500E52A,	"struct __crt_locale_pointers *",	0);
	create_insn	(x=0X3500E530);
	op_hex		(x,	1);
	create_insn	(x=0X3500E533);
	op_stkvar	(x,	1);
	set_cmt	(0X3500E539,	"int",	0);
	set_cmt	(0X3500E53A,	"CodePage",	0);
	set_cmt	(0X3500E53D,	"cchDest",	0);
	set_cmt	(0X3500E53E,	"lpDestStr",	0);
	set_cmt	(0X3500E53F,	"cbMultiByte",	0);
	create_insn	(x=0X3500E540);
	op_stkvar	(x,	1);
	set_cmt	(0X3500E546,	"lpMultiByteStr",	0);
	set_cmt	(0X3500E547,	"dwMapFlags",	0);
	set_cmt	(0X3500E54C,	"wchar_t *",	0);
	set_cmt	(0X3500E552,	"struct __crt_locale_pointers *",	0);
	create_insn	(x=0X3500E558);
	op_hex		(x,	1);
	create_insn	(x=0X3500E55D);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500E565);
	op_hex		(x,	1);
	create_insn	(x=0X3500E569);
	op_hex		(x,	1);
	create_insn	(x=0X3500E56E);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500E577);
	op_hex		(x,	1);
	create_insn	(x=0X3500E57B);
	op_hex		(x,	1);
	create_insn	(x=0X3500E580);
	op_stkvar	(x,	1);
	create_insn	(0X3500E590);
	create_insn	(0X3500E59E);
	create_insn	(x=0X3500E5AB);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500E5B5);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500E5C3);
	op_hex		(x,	1);
	create_insn	(x=0X3500E5CD);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500E5D9);
	op_hex		(x,	1);
	create_insn	(0X3500E5E4);
	create_insn	(x=0X3500E5E6);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500E5F7);
	op_stkvar	(x,	1);
	set_cmt	(0X3500E5FC,	"StackCookie",	0);
	create_insn	(0X3500E608);
	set_name	(0X3500E608,	"?setmbcp_internal@@YAHH_N@Z");
	create_insn	(x=0X3500E60D);
	op_hex		(x,	1);
	create_insn	(x=0X3500E615);
	op_stkvar	(x,	0);
	set_cmt	(0X3500E61D,	"int",	0);
	create_insn	(x=0X3500E61D);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500E626);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500E629);
	op_stkvar	(x,	0);
	create_insn	(0X3500E638);
	set_cmt	(0X3500E63B,	"Size",	0);
	create_insn	(x=0X3500E647);
	op_hex		(x,	1);
	create_insn	(x=0X3500E64F);
	op_stkvar	(x,	1);
	set_cmt	(0X3500E65E,	"struct __crt_multibyte_data *",	0);
	set_cmt	(0X3500E65F,	"int",	0);
	create_insn	(x=0X3500E65F);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500E662);
	op_hex		(x,	1);
	set_cmt	(0X3500E67F,	"Block",	0);
	create_insn	(x=0X3500E68F);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500E69A);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500E6A7);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500E6AA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X3500E6B3,	"Block",	0);
	create_insn	(x=0X3500E6C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500E6CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500E6CF);
	op_hex		(x,	1);
	create_insn	(x=0X3500E6D8);
	op_hex		(x,	1);
	create_insn	(x=0X3500E6E1);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500E6E4);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500E6E7);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500E6F2);
	op_stkvar	(x,	0);
	create_insn	(0X3500E709);
	set_name	(0X3500E709,	"___acrt_initialize_multibyte");
	set_cmt	(0X3500E712,	"bool",	0);
	set_cmt	(0X3500E714,	"int",	0);
	create_insn	(0X3500E727);
	set_name	(0X3500E727,	"___acrt_update_thread_multibyte_data");
	create_insn	(x=0X3500E729);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X3500E735);
	op_stkvar	(x,	0);
	create_insn	(0X3500E75E);
	create_insn	(x=0X3500E766);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500E76C);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500E77B);
	op_hex		(x,	1);
	create_insn	(x=0X3500E784);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X3500E78C,	"Block",	0);
	create_insn	(x=0X3500E7A1);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500E7A7);
	op_stkvar	(x,	0);
	create_insn	(0X3500E7B3);
	create_insn	(x=0X3500E7B5);
	op_stkvar	(x,	1);
	create_insn	(0X3500E7C1);
	create_insn	(0X3500E7C9);
	set_name	(0X3500E7C9,	"__setmbcp_nolock");
	create_insn	(x=0X3500E7CE);
	op_hex		(x,	1);
	create_insn	(x=0X3500E7D8);
	op_stkvar	(x,	0);
	set_cmt	(0X3500E7DD,	"int",	0);
	create_insn	(x=0X3500E7DD);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500E7E0);
	op_stkvar	(x,	1);
	set_cmt	(0X3500E7EF,	"struct __crt_multibyte_data *",	0);
	create_insn	(0X3500E7FD);
	create_insn	(x=0X3500E804);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500E807);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X3500E817);
	op_stkvar	(x,	0);
	set_cmt	(0X3500E83C,	"CodePage",	0);
	create_insn	(x=0X3500E84B);
	op_stkvar	(x,	1);
	set_cmt	(0X3500E84E,	"lpCPInfo",	0);
	set_cmt	(0X3500E84F,	"CodePage",	0);
	create_insn	(x=0X3500E870);
	op_hex		(x,	1);
	create_insn	(x=0X3500E87C);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500E881);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500E885);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500E899);
	op_hex		(x,	1);
	create_insn	(x=0X3500E8B3);
	op_hex		(x,	1);
	set_cmt	(0X3500E8BC,	"int",	0);
	create_insn	(x=0X3500E8C4);
	op_hex		(x,	1);
	create_insn	(0X3500E8D2);
	create_insn	(0X3500E8E2);
	set_cmt	(0X3500E8EA,	"struct __crt_multibyte_data *",	0);
	create_insn	(x=0X3500E8F5);
	op_hex		(x,	1);
	create_insn	(0X3500E8FD);
	create_insn	(x=0X3500E90C);
	op_hex		(x,	1);
	create_insn	(x=0X3500E90F);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500E913);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500E916);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X3500E91C);
	op_stkvar	(x,	0);
	create_insn	(0X3500E935);
	create_insn	(x=0X3500E93D);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X3500E958);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500E95F);
	op_stkvar	(x,	0);
	set_cmt	(0X3500E967,	"int",	0);
	create_insn	(x=0X3500E977);
	op_hex		(x,	1);
	create_insn	(x=0X3500E980);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500E988);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X3500E9A0,	"struct __crt_multibyte_data *",	0);
	create_insn	(x=0X3500E9AA);
	op_stkvar	(x,	1);
	set_cmt	(0X3500E9AE,	"StackCookie",	0);
	create_insn	(0X3500E9BA);
	set_name	(0X3500E9BA,	"_memcpy_s");
	create_insn	(0X3500E9BC);
	set_name	(0X3500E9BC,	"_memcpy_s_0");
	create_insn	(x=0X3500E9C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500E9CB);
	op_stkvar	(x,	1);
	create_insn	(0X3500E9E5);
	create_insn	(x=0X3500E9E6);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500E9ED);
	op_stkvar	(x,	0);
	set_cmt	(0X3500E9F2,	"Size",	0);
	set_cmt	(0X3500E9F3,	"Src",	0);
	set_cmt	(0X3500E9F4,	"void *",	0);
	create_insn	(x=0X3500E9FA);
	op_hex		(x,	1);
	create_insn	(x=0X3500EA01);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500EA0C);
	op_hex		(x,	1);
	create_insn	(x=0X3500EA1C);
	op_stkvar	(x,	0);
	create_insn	(0X3500EA34);
	create_insn	(0X3500EA3B);
	set_name	(0X3500EA3B,	"___acrt_initialize_command_line");
	create_insn	(0X3500EA54);
	set_name	(0X3500EA54,	"?find_end_of_double_null_terminated_sequence@@YAPB_WQB_W@Z");
	create_insn	(x=0X3500EA59);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500EA77);
	op_hex		(x,	1);
	create_insn	(0X3500EA8B);
	set_name	(0X3500EA8B,	"___dcrt_get_wide_environment_from_os");
	create_insn	(0X3500EA9F);
	set_cmt	(0X3500EAA0,	"wchar_t *",	0);
	create_insn	(x=0X3500EAA8);
	op_hex		(x,	1);
	set_cmt	(0X3500EAAD,	"Size",	0);
	set_cmt	(0X3500EABB,	"Size",	0);
	set_cmt	(0X3500EABC,	"Src",	0);
	set_cmt	(0X3500EABD,	"void *",	0);
	create_insn	(x=0X3500EAC3);
	op_hex		(x,	1);
	set_cmt	(0X3500EAC6,	"Block",	0);
	set_cmt	(0X3500EACE,	"penv",	0);
	create_insn	(0X3500EADB);
	set_name	(0X3500EADB,	"___acrt_lowio_create_handle_array");
	set_cmt	(0X3500EAE4,	"Size",	0);
	set_cmt	(0X3500EAE6,	"Count",	0);
	create_insn	(x=0X3500EAF1);
	op_stkvar	(x,	0);
	create_insn	(0X3500EAFE);
	set_cmt	(0X3500EB0E,	"int",	0);
	set_cmt	(0X3500EB0F,	"dwSpinCount",	0);
	set_cmt	(0X3500EB17,	"lpCriticalSection",	0);
	create_insn	(x=0X3500EB1D);
	op_hex		(x,	1);
	create_insn	(x=0X3500EB37);
	op_hex		(x,	1);
	create_insn	(x=0X3500EB42);
	op_stkvar	(x,	1);
	set_cmt	(0X3500EB46,	"Block",	0);
	create_insn	(0X3500EB55);
	set_name	(0X3500EB55,	"___acrt_lowio_destroy_handle_array");
	create_insn	(x=0X3500EB5B);
	op_stkvar	(x,	1);
	set_cmt	(0X3500EB70,	"lpCriticalSection",	0);
	set_cmt	(0X3500EB7E,	"Block",	0);
	create_insn	(0X3500EB8A);
	set_name	(0X3500EB8A,	"___acrt_lowio_ensure_fh_exists");
	create_insn	(x=0X3500EB8C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X3500EB96);
	op_stkvar	(x,	0);
	create_insn	(0X3500EBBA);
	create_insn	(x=0X3500EBBC);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500EBC7);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500EBD1);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500EBD4);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500EBF5);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500EBF8);
	op_stkvar	(x,	0);
	create_insn	(0X3500EC04);
	create_insn	(0X3500EC06);
	create_insn	(x=0X3500EC16);
	op_stkvar	(x,	1);
	create_insn	(0X3500EC22);
	set_name	(0X3500EC22,	"___acrt_lowio_lock_fh");
	create_insn	(x=0X3500EC27);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500EC2C);
	op_hex		(x,	1);
	create_insn	(x=0X3500EC2F);
	op_hex		(x,	1);
	set_cmt	(0X3500EC3C,	"lpCriticalSection",	0);
	create_insn	(0X3500EC45);
	set_name	(0X3500EC45,	"___acrt_lowio_unlock_fh");
	create_insn	(x=0X3500EC4A);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500EC4F);
	op_hex		(x,	1);
	create_insn	(x=0X3500EC52);
	op_hex		(x,	1);
	set_cmt	(0X3500EC5F,	"lpCriticalSection",	0);
	create_insn	(0X3500EC68);
	set_name	(0X3500EC68,	"__free_osfhnd");
	create_insn	(x=0X3500EC6F);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500EC83);
	op_hex		(x,	1);
	create_insn	(x=0X3500EC86);
	op_hex		(x,	1);
	create_insn	(x=0X3500EC93);
	op_hex		(x,	1);
	create_insn	(0X3500ECC0);
	set_cmt	(0X3500ECC5,	"hHandle",	0);
	create_insn	(0X3500ECC5);
	set_cmt	(0X3500ECC6,	"nStdHandle",	0);
	create_insn	(x=0X3500ECD5);
	op_hex		(x,	1);
	create_insn	(0X3500ECDE);
	create_insn	(x=0X3500ECEE);
	op_hex		(x,	1);
	create_insn	(x=0X3500ECF1);
	op_hex		(x,	1);
	create_insn	(0X3500ECF9);
	set_name	(0X3500ECF9,	"__get_osfhandle");
	create_insn	(x=0X3500ECFE);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500ED0B);
	op_hex		(x,	1);
	create_insn	(0X3500ED1B);
	create_insn	(x=0X3500ED29);
	op_hex		(x,	1);
	create_insn	(x=0X3500ED2C);
	op_hex		(x,	1);
	create_insn	(x=0X3500ED39);
	op_hex		(x,	1);
	create_insn	(0X3500ED46);
	create_insn	(x=0X3500ED4B);
	op_hex		(x,	1);
	create_insn	(x=0X3500ED5E);
	op_hex		(x,	1);
	create_insn	(0X3500ED63);
	set_name	(0X3500ED63,	"?initialize_inherited_file_handles_nolock@@YAXXZ");
	create_insn	(x=0X3500ED68);
	op_hex		(x,	1);
	create_insn	(x=0X3500ED6B);
	op_stkvar	(x,	1);
	set_cmt	(0X3500ED6E,	"lpStartupInfo",	0);
	create_insn	(x=0X3500ED75);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500ED80);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500ED95);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500EDBC);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500EDCD);
	op_hex		(x,	1);
	create_insn	(x=0X3500EDD2);
	op_hex		(x,	1);
	set_cmt	(0X3500EDD7,	"hFile",	0);
	create_insn	(x=0X3500EDE6);
	op_hex		(x,	1);
	create_insn	(x=0X3500EDE9);
	op_hex		(x,	1);
	create_insn	(x=0X3500EDEF);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500EE03);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500EE0B);
	op_stkvar	(x,	0);
	create_insn	(0X3500EE19);
	set_name	(0X3500EE19,	"?initialize_stdio_handles_nolock@@YAXXZ");
	create_insn	(x=0X3500EE24);
	op_hex		(x,	1);
	create_insn	(x=0X3500EE27);
	op_hex		(x,	1);
	create_insn	(x=0X3500EE40);
	op_hex		(x,	1);
	create_insn	(0X3500EE46);
	create_insn	(0X3500EE5D);
	create_insn	(0X3500EE61);
	set_cmt	(0X3500EE64,	"nStdHandle",	0);
	set_cmt	(0X3500EE76,	"hFile",	0);
	create_insn	(0X3500EE7F);
	create_insn	(x=0X3500EE85);
	op_hex		(x,	1);
	create_insn	(x=0X3500EE92);
	op_hex		(x,	1);
	create_insn	(0X3500EE98);
	create_insn	(x=0X3500EE9D);
	op_hex		(x,	1);
	create_insn	(x=0X3500EEA3);
	op_hex		(x,	1);
	create_insn	(0X3500EECF);
	set_name	(0X3500EECF,	"___acrt_initialize_lowio");
	create_insn	(x=0X3500EED1);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X3500EEE5);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500EEE8);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500EF02);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500EF05);
	op_stkvar	(x,	0);
	create_insn	(0X3500EF11);
	create_insn	(x=0X3500EF19);
	op_stkvar	(x,	1);
	create_byte	(0X3500EF25);
	make_array	(0X3500EF25,	0X2);
	set_name	(0X3500EF25,	"___acrt_uninitialize_lowio");
	create_insn	(0X3500EF27);
	create_insn	(x=0X3500EF2A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X3500EF34,	"lpCriticalSection",	0);
	create_insn	(x=0X3500EF3A);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	op_hex		(x,	1);
	create_insn	(0X3500EF51);
	set_name	(0X3500EF51,	"___acrt_locale_free_monetary");
	create_insn	(x=0X3500EF57);
	op_stkvar	(x,	1);
	set_cmt	(0X3500EF6D,	"Block",	0);
	set_cmt	(0X3500EF7F,	"Block",	0);
	set_cmt	(0X3500EF91,	"Block",	0);
	set_cmt	(0X3500EFA3,	"Block",	0);
	set_cmt	(0X3500EFB5,	"Block",	0);
	set_cmt	(0X3500EFC7,	"Block",	0);
	set_cmt	(0X3500EFD9,	"Block",	0);
	set_cmt	(0X3500EFEB,	"Block",	0);
	set_cmt	(0X3500EFFD,	"Block",	0);
	set_cmt	(0X3500F00F,	"Block",	0);
	set_cmt	(0X3500F021,	"Block",	0);
	set_cmt	(0X3500F033,	"Block",	0);
	set_cmt	(0X3500F045,	"Block",	0);
	create_insn	(0X3500F04F);
	set_name	(0X3500F04F,	"___acrt_locale_free_numeric");
	create_insn	(x=0X3500F055);
	op_stkvar	(x,	1);
	set_cmt	(0X3500F066,	"Block",	0);
	set_cmt	(0X3500F078,	"Block",	0);
	set_cmt	(0X3500F08A,	"Block",	0);
	set_cmt	(0X3500F09C,	"Block",	0);
	set_cmt	(0X3500F0AE,	"Block",	0);
	create_insn	(0X3500F0B8);
	set_name	(0X3500F0B8,	"?free_crt_array_internal@@YAXQAPBXI@Z");
	create_insn	(x=0X3500F0BD);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500F0C2);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500F0D2);
	op_hex		(x,	1);
	set_cmt	(0X3500F0DF,	"Block",	0);
	create_insn	(0X3500F0F4);
	set_name	(0X3500F0F4,	"___acrt_locale_free_time");
	create_insn	(x=0X3500F0FA);
	op_stkvar	(x,	1);
	set_cmt	(0X3500F105,	"unsigned int",	0);
	set_cmt	(0X3500F107,	"void **",	0);
	set_cmt	(0X3500F110,	"unsigned int",	0);
	set_cmt	(0X3500F112,	"void **",	0);
	set_cmt	(0X3500F11B,	"unsigned int",	0);
	set_cmt	(0X3500F11D,	"void **",	0);
	set_cmt	(0X3500F126,	"unsigned int",	0);
	set_cmt	(0X3500F128,	"void **",	0);
	set_cmt	(0X3500F134,	"unsigned int",	0);
	set_cmt	(0X3500F136,	"void **",	0);
	set_cmt	(0X3500F13C,	"Block",	0);
	set_cmt	(0X3500F147,	"Block",	0);
	set_cmt	(0X3500F152,	"Block",	0);
	set_cmt	(0X3500F163,	"unsigned int",	0);
	set_cmt	(0X3500F165,	"void **",	0);
	set_cmt	(0X3500F171,	"unsigned int",	0);
	set_cmt	(0X3500F173,	"void **",	0);
	create_insn	(x=0X3500F179);
	op_hex		(x,	1);
	set_cmt	(0X3500F182,	"unsigned int",	0);
	set_cmt	(0X3500F184,	"void **",	0);
	set_cmt	(0X3500F190,	"unsigned int",	0);
	set_cmt	(0X3500F192,	"void **",	0);
	set_cmt	(0X3500F19E,	"unsigned int",	0);
	set_cmt	(0X3500F1A0,	"void **",	0);
	set_cmt	(0X3500F1A6,	"Block",	0);
	set_cmt	(0X3500F1B1,	"Block",	0);
	set_cmt	(0X3500F1BC,	"Block",	0);
	set_cmt	(0X3500F1C7,	"Block",	0);
	create_insn	(x=0X3500F1D2);
	op_hex		(x,	1);
	create_insn	(0X3500F1D8);
	set_name	(0X3500F1D8,	"_wcsnlen");
	create_insn	(x=0X3500F1E3);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500F1F1);
	op_hex		(x,	1);
	create_insn	(x=0X3500F1F6);
	op_stkvar	(x,	1);
	create_insn	(0X3500F21D);
	create_insn	(x=0X3500F21F);
	op_hex		(x,	1);
	create_insn	(x=0X3500F22D);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500F230);
	op_hex		(x,	1);
	create_insn	(x=0X3500F23D);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500F242);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500F24F);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500F256);
	op_hex		(x,	1);
	create_insn	(x=0X3500F269);
	op_hex		(x,	1);
	create_insn	(0X3500F277);
	create_insn	(x=0X3500F28A);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500F28D);
	op_stkvar	(x,	1);
	create_insn	(0X3500F295);
	create_insn	(x=0X3500F2A3);
	op_hex		(x,	1);
	create_insn	(0X3500F2AD);
	create_insn	(x=0X3500F2B6);
	op_hex		(x,	1);
	create_insn	(x=0X3500F2BB);
	op_stkvar	(x,	1);
	create_insn	(0X3500F2E2);
	create_insn	(x=0X3500F2E4);
	op_hex		(x,	1);
	create_insn	(x=0X3500F2F2);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500F2F5);
	op_hex		(x,	1);
	create_insn	(x=0X3500F302);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500F307);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500F314);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500F31B);
	op_hex		(x,	1);
	create_insn	(x=0X3500F32E);
	op_hex		(x,	1);
	create_insn	(0X3500F338);
	create_insn	(x=0X3500F34E);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500F351);
	op_stkvar	(x,	1);
	create_insn	(0X3500F359);
	create_insn	(x=0X3500F369);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500F385);
	op_hex		(x,	1);
	create_insn	(0X3500F38F);
	set_name	(0X3500F38F,	"_wcspbrk");
	create_insn	(x=0X3500F394);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500F3A1);
	op_stkvar	(x,	1);
	create_insn	(0X3500F3D4);
	set_name	(0X3500F3D4,	"___acrt_GetStringTypeA");
	create_insn	(x=0X3500F3D9);
	op_hex		(x,	1);
	create_insn	(x=0X3500F3E3);
	op_stkvar	(x,	0);
	set_cmt	(0X3500F3E9,	"struct __crt_locale_pointers *",	0);
	create_insn	(x=0X3500F3E9);
	op_stkvar	(x,	0);
	set_cmt	(0X3500F3EC,	"this",	0);
	create_insn	(x=0X3500F3EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500F3F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500F3FB);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500F403);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500F40A);
	op_stkvar	(x,	0);
	set_cmt	(0X3500F40D,	"cchWideChar",	0);
	set_cmt	(0X3500F40E,	"lpWideCharStr",	0);
	set_cmt	(0X3500F40F,	"cbMultiByte",	0);
	create_insn	(x=0X3500F40F);
	op_stkvar	(x,	0);
	set_cmt	(0X3500F415,	"lpMultiByteStr",	0);
	create_insn	(x=0X3500F415);
	op_stkvar	(x,	0);
	set_cmt	(0X3500F41F,	"dwFlags",	0);
	set_cmt	(0X3500F420,	"CodePage",	0);
	create_insn	(x=0X3500F427);
	op_stkvar	(x,	0);
	create_insn	(0X3500F46C);
	set_cmt	(0X3500F472,	"Size",	0);
	create_insn	(0X3500F48A);
	create_insn	(x=0X3500F498);
	op_hex		(x,	1);
	set_cmt	(0X3500F49B,	"cchWideChar",	0);
	create_insn	(x=0X3500F49B);
	op_stkvar	(x,	0);
	set_cmt	(0X3500F49E,	"lpWideCharStr",	0);
	set_cmt	(0X3500F49F,	"cbMultiByte",	0);
	create_insn	(x=0X3500F49F);
	op_stkvar	(x,	0);
	set_cmt	(0X3500F4A2,	"lpMultiByteStr",	0);
	create_insn	(x=0X3500F4A2);
	op_stkvar	(x,	0);
	set_cmt	(0X3500F4A5,	"dwFlags",	0);
	set_cmt	(0X3500F4A7,	"CodePage",	0);
	create_insn	(x=0X3500F4A7);
	op_stkvar	(x,	0);
	set_cmt	(0X3500F4B4,	"lpCharType",	0);
	create_insn	(x=0X3500F4B4);
	op_stkvar	(x,	0);
	set_cmt	(0X3500F4B7,	"cchSrc",	0);
	set_cmt	(0X3500F4B8,	"lpSrcStr",	0);
	set_cmt	(0X3500F4B9,	"dwInfoType",	0);
	create_insn	(x=0X3500F4B9);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500F4CB);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500F4D1);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500F4D4);
	op_hex		(x,	1);
	create_insn	(x=0X3500F4E3);
	op_stkvar	(x,	1);
	set_cmt	(0X3500F4E6,	"StackCookie",	0);
	create_insn	(0X3500F4F1);
	set_name	(0X3500F4F1,	"___acrt_add_locale_ref");
	create_insn	(x=0X3500F4F6);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500F535);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X3500F56E);
	set_name	(0X3500F56E,	"___acrt_free_locale");
	create_insn	(x=0X3500F576);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500F584);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X3500F5A6,	"Block",	0);
	set_cmt	(0X3500F5C8,	"Block",	0);
	set_cmt	(0X3500F5DB,	"Block",	0);
	set_cmt	(0X3500F5E3,	"Block",	0);
	set_cmt	(0X3500F60A,	"Block",	0);
	set_cmt	(0X3500F61D,	"Block",	0);
	set_cmt	(0X3500F62B,	"Block",	0);
	set_cmt	(0X3500F631,	"Block",	0);
	create_insn	(x=0X3500F63C);
	op_hex		(x,	1);
	set_cmt	(0X3500F63F,	"Block",	0);
	create_insn	(x=0X3500F654);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500F65A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X3500F66E,	"Block",	0);
	set_cmt	(0X3500F674,	"Block",	0);
	create_insn	(x=0X3500F67D);
	op_stkvar	(x,	1);
	set_cmt	(0X3500F692,	"Block",	0);
	create_insn	(x=0X3500F699);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500F6A5);
	op_stkvar	(x,	0);
	set_cmt	(0X3500F6AA,	"Block",	0);
	create_insn	(0X3500F6B8);
	set_name	(0X3500F6B8,	"___acrt_locale_add_lc_time_reference");
	create_insn	(x=0X3500F6BD);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500F6C4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X3500F6DA);
	create_insn	(0X3500F6E1);
	set_name	(0X3500F6E1,	"___acrt_locale_free_lc_time_if_unreferenced");
	create_insn	(x=0X3500F6E7);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500F6EE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X3500F700,	"void **",	0);
	set_cmt	(0X3500F706,	"Block",	0);
	create_insn	(0X3500F711);
	set_name	(0X3500F711,	"___acrt_locale_release_lc_time_reference");
	create_insn	(x=0X3500F716);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500F71D);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X3500F725);
	op_hex		(x,	1);
	create_insn	(0X3500F733);
	create_insn	(0X3500F73A);
	set_name	(0X3500F73A,	"___acrt_release_locale_ref");
	create_insn	(x=0X3500F73F);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500F782);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X3500F7BB);
	set_name	(0X3500F7BB,	"___acrt_update_thread_locale_data");
	create_insn	(x=0X3500F7BD);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X3500F7C7);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0X3500F7EF);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0X3500F806);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500F809);
	op_stkvar	(x,	0);
	create_insn	(0X3500F815);
	create_insn	(x=0X3500F81E);
	op_stkvar	(x,	1);
	create_insn	(0X3500F82A);
	create_insn	(0X3500F832);
	set_name	(0X3500F832,	"__updatetlocinfoEx_nolock");
	create_insn	(x=0X3500F838);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500F840);
	op_stkvar	(x,	1);
	create_insn	(0X3500F851);
	create_insn	(x=0X3500F86B);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X3500F873,	"Block",	0);
	create_insn	(0X3500F87C);
	create_insn	(0X3500F882);
	set_name	(0X3500F882,	"__recalloc");
	create_insn	(0X3500F88D);
	set_name	(0X3500F88D,	"__recalloc_base");
	create_insn	(x=0X3500F893);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500F8A1);
	op_stkvar	(x,	1);
	create_insn	(0X3500F8B5);
	create_insn	(x=0X3500F8B6);
	op_stkvar	(x,	1);
	set_cmt	(0X3500F8BE,	"Block",	0);
	create_insn	(0X3500F8C9);
	create_insn	(x=0X3500F8CB);
	op_stkvar	(x,	1);
	set_cmt	(0X3500F8CF,	"Size",	0);
	set_cmt	(0X3500F8D0,	"Block",	0);
	create_insn	(x=0X3500F8F0);
	op_hex		(x,	1);
	create_insn	(0X3500F8FA);
	set_name	(0X3500F8FA,	"___acrt_initialize_heap");
	create_insn	(x=0X3500F90B);
	op_hex		(x,	1);
	create_insn	(0X3500F915);
	set_name	(0X3500F915,	"___acrt_execute_initializers");
	create_insn	(x=0X3500F922);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500F926);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500F929);
	op_stkvar	(x,	1);
	create_insn	(0X3500F932);
	create_insn	(x=0X3500F94D);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500F952);
	op_stkvar	(x,	1);
	create_insn	(0X3500F95B);
	create_insn	(x=0X3500F989);
	op_stkvar	(x,	1);
	set_cmt	(0X3500F98C,	"StackCookie",	0);
	create_insn	(0X3500F998);
	set_name	(0X3500F998,	"___acrt_execute_uninitializers");
	create_insn	(x=0X3500F9A5);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500F9A9);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500F9AC);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500F9CE);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500F9D4);
	op_stkvar	(x,	1);
	set_cmt	(0X3500F9D9,	"StackCookie",	0);
	create_insn	(0X3500F9E5);
	create_insn	(x=0X3500F9EA);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500F9ED);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X3500F9F9);
	set_name	(0X3500F9F9,	"__callnewh");
	create_insn	(x=0X3500FA06);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500FA15);
	op_stkvar	(x,	0);
	create_insn	(0X3500FA2C);
	create_insn	(x=0X3500FA2E);
	op_stkvar	(x,	1);
	set_cmt	(0X3500FA31,	"StackCookie",	0);
	create_insn	(0X3500FA3D);
	set_name	(0X3500FA3D,	"__query_new_handler");
	create_insn	(x=0X3500FA3F);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X3500FA49);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0X3500FA55);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0X3500FA61);
	op_hex		(x,	1);
	create_insn	(x=0X3500FA6C);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500FA6F);
	op_stkvar	(x,	0);
	create_insn	(0X3500FA7B);
	create_insn	(x=0X3500FA83);
	op_stkvar	(x,	1);
	create_insn	(0X3500FA8F);
	set_name	(0X3500FA8F,	"??$?RV_lambda_a048d3beccc847880fc8490e18b82769_@@AAV_lambda_ec61778202f4f5fc7e7711acc23c3bca_@@V_lambda_f7496a158712204296dd6628a163878e_@@@?$__crt_seh_guarded_call@P6AXH@Z@@QAEP6AXH@Z$$QAV_lambda_a048d3beccc847880fc8490e18b82769_@@AAV_lambda_ec61778202f4f5fc7e7711acc23c3bca_@@$$QAV_lambda_f7496a158712204296dd6628a163878e_@@@Z");
	create_insn	(x=0X3500FA91);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X3500FA9B);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0X3500FA9F);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500FAAA);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0X3500FAB6);
	op_hex		(x,	1);
	create_insn	(x=0X3500FAC1);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500FAC4);
	op_stkvar	(x,	0);
	create_insn	(0X3500FAD0);
	create_insn	(x=0X3500FADA);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500FADD);
	op_stkvar	(x,	1);
	create_insn	(0X3500FAE9);
	create_insn	(x=0X3500FAEE);
	op_hex		(x,	1);
	create_insn	(x=0X3500FAF1);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500FAF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500FAF7);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500FAFA);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500FAFD);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500FB01);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500FB04);
	op_stkvar	(x,	1);
	create_insn	(0X3500FB11);
	set_name	(0X3500FB11,	"?get_global_action_nolock@@YAPAP6AXH@ZH@Z");
	create_insn	(x=0X3500FB16);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500FB37);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X3500FB3E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X3500FB45);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X3500FB4C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X3500FB53);
	set_name	(0X3500FB53,	"?siglookup@@YAPAU__crt_signal_action_t@@HQAU1@@Z");
	create_insn	(x=0X3500FB5F);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500FB68);
	op_stkvar	(x,	1);
	create_insn	(0X3500FB7B);
	set_name	(0X3500FB7B,	"___acrt_get_sigabrt_handler");
	create_insn	(x=0X3500FB81);
	op_stkvar	(x,	1);
	create_insn	(0X3500FB92);
	set_name	(0X3500FB92,	"___acrt_initialize_signal_handlers");
	create_insn	(x=0X3500FB97);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500FB9A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X3500FBA4);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500FBA7);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X3500FBB1);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500FBB4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X3500FBBE);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500FBC1);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X3500FBCD);
	set_name	(0X3500FBCD,	"___fpecode");
	create_insn	(0X3500FBD6);
	set_name	(0X3500FBD6,	"_raise");
	create_insn	(x=0X3500FBD8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X3500FBE4);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500FBE7);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500FBEC);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500FBEF);
	op_stkvar	(x,	1);
	create_insn	(0X3500FC11);
	set_cmt	(0X3500FC25,	"int",	0);
	create_insn	(x=0X3500FC2B);
	op_hex		(x,	1);
	create_insn	(0X3500FC30);
	create_insn	(x=0X3500FC37);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500FC3E);
	op_hex		(x,	1);
	set_cmt	(0X3500FC46,	"struct __crt_signal_action_t *",	0);
	create_insn	(0X3500FC46);
	set_cmt	(0X3500FC48,	"int",	0);
	create_insn	(0X3500FC6D);
	create_insn	(x=0X3500FC72);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500FC75);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500FC78);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0X3500FC88);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500FC8B);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0X3500FC8F);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500FC93);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0X3500FC97);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500FCA6);
	op_hex		(x,	1);
	create_insn	(x=0X3500FCAD);
	op_stkvar	(x,	1);
	create_insn	(0X3500FCB2);
	create_insn	(x=0X3500FCB6);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500FCC1);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500FCC4);
	op_stkvar	(x,	0);
	set_cmt	(0X3500FCDF,	"Code",	0);
	create_insn	(0X3500FCE6);
	create_insn	(x=0X3500FCF7);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500FCFA);
	op_hex		(x,	1);
	create_insn	(x=0X3500FD09);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500FD2D);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500FD34);
	op_hex		(x,	1);
	create_insn	(0X3500FD3D);
	create_insn	(x=0X3500FD42);
	op_hex		(x,	1);
	create_insn	(x=0X3500FD54);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500FD59);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500FD65);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500FD78);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500FD81);
	op_stkvar	(x,	0);
	create_insn	(0X3500FD87);
	create_insn	(x=0X3500FD8A);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500FD8D);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500FD90);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500FD93);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500FD96);
	op_stkvar	(x,	0);
	create_insn	(0X3500FDA5);
	create_insn	(x=0X3500FDA6);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500FDAF);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500FDC1);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500FDD0);
	op_stkvar	(x,	1);
	create_insn	(0X3500FDDE);
	set_name	(0X3500FDDE,	"___hw_cw_sse2");
	create_insn	(x=0X3500FDE3);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500FDE8);
	op_hex		(x,	1);
	create_insn	(x=0X3500FDFA);
	op_hex		(x,	1);
	create_insn	(x=0X3500FE01);
	op_hex		(x,	1);
	create_insn	(x=0X3500FE06);
	op_hex		(x,	1);
	create_insn	(x=0X3500FE0B);
	op_hex		(x,	1);
	create_insn	(x=0X3500FE10);
	op_hex		(x,	1);
	create_insn	(x=0X3500FE15);
	op_hex		(x,	1);
	create_insn	(x=0X3500FE1A);
	op_hex		(x,	1);
	create_insn	(x=0X3500FE24);
	op_hex		(x,	1);
	create_insn	(x=0X3500FE45);
	op_hex		(x,	1);
	create_insn	(x=0X3500FE4C);
	op_hex		(x,	1);
	create_insn	(x=0X3500FE53);
	op_hex		(x,	1);
	create_insn	(x=0X3500FE76);
	op_hex		(x,	1);
	create_insn	(x=0X3500FE7D);
	op_hex		(x,	1);
	create_insn	(x=0X3500FE82);
	op_hex		(x,	1);
	create_insn	(0X3500FE89);
	set_name	(0X3500FE89,	"__control87");
	create_insn	(x=0X3500FE8E);
	op_hex		(x,	1);
	create_insn	(x=0X3500FE91);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500FE95);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500FE9B);
	op_hex		(x,	1);
	create_insn	(x=0X3500FEA2);
	op_hex		(x,	1);
	create_insn	(x=0X3500FEA6);
	op_hex		(x,	1);
	create_insn	(x=0X3500FEA9);
	op_hex		(x,	1);
	create_insn	(x=0X3500FEAD);
	op_hex		(x,	1);
	create_insn	(x=0X3500FEB0);
	op_hex		(x,	1);
	create_insn	(x=0X3500FEB4);
	op_hex		(x,	1);
	create_insn	(x=0X3500FEB7);
	op_hex		(x,	1);
	create_insn	(x=0X3500FEBB);
	op_hex		(x,	1);
	create_insn	(x=0X3500FEBE);
	op_hex		(x,	1);
	create_insn	(x=0X3500FEC2);
	op_hex		(x,	1);
	create_insn	(x=0X3500FEF2);
	op_hex		(x,	1);
	create_insn	(0X3500FEFA);
	create_insn	(x=0X3500FEFE);
	op_hex		(x,	1);
	create_insn	(x=0X3500FF04);
	op_hex		(x,	1);
	create_insn	(x=0X3500FF10);
	op_hex		(x,	1);
	create_insn	(x=0X3500FF18);
	op_hex		(x,	1);
	create_insn	(x=0X3500FF28);
	op_hex		(x,	1);
	create_insn	(x=0X3500FF2E);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500FF33);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500FF4D);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500FF51);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500FF54);
	op_stkvar	(x,	0);
	create_insn	(x=0X3500FF58);
	op_stkvar	(x,	1);
	create_insn	(x=0X3500FF5E);
	op_hex		(x,	1);
	create_insn	(x=0X3500FF65);
	op_hex		(x,	1);
	create_insn	(x=0X3500FF69);
	op_hex		(x,	1);
	create_insn	(x=0X3500FF6C);
	op_hex		(x,	1);
	create_insn	(x=0X3500FF70);
	op_hex		(x,	1);
	create_insn	(x=0X3500FF73);
	op_hex		(x,	1);
	create_insn	(x=0X3500FF77);
	op_hex		(x,	1);
	create_insn	(x=0X3500FF7A);
	op_hex		(x,	1);
	create_insn	(x=0X3500FF7E);
	op_hex		(x,	1);
	create_insn	(x=0X3500FF81);
	op_hex		(x,	1);
	create_insn	(x=0X3500FF85);
	op_hex		(x,	1);
	create_insn	(x=0X3500FFA8);
	op_hex		(x,	1);
	create_insn	(x=0X3500FFB0);
	op_hex		(x,	1);
	create_insn	(x=0X3500FFB8);
	op_hex		(x,	1);
	create_insn	(x=0X3500FFBE);
	op_hex		(x,	1);
	create_insn	(x=0X3500FFCE);
	op_hex		(x,	1);
	create_insn	(x=0X3500FFD6);
	op_hex		(x,	1);
	create_insn	(x=0X3500FFE6);
	op_hex		(x,	1);
	create_insn	(x=0X3500FFF9);
	op_hex		(x,	1);
	create_insn	(x=0X3500FFFF);
	op_stkvar	(x,	0);
	create_insn	(x=0X35010003);
	op_stkvar	(x,	1);
	create_insn	(x=0X3501000F);
	op_hex		(x,	1);
	create_insn	(x=0X35010016);
	op_hex		(x,	1);
	create_insn	(x=0X35010019);
	op_hex		(x,	1);
	create_insn	(x=0X35010020);
	op_hex		(x,	1);
	create_insn	(x=0X35010023);
	op_hex		(x,	1);
	create_insn	(x=0X3501002A);
	op_hex		(x,	1);
	create_insn	(x=0X35010031);
	op_hex		(x,	1);
	create_insn	(x=0X35010034);
	op_hex		(x,	1);
	create_insn	(x=0X3501003B);
	op_hex		(x,	1);
	create_insn	(x=0X35010060);
	op_hex		(x,	1);
	create_insn	(x=0X35010068);
	op_hex		(x,	1);
	create_insn	(x=0X35010070);
	op_hex		(x,	1);
	create_insn	(x=0X35010078);
	op_hex		(x,	1);
	create_insn	(x=0X3501008D);
	op_hex		(x,	1);
	create_insn	(x=0X35010095);
	op_hex		(x,	1);
	create_insn	(x=0X3501009D);
	op_hex		(x,	1);
	create_insn	(x=0X350100A5);
	op_stkvar	(x,	1);
	create_insn	(x=0X350100BD);
	op_stkvar	(x,	0);
	create_insn	(x=0X350100C7);
	op_stkvar	(x,	0);
	create_insn	(x=0X350100CB);
	op_stkvar	(x,	1);
	create_insn	(x=0X350100D7);
	op_hex		(x,	1);
	create_insn	(x=0X350100DE);
	op_hex		(x,	1);
	create_insn	(x=0X350100E1);
	op_hex		(x,	1);
	create_insn	(x=0X350100E8);
	op_hex		(x,	1);
	create_insn	(x=0X350100EB);
	op_hex		(x,	1);
	create_insn	(x=0X350100F2);
	op_hex		(x,	1);
	create_insn	(x=0X350100F5);
	op_hex		(x,	1);
	create_insn	(x=0X350100FC);
	op_hex		(x,	1);
	create_insn	(x=0X350100FF);
	op_hex		(x,	1);
	create_insn	(x=0X35010106);
	op_hex		(x,	1);
	create_insn	(x=0X3501012B);
	op_hex		(x,	1);
	create_insn	(x=0X35010133);
	op_hex		(x,	1);
	create_insn	(x=0X3501013B);
	op_hex		(x,	1);
	create_insn	(x=0X35010141);
	op_hex		(x,	1);
	create_insn	(x=0X35010155);
	op_hex		(x,	1);
	create_insn	(x=0X3501015D);
	op_hex		(x,	1);
	create_insn	(x=0X35010165);
	op_hex		(x,	1);
	create_insn	(x=0X35010171);
	op_hex		(x,	1);
	create_insn	(x=0X35010178);
	op_hex		(x,	1);
	create_insn	(0X35010182);
	create_insn	(0X3501018B);
	set_name	(0X3501018B,	"__hw_cw");
	create_insn	(x=0X35010190);
	op_stkvar	(x,	1);
	create_insn	(x=0X35010195);
	op_hex		(x,	1);
	create_insn	(x=0X3501019B);
	op_hex		(x,	1);
	create_insn	(x=0X350101A0);
	op_hex		(x,	1);
	create_insn	(x=0X350101A3);
	op_hex		(x,	1);
	create_insn	(x=0X350101A8);
	op_hex		(x,	1);
	create_insn	(x=0X350101AB);
	op_hex		(x,	1);
	create_insn	(x=0X350101B0);
	op_hex		(x,	1);
	create_insn	(x=0X350101B3);
	op_hex		(x,	1);
	create_insn	(x=0X350101B8);
	op_hex		(x,	1);
	create_insn	(x=0X350101BB);
	op_hex		(x,	1);
	create_insn	(x=0X350101C3);
	op_hex		(x,	1);
	create_insn	(x=0X350101E8);
	op_hex		(x,	1);
	create_insn	(x=0X350101EF);
	op_hex		(x,	1);
	create_insn	(x=0X350101F6);
	op_hex		(x,	1);
	create_insn	(x=0X350101FD);
	op_hex		(x,	1);
	create_insn	(0X35010211);
	create_insn	(x=0X35010215);
	op_hex		(x,	1);
	create_insn	(x=0X3501021D);
	op_hex		(x,	1);
	create_insn	(0X35010224);
	set_name	(0X35010224,	"__mbtowc_l");
	create_insn	(x=0X35010229);
	op_hex		(x,	1);
	create_insn	(x=0X3501022E);
	op_stkvar	(x,	1);
	create_insn	(x=0X35010235);
	op_stkvar	(x,	1);
	create_insn	(x=0X35010241);
	op_stkvar	(x,	1);
	create_insn	(0X35010255);
	set_cmt	(0X35010256,	"struct __crt_locale_pointers *",	0);
	create_insn	(x=0X35010256);
	op_stkvar	(x,	0);
	set_cmt	(0X35010259,	"this",	0);
	create_insn	(x=0X35010259);
	op_stkvar	(x,	1);
	create_insn	(x=0X35010261);
	op_stkvar	(x,	1);
	create_insn	(x=0X3501026D);
	op_stkvar	(x,	1);
	create_insn	(x=0X35010282);
	op_stkvar	(x,	1);
	set_cmt	(0X35010285,	"Locale",	0);
	set_cmt	(0X35010289,	"C",	0);
	create_insn	(x=0X35010295);
	op_stkvar	(x,	1);
	create_insn	(x=0X350102A5);
	op_stkvar	(x,	0);
	set_cmt	(0X350102AB,	"cchWideChar",	0);
	set_cmt	(0X350102AC,	"lpWideCharStr",	0);
	create_insn	(x=0X350102AC);
	op_stkvar	(x,	0);
	set_cmt	(0X350102AF,	"cbMultiByte",	0);
	set_cmt	(0X350102B2,	"lpMultiByteStr",	0);
	set_cmt	(0X350102B3,	"dwFlags",	0);
	set_cmt	(0X350102B5,	"CodePage",	0);
	create_insn	(x=0X350102BE);
	op_stkvar	(x,	1);
	create_insn	(0X350102D5);
	create_insn	(x=0X350102D7);
	op_stkvar	(x,	0);
	set_cmt	(0X350102DF,	"cchWideChar",	0);
	set_cmt	(0X350102E0,	"lpWideCharStr",	0);
	create_insn	(x=0X350102E0);
	op_stkvar	(x,	0);
	create_insn	(x=0X350102E3);
	op_stkvar	(x,	1);
	set_cmt	(0X350102E7,	"cbMultiByte",	0);
	set_cmt	(0X350102E8,	"lpMultiByteStr",	0);
	set_cmt	(0X350102E9,	"dwFlags",	0);
	set_cmt	(0X350102EB,	"CodePage",	0);
	create_insn	(x=0X350102FD);
	op_hex		(x,	1);
	create_insn	(x=0X35010306);
	op_stkvar	(x,	0);
	create_insn	(x=0X3501030C);
	op_stkvar	(x,	1);
	create_insn	(x=0X3501030F);
	op_hex		(x,	1);
	create_insn	(0X3501031E);
	set_name	(0X3501031E,	"_mbtowc");
	set_cmt	(0X35010323,	"Locale",	0);
	set_cmt	(0X35010325,	"SrcSizeInBytes",	0);
	create_insn	(x=0X35010325);
	op_stkvar	(x,	0);
	set_cmt	(0X35010328,	"SrcCh",	0);
	create_insn	(x=0X35010328);
	op_stkvar	(x,	0);
	set_cmt	(0X3501032B,	"DstCh",	0);
	create_insn	(x=0X3501032B);
	op_stkvar	(x,	0);
	create_insn	(x=0X35010333);
	op_hex		(x,	1);
	create_insn	(0X35010338);
	set_name	(0X35010338,	"__fileno");
	create_insn	(x=0X3501033D);
	op_stkvar	(x,	1);
	create_insn	(x=0X35010354);
	op_hex		(x,	1);
	create_insn	(0X35010359);
	create_insn	(0X3501035E);
	set_name	(0X3501035E,	"___acrt_initialize_stdio");
	create_insn	(0X35010372);
	set_cmt	(0X3501037D,	"Size",	0);
	set_cmt	(0X3501037F,	"Count",	0);
	set_cmt	(0X35010385,	"Block",	0);
	create_insn	(x=0X35010391);
	op_hex		(x,	1);
	set_cmt	(0X3501039D,	"Size",	0);
	set_cmt	(0X3501039F,	"Count",	0);
	set_cmt	(0X350103AB,	"Block",	0);
	create_insn	(x=0X350103B7);
	op_hex		(x,	1);
	create_insn	(x=0X350103C3);
	op_hex		(x,	1);
	create_insn	(0X350103C8);
	create_insn	(x=0X350103CB);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X350103D0,	"int",	0);
	set_cmt	(0X350103D2,	"dwSpinCount",	0);
	set_cmt	(0X350103DA,	"lpCriticalSection",	0);
	create_insn	(x=0X350103E7);
	op_hex		(x,	1);
	create_insn	(x=0X350103EF);
	op_hex		(x,	1);
	create_insn	(x=0X35010419);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X35010426);
	set_name	(0X35010426,	"___acrt_uninitialize_stdio");
	set_cmt	(0X3501044E,	"lpCriticalSection",	0);
	set_cmt	(0X3501045D,	"Block",	0);
	create_insn	(x=0X35010468);
	op_hex		(x,	1);
	create_insn	(0X35010472);
	set_name	(0X35010472,	"__lock_file");
	create_insn	(x=0X35010477);
	op_stkvar	(x,	1);
	set_cmt	(0X3501047D,	"lpCriticalSection",	0);
	create_insn	(0X35010486);
	set_name	(0X35010486,	"__unlock_file");
	create_insn	(x=0X3501048B);
	op_stkvar	(x,	1);
	set_cmt	(0X35010491,	"lpCriticalSection",	0);
	create_insn	(0X3501049A);
	set_name	(0X3501049A,	"___strncnt");
	create_insn	(x=0X3501049F);
	op_stkvar	(x,	1);
	create_insn	(x=0X350104A8);
	op_stkvar	(x,	1);
	create_insn	(0X350104B6);
	set_name	(0X350104B6,	"?GetTableIndexFromLocaleName@@YAHPB_W@Z");
	create_insn	(x=0X350104BB);
	op_hex		(x,	1);
	create_insn	(x=0X350104C8);
	op_stkvar	(x,	0);
	create_insn	(x=0X350104CB);
	op_stkvar	(x,	0);
	create_insn	(x=0X350104D1);
	op_stkvar	(x,	0);
	create_insn	(x=0X350104DD);
	op_hex		(x,	1);
	create_insn	(x=0X350104E2);
	op_stkvar	(x,	0);
	create_insn	(x=0X350104EC);
	op_stkvar	(x,	1);
	create_insn	(0X3501050A);
	create_insn	(x=0X35010522);
	op_stkvar	(x,	0);
	create_insn	(x=0X35010532);
	op_stkvar	(x,	1);
	create_insn	(x=0X35010535);
	op_stkvar	(x,	1);
	create_insn	(x=0X35010538);
	op_stkvar	(x,	1);
	create_insn	(x=0X3501054C);
	op_stkvar	(x,	0);
	create_insn	(0X35010551);
	create_insn	(x=0X35010554);
	op_stkvar	(x,	0);
	create_insn	(x=0X3501055F);
	op_hex		(x,	1);
	create_insn	(0X35010564);
	create_insn	(0X35010572);
	set_name	(0X35010572,	"___acrt_DownlevelLocaleNameToLCID");
	set_name	(0X35010574,	"___crtDownlevelLocaleNameToLCID");
	create_insn	(x=0X35010577);
	op_stkvar	(x,	0);
	set_cmt	(0X3501057D,	"wchar_t *",	0);
	create_insn	(x=0X3501057D);
	op_stkvar	(x,	0);
	create_insn	(0X3501059A);
	make_array	(0X3501059E,	0X2);
	create_insn	(0X350105A0);
	set_name	(0X350105A0,	"?shortsort@@YAXPAD0IP6AHPBX1@Z@Z");
	create_insn	(x=0X350105AD);
	op_stkvar	(x,	0);
	create_insn	(x=0X350105B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X350105B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X350105BB);
	op_stkvar	(x,	1);
	make_array	(0X350105CD,	0X3);
	create_insn	(x=0X350105D0);
	op_stkvar	(x,	1);
	set_cmt	(0X350105D3,	"void *",	0);
	set_cmt	(0X350105D4,	"void *",	0);
	create_insn	(x=0X350105DB);
	op_stkvar	(x,	0);
	create_insn	(x=0X350105DE);
	op_hex		(x,	1);
	create_insn	(x=0X350105E7);
	op_stkvar	(x,	1);
	create_insn	(x=0X350105F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X35010616);
	op_stkvar	(x,	1);
	create_insn	(x=0X35010619);
	op_stkvar	(x,	1);
	create_insn	(x=0X35010627);
	op_stkvar	(x,	1);
	set_cmt	(0X3501062A,	"StackCookie",	0);
	make_array	(0X35010636,	0XA);
	create_insn	(0X35010640);
	set_name	(0X35010640,	"?swap@@YAXPAD0I@Z");
	create_insn	(x=0X35010645);
	op_stkvar	(x,	1);
	create_insn	(x=0X35010649);
	op_stkvar	(x,	1);
	create_insn	(x=0X35010651);
	op_stkvar	(x,	1);
	make_array	(0X35010679,	0X7);
	create_insn	(0X35010680);
	set_name	(0X35010680,	"_qsort");
	create_insn	(x=0X35010685);
	op_hex		(x,	1);
	create_insn	(x=0X35010692);
	op_stkvar	(x,	0);
	create_insn	(x=0X35010695);
	op_stkvar	(x,	1);
	create_insn	(x=0X35010698);
	op_stkvar	(x,	1);
	create_insn	(x=0X3501069B);
	op_stkvar	(x,	0);
	create_insn	(x=0X350106A2);
	op_stkvar	(x,	1);
	create_insn	(x=0X350106A5);
	op_stkvar	(x,	0);
	create_insn	(x=0X350106AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X350106AF);
	op_stkvar	(x,	0);
	create_insn	(x=0X350106CF);
	op_stkvar	(x,	1);
	set_cmt	(0X350106D2,	"StackCookie",	0);
	create_insn	(0X350106DD);
	create_insn	(x=0X350106E5);
	op_stkvar	(x,	0);
	create_insn	(x=0X350106FF);
	op_stkvar	(x,	0);
	set_name	(0X35010705,	"$recurse$137");
	set_cmt	(0X35010715,	"int (__cdecl *)(const void *, const void *)",	0);
	set_cmt	(0X35010716,	"unsigned int",	0);
	set_cmt	(0X35010717,	"char *",	0);
	create_insn	(x=0X35010717);
	op_stkvar	(x,	0);
	set_cmt	(0X3501071D,	"char *",	0);
	create_insn	(x=0X35010723);
	op_hex		(x,	1);
	create_insn	(x=0X3501072B);
	op_hex		(x,	1);
	create_insn	(x=0X35010736);
	op_stkvar	(x,	0);
	create_insn	(x=0X35010744);
	op_hex		(x,	1);
	set_cmt	(0X3501074B,	"unsigned int",	0);
	set_cmt	(0X3501074C,	"char *",	0);
	set_cmt	(0X3501074D,	"char *",	0);
	create_insn	(x=0X3501074D);
	op_stkvar	(x,	0);
	create_insn	(x=0X35010758);
	op_hex		(x,	1);
	create_insn	(x=0X3501075B);
	op_stkvar	(x,	0);
	create_insn	(x=0X35010763);
	op_stkvar	(x,	0);
	create_insn	(x=0X35010771);
	op_hex		(x,	1);
	set_cmt	(0X35010778,	"unsigned int",	0);
	set_cmt	(0X35010779,	"char *",	0);
	create_insn	(x=0X35010779);
	op_stkvar	(x,	0);
	set_cmt	(0X3501077F,	"char *",	0);
	create_insn	(x=0X3501077F);
	op_stkvar	(x,	0);
	create_insn	(x=0X3501078A);
	op_hex		(x,	1);
	create_insn	(x=0X3501078D);
	op_stkvar	(x,	0);
	create_insn	(x=0X3501079E);
	op_hex		(x,	1);
	set_cmt	(0X350107A5,	"unsigned int",	0);
	set_cmt	(0X350107A6,	"char *",	0);
	create_insn	(x=0X350107A6);
	op_stkvar	(x,	0);
	set_cmt	(0X350107AC,	"char *",	0);
	create_insn	(x=0X350107B2);
	op_hex		(x,	1);
	create_insn	(x=0X350107B5);
	op_stkvar	(x,	1);
	create_insn	(x=0X350107BD);
	op_stkvar	(x,	1);
	create_insn	(x=0X350107C3);
	op_stkvar	(x,	1);
	create_insn	(x=0X350107C9);
	op_stkvar	(x,	0);
	create_insn	(x=0X350107D6);
	op_stkvar	(x,	0);
	create_insn	(x=0X350107E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X350107EE);
	op_stkvar	(x,	0);
	create_insn	(x=0X350107F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X350107FA);
	op_hex		(x,	1);
	create_insn	(x=0X35010805);
	op_stkvar	(x,	1);
	create_insn	(x=0X3501080B);
	op_stkvar	(x,	1);
	create_insn	(x=0X35010823);
	op_stkvar	(x,	1);
	create_insn	(x=0X35010829);
	op_hex		(x,	1);
	create_insn	(x=0X3501082E);
	op_stkvar	(x,	1);
	create_insn	(x=0X35010836);
	op_stkvar	(x,	1);
	create_insn	(x=0X3501083C);
	op_stkvar	(x,	0);
	create_insn	(x=0X35010842);
	op_stkvar	(x,	1);
	make_array	(0X3501084A,	0X6);
	create_insn	(x=0X35010850);
	op_stkvar	(x,	1);
	create_insn	(x=0X35010868);
	op_hex		(x,	1);
	create_insn	(x=0X3501086F);
	op_stkvar	(x,	1);
	create_insn	(x=0X35010875);
	op_stkvar	(x,	1);
	create_insn	(x=0X3501087B);
	op_stkvar	(x,	0);
	create_insn	(x=0X35010885);
	op_stkvar	(x,	0);
	create_insn	(x=0X3501088B);
	op_stkvar	(x,	0);
	create_insn	(x=0X35010899);
	op_stkvar	(x,	1);
	create_insn	(x=0X350108B6);
	op_stkvar	(x,	1);
	create_insn	(x=0X350108BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X350108C2);
	op_stkvar	(x,	1);
	create_insn	(x=0X350108C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X350108D8);
	op_stkvar	(x,	0);
	create_insn	(0X350108E3);
	create_insn	(x=0X350108F6);
	op_stkvar	(x,	1);
	create_insn	(x=0X35010904);
	op_stkvar	(x,	0);
	create_insn	(x=0X3501090A);
	op_stkvar	(x,	1);
	create_insn	(x=0X35010910);
	op_hex		(x,	1);
	create_insn	(x=0X3501091B);
	op_stkvar	(x,	1);
	create_insn	(x=0X35010923);
	op_stkvar	(x,	1);
	create_insn	(x=0X35010937);
	op_stkvar	(x,	1);
	create_insn	(x=0X3501093D);
	op_hex		(x,	1);
	create_insn	(x=0X35010944);
	op_stkvar	(x,	1);
	create_insn	(x=0X3501094A);
	op_stkvar	(x,	1);
	create_insn	(x=0X35010952);
	op_stkvar	(x,	1);
	create_insn	(x=0X35010966);
	op_stkvar	(x,	1);
	create_insn	(x=0X3501096C);
	op_stkvar	(x,	0);
	create_insn	(x=0X35010973);
	op_stkvar	(x,	0);
	create_insn	(x=0X35010978);
	op_stkvar	(x,	0);
	create_insn	(x=0X3501097E);
	op_stkvar	(x,	1);
	create_insn	(x=0X3501098A);
	op_stkvar	(x,	1);
	create_insn	(x=0X35010990);
	op_stkvar	(x,	0);
	create_insn	(0X3501099B);
	create_insn	(x=0X3501099F);
	op_stkvar	(x,	1);
	create_insn	(x=0X350109A5);
	op_stkvar	(x,	0);
	create_insn	(x=0X350109AC);
	op_stkvar	(x,	0);
	create_insn	(x=0X350109B1);
	op_stkvar	(x,	0);
	create_insn	(x=0X350109B7);
	op_stkvar	(x,	1);
	create_insn	(x=0X350109BD);
	op_stkvar	(x,	1);
	create_insn	(x=0X350109C9);
	op_stkvar	(x,	1);
	create_insn	(x=0X350109D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X350109DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X350109E2);
	op_stkvar	(x,	1);
	create_insn	(x=0X350109EB);
	op_stkvar	(x,	0);
	create_insn	(x=0X350109F3);
	op_stkvar	(x,	1);
	create_insn	(x=0X350109FA);
	op_stkvar	(x,	1);
	create_insn	(x=0X350109FE);
	op_stkvar	(x,	0);
	create_insn	(0X35010A09);
	create_insn	(x=0X35010A0A);
	op_stkvar	(x,	1);
	set_cmt	(0X35010A0E,	"StackCookie",	0);
	make_array	(0X35010A1A,	0X6);
	create_insn	(0X35010A20);
	set_name	(0X35010A20,	"_strpbrk");
	create_insn	(x=0X35010A2E);
	op_stkvar	(x,	1);
	set_name	(0X35010A34,	"listnext");
	create_insn	(x=0X35010A3D);
	op_stkvar	(x,	0);
	create_insn	(x=0X35010A43);
	op_stkvar	(x,	1);
	set_name	(0X35010A43,	"listdone");
	set_name	(0X35010A48,	"dstnext");
	create_insn	(x=0X35010A51);
	op_stkvar	(x,	0);
	create_insn	(x=0X35010A5A);
	op_hex		(x,	1);
	set_name	(0X35010A5A,	"dstdone");
	create_insn	(0X35010A60);
	set_name	(0X35010A60,	"?initialize_multibyte@@YAHXZ");
	create_insn	(0X35010A6F);
	set_name	(0X35010A6F,	"__msize");
	create_insn	(x=0X35010A74);
	op_stkvar	(x,	0);
	create_insn	(x=0X35010A8A);
	op_hex		(x,	1);
	set_cmt	(0X35010A8F,	"lpMem",	0);
	create_insn	(x=0X35010A8F);
	op_stkvar	(x,	0);
	set_cmt	(0X35010A92,	"dwFlags",	0);
	set_cmt	(0X35010A94,	"hHeap",	0);
	create_insn	(0X35010AA2);
	set_name	(0X35010AA2,	"__realloc_base");
	create_insn	(x=0X35010AA8);
	op_stkvar	(x,	1);
	set_cmt	(0X35010AAF,	"Size",	0);
	create_insn	(x=0X35010AAF);
	op_stkvar	(x,	0);
	create_insn	(0X35010ABA);
	create_insn	(x=0X35010ABB);
	op_stkvar	(x,	1);
	set_cmt	(0X35010AC2,	"Block",	0);
	create_insn	(0X35010ACB);
	create_insn	(0X35010AE1);
	set_cmt	(0X35010AEA,	"Size",	0);
	set_cmt	(0X35010AF5,	"dwBytes",	0);
	set_cmt	(0X35010AF6,	"lpMem",	0);
	set_cmt	(0X35010AF7,	"dwFlags",	0);
	set_cmt	(0X35010AF9,	"hHeap",	0);
	create_insn	(0X35010B0B);
	set_name	(0X35010B0B,	"__isatty");
	create_insn	(x=0X35010B10);
	op_stkvar	(x,	1);
	create_insn	(0X35010B25);
	create_insn	(x=0X35010B33);
	op_hex		(x,	1);
	create_insn	(x=0X35010B36);
	op_hex		(x,	1);
	create_insn	(x=0X35010B48);
	op_hex		(x,	1);
	create_insn	(0X35010B4D);
	create_insn	(0X35010B61);
	set_name	(0X35010B61,	"___acrt_stdio_flush_nolock");
	create_insn	(x=0X35010B66);
	op_stkvar	(x,	1);
	create_insn	(x=0X35010B6F);
	op_hex		(x,	1);
	create_insn	(0X35010B79);
	create_insn	(x=0X35010B7B);
	op_hex		(x,	1);
	create_insn	(x=0X35010B89);
	op_hex		(x,	1);
	set_cmt	(0X35010B91,	"MaxCharCount",	0);
	set_cmt	(0X35010B92,	"Buf",	0);
	set_cmt	(0X35010B93,	"Stream",	0);
	set_cmt	(0X35010B9A,	"FileHandle",	0);
	create_insn	(x=0X35010BA0);
	op_hex		(x,	1);
	create_insn	(x=0X35010BAD);
	op_hex		(x,	1);
	create_insn	(0X35010BB2);
	create_insn	(x=0X35010BB4);
	op_hex		(x,	1);
	create_insn	(x=0X35010BB7);
	op_hex		(x,	1);
	create_insn	(0X35010BC7);
	set_name	(0X35010BC7,	"__fflush_nolock");
	create_insn	(x=0X35010BCD);
	op_stkvar	(x,	1);
	set_cmt	(0X35010BDD,	"Stream",	0);
	create_insn	(0X35010BDD);
	create_insn	(x=0X35010BE8);
	op_hex		(x,	1);
	create_insn	(0X35010BED);
	create_insn	(x=0X35010BF0);
	op_hex		(x,	1);
	create_insn	(x=0X35010BF3);
	op_hex		(x,	1);
	set_cmt	(0X35010BF7,	"Stream",	0);
	set_cmt	(0X35010BFD,	"FileHandle",	0);
	create_insn	(0X35010C0E);
	set_name	(0X35010C0E,	"__flushall");
	create_insn	(0X35010C17);
	set_name	(0X35010C17,	"_common_flush_all");
	create_insn	(x=0X35010C19);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X35010C23);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0X35010C27);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0X35010C33);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0X35010C45);
	op_stkvar	(x,	0);
	create_insn	(x=0X35010C48);
	op_stkvar	(x,	1);
	create_insn	(x=0X35010C4B);
	op_stkvar	(x,	0);
	create_insn	(x=0X35010C54);
	op_stkvar	(x,	0);
	set_cmt	(0X35010C5B,	"Stream",	0);
	create_insn	(x=0X35010C62);
	op_stkvar	(x,	0);
	create_insn	(x=0X35010C6C);
	op_hex		(x,	1);
	create_insn	(x=0X35010C6F);
	op_hex		(x,	1);
	set_cmt	(0X35010C78,	"Stream",	0);
	create_insn	(x=0X35010C84);
	op_stkvar	(x,	0);
	create_insn	(0X35010C89);
	create_insn	(x=0X35010C90);
	op_hex		(x,	1);
	create_insn	(x=0X35010C92);
	op_hex		(x,	1);
	set_cmt	(0X35010C96,	"Stream",	0);
	create_insn	(x=0X35010CA2);
	op_stkvar	(x,	0);
	create_insn	(x=0X35010CA5);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0X35010CAE);
	op_stkvar	(x,	1);
	create_insn	(x=0X35010CB6);
	op_stkvar	(x,	1);
	create_insn	(x=0X35010CB9);
	op_stkvar	(x,	1);
	set_cmt	(0X35010CBC,	"Stream",	0);
	create_insn	(x=0X35010CBC);
	op_stkvar	(x,	0);
	create_insn	(x=0X35010CC6);
	op_stkvar	(x,	0);
	create_insn	(0X35010CD2);
	create_insn	(x=0X35010CD5);
	op_stkvar	(x,	1);
	create_insn	(x=0X35010CDA);
	op_stkvar	(x,	1);
	create_insn	(x=0X35010CE3);
	op_stkvar	(x,	1);
	create_insn	(0X35010CEF);
	set_name	(0X35010CEF,	"___set_fpsr_sse2");
	create_insn	(x=0X35010CF1);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X35010D04);
	op_stkvar	(x,	1);
	create_insn	(x=0X35010D07);
	op_hex		(x,	1);
	create_insn	(x=0X35010D14);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0X35010D18);
	op_stkvar	(x,	0);
	create_insn	(x=0X35010D1E);
	op_stkvar	(x,	1);
	create_insn	(0X35010D36);
	create_insn	(x=0X35010D3A);
	op_stkvar	(x,	1);
	create_insn	(x=0X35010D3D);
	op_hex		(x,	1);
	create_insn	(x=0X35010D44);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0X35010D48);
	op_stkvar	(x,	0);
	create_insn	(x=0X35010D4C);
	op_stkvar	(x,	0);
	create_insn	(x=0X35010D55);
	op_hex		(x,	1);
	create_insn	(x=0X35010D58);
	op_stkvar	(x,	0);
	create_insn	(x=0X35010D5B);
	op_stkvar	(x,	0);
	create_insn	(0X35010D65);
	set_name	(0X35010D65,	"__clrfp");
	create_insn	(x=0X35010D6B);
	op_stkvar	(x,	0);
	create_insn	(x=0X35010D70);
	op_stkvar	(x,	1);
	create_insn	(0X35010D78);
	set_name	(0X35010D78,	"__ctrlfp");
	create_insn	(x=0X35010D7F);
	op_stkvar	(x,	0);
	create_insn	(x=0X35010D83);
	op_stkvar	(x,	1);
	create_insn	(x=0X35010D86);
	op_stkvar	(x,	1);
	create_insn	(x=0X35010D8B);
	op_stkvar	(x,	1);
	create_insn	(x=0X35010D8F);
	op_stkvar	(x,	1);
	create_insn	(x=0X35010D95);
	op_stkvar	(x,	0);
	create_insn	(x=0X35010D99);
	op_stkvar	(x,	0);
	create_insn	(x=0X35010D9C);
	op_stkvar	(x,	1);
	create_insn	(0X35010DA4);
	set_name	(0X35010DA4,	"__set_statfp");
	create_insn	(x=0X35010DA9);
	op_stkvar	(x,	1);
	create_insn	(x=0X35010DAC);
	op_hex		(x,	1);
	create_insn	(x=0X35010DAF);
	op_hex		(x,	1);
	create_insn	(x=0X35010DBA);
	op_stkvar	(x,	1);
	create_insn	(x=0X35010DBE);
	op_hex		(x,	1);
	create_insn	(x=0X35010DCC);
	op_stkvar	(x,	1);
	create_insn	(x=0X35010DD3);
	op_hex		(x,	1);
	create_insn	(x=0X35010DDE);
	op_stkvar	(x,	1);
	create_insn	(x=0X35010DE2);
	op_hex		(x,	1);
	create_insn	(x=0X35010DF0);
	op_hex		(x,	1);
	create_insn	(x=0X35010DF7);
	op_stkvar	(x,	1);
	create_insn	(0X35010DFF);
	set_name	(0X35010DFF,	"__statfp");
	create_insn	(x=0X35010E05);
	op_stkvar	(x,	0);
	create_insn	(x=0X35010E09);
	op_stkvar	(x,	1);
	create_insn	(0X35010E11);
	set_name	(0X35010E11,	"__fcloseall");
	create_insn	(x=0X35010E13);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X35010E1D);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0X35010E29);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0X35010E30);
	op_stkvar	(x,	0);
	create_insn	(x=0X35010E4A);
	op_hex		(x,	1);
	create_insn	(x=0X35010E4D);
	op_hex		(x,	1);
	set_cmt	(0X35010E56,	"Stream",	0);
	create_insn	(x=0X35010E64);
	op_stkvar	(x,	0);
	set_cmt	(0X35010E72,	"lpCriticalSection",	0);
	set_cmt	(0X35010E7E,	"Block",	0);
	create_insn	(x=0X35010E8C);
	op_hex		(x,	1);
	create_insn	(x=0X35010E93);
	op_stkvar	(x,	0);
	create_insn	(x=0X35010E9F);
	op_stkvar	(x,	1);
	create_insn	(0X35010EA8);
	create_insn	(0X35010EB1);
	set_name	(0X35010EB1,	"___acrt_stdio_free_buffer_nolock");
	create_insn	(x=0X35010EB7);
	op_stkvar	(x,	1);
	create_insn	(x=0X35010EC0);
	op_hex		(x,	1);
	create_insn	(x=0X35010EC3);
	op_hex		(x,	1);
	create_insn	(x=0X35010EC9);
	op_hex		(x,	1);
	create_insn	(x=0X35010ECC);
	op_hex		(x,	1);
	set_cmt	(0X35010ED0,	"Block",	0);
	create_insn	(0X35010EEF);
	set_name	(0X35010EEF,	"??$?RV_lambda_61cee617f5178ae960314fd4d05640a0_@@AAV_lambda_6978c1fb23f02e42e1d9e99668cc68aa_@@V_lambda_9cd88cf8ad10232537feb2133f08c833_@@@?$__crt_seh_guarded_call@H@@QAEH$$QAV_lambda_61cee617f5178ae960314fd4d05640a0_@@AAV_lambda_6978c1fb23f02e42e1d9e99668cc68aa_@@$$QAV_lambda_9cd88cf8ad10232537feb2133f08c833_@@@Z");
	create_insn	(x=0X35010EF1);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X35010EFD);
	op_stkvar	(x,	0);
	create_insn	(x=0X35010F00);
	op_stkvar	(x,	1);
	create_insn	(x=0X35010F0B);
	op_stkvar	(x,	0);
	create_insn	(x=0X35010F0E);
	op_stkvar	(x,	1);
	create_insn	(x=0X35010F17);
	op_hex		(x,	1);
	create_insn	(x=0X35010F1C);
	op_hex		(x,	1);
	create_insn	(x=0X35010F29);
	op_hex		(x,	1);
	set_cmt	(0X35010F30,	"FileHandle",	0);
	set_cmt	(0X35010F37,	"hFile",	0);
	create_insn	(x=0X35010F5C);
	op_hex		(x,	1);
	create_insn	(x=0X35010F5F);
	op_stkvar	(x,	0);
	create_insn	(x=0X35010F62);
	op_stkvar	(x,	0);
	create_insn	(0X35010F6E);
	create_insn	(x=0X35010F78);
	op_stkvar	(x,	1);
	create_insn	(x=0X35010F7B);
	op_stkvar	(x,	1);
	create_insn	(0X35010F87);
	create_insn	(x=0X35010F8C);
	op_hex		(x,	1);
	create_insn	(x=0X35010F8F);
	op_stkvar	(x,	1);
	create_insn	(x=0X35010F92);
	op_stkvar	(x,	1);
	create_insn	(x=0X35010F95);
	op_stkvar	(x,	0);
	create_insn	(x=0X35010F98);
	op_stkvar	(x,	0);
	create_insn	(x=0X35010F9B);
	op_stkvar	(x,	1);
	create_insn	(x=0X35010F9F);
	op_stkvar	(x,	0);
	create_insn	(x=0X35010FA2);
	op_stkvar	(x,	1);
	create_insn	(0X35010FAF);
	set_name	(0X35010FAF,	"__commit");
	create_insn	(x=0X35010FB6);
	op_stkvar	(x,	1);
	create_insn	(0X35010FCB);
	create_insn	(x=0X35010FDB);
	op_hex		(x,	1);
	create_insn	(x=0X35010FDE);
	op_hex		(x,	1);
	create_insn	(x=0X35010FEB);
	op_hex		(x,	1);
	create_insn	(x=0X35010FF2);
	op_stkvar	(x,	1);
	create_insn	(x=0X35010FF5);
	op_stkvar	(x,	0);
	create_insn	(x=0X35010FF8);
	op_stkvar	(x,	1);
	create_insn	(0X35011006);
	create_insn	(x=0X35011016);
	op_hex		(x,	1);
	create_insn	(0X3501101E);
	set_name	(0X3501101E,	"?write_double_translated_ansi_nolock@@YA?AUwrite_result@?A0x4add88c5@@HQBDI@Z");
	create_insn	(x=0X35011023);
	op_hex		(x,	1);
	create_insn	(x=0X3501102D);
	op_stkvar	(x,	0);
	create_insn	(x=0X35011030);
	op_stkvar	(x,	1);
	create_insn	(x=0X35011035);
	op_hex		(x,	1);
	create_insn	(x=0X35011038);
	op_hex		(x,	1);
	create_insn	(x=0X35011048);
	op_stkvar	(x,	1);
	create_insn	(x=0X3501104B);
	op_stkvar	(x,	0);
	create_insn	(x=0X3501104E);
	op_stkvar	(x,	0);
	create_insn	(x=0X35011055);
	op_stkvar	(x,	0);
	create_insn	(x=0X35011058);
	op_stkvar	(x,	1);
	create_insn	(x=0X3501105D);
	op_stkvar	(x,	0);
	create_insn	(x=0X35011066);
	op_stkvar	(x,	1);
	create_insn	(x=0X35011069);
	op_stkvar	(x,	1);
	create_insn	(x=0X3501106C);
	op_stkvar	(x,	0);
	create_insn	(x=0X35011085);
	op_stkvar	(x,	0);
	create_insn	(x=0X35011089);
	op_stkvar	(x,	1);
	create_insn	(x=0X3501108C);
	op_stkvar	(x,	0);
	create_insn	(x=0X3501109A);
	op_hex		(x,	1);
	create_insn	(x=0X350110A3);
	op_hex		(x,	1);
	create_insn	(x=0X350110A6);
	op_stkvar	(x,	0);
	create_insn	(x=0X350110A9);
	op_stkvar	(x,	1);
	create_insn	(x=0X350110AE);
	op_stkvar	(x,	0);
	create_insn	(0X350110B8);
	create_insn	(x=0X350110CB);
	op_stkvar	(x,	1);
	set_cmt	(0X350110D4,	"SrcSizeInBytes",	0);
	create_insn	(x=0X350110D6);
	op_stkvar	(x,	1);
	set_cmt	(0X350110D9,	"SrcCh",	0);
	set_cmt	(0X350110DA,	"DstCh",	0);
	create_insn	(x=0X350110E0);
	op_hex		(x,	1);
	set_cmt	(0X350110EF,	"SrcSizeInBytes",	0);
	create_insn	(0X350110EF);
	set_cmt	(0X350110F1,	"SrcCh",	0);
	create_insn	(x=0X350110F2);
	op_stkvar	(x,	1);
	set_cmt	(0X350110F5,	"DstCh",	0);
	create_insn	(x=0X350110FB);
	op_hex		(x,	1);
	create_insn	(x=0X35011109);
	op_stkvar	(x,	1);
	set_cmt	(0X3501110C,	"lpUsedDefaultChar",	0);
	set_cmt	(0X3501110D,	"lpDefaultChar",	0);
	set_cmt	(0X3501110E,	"cbMultiByte",	0);
	set_cmt	(0X35011110,	"lpMultiByteStr",	0);
	set_cmt	(0X35011111,	"cchWideChar",	0);
	create_insn	(x=0X35011113);
	op_stkvar	(x,	1);
	set_cmt	(0X35011117,	"lpWideCharStr",	0);
	set_cmt	(0X35011118,	"dwFlags",	0);
	set_cmt	(0X35011119,	"CodePage",	0);
	create_insn	(x=0X35011119);
	op_stkvar	(x,	0);
	create_insn	(x=0X35011122);
	op_stkvar	(x,	0);
	set_cmt	(0X3501112D,	"lpOverlapped",	0);
	create_insn	(x=0X3501112F);
	op_stkvar	(x,	1);
	set_cmt	(0X35011132,	"lpNumberOfBytesWritten",	0);
	set_cmt	(0X35011133,	"nNumberOfBytesToWrite",	0);
	create_insn	(x=0X35011134);
	op_stkvar	(x,	1);
	set_cmt	(0X35011137,	"lpBuffer",	0);
	set_cmt	(0X35011138,	"hFile",	0);
	create_insn	(x=0X35011138);
	op_stkvar	(x,	0);
	create_insn	(x=0X35011148);
	op_stkvar	(x,	1);
	create_insn	(x=0X35011150);
	op_stkvar	(x,	1);
	create_insn	(x=0X35011153);
	op_stkvar	(x,	0);
	create_insn	(x=0X35011158);
	op_stkvar	(x,	0);
	set_cmt	(0X35011161,	"lpOverlapped",	0);
	create_insn	(x=0X35011163);
	op_stkvar	(x,	0);
	create_insn	(x=0X35011167);
	op_stkvar	(x,	1);
	set_cmt	(0X3501116A,	"lpNumberOfBytesWritten",	0);
	set_cmt	(0X3501116B,	"nNumberOfBytesToWrite",	0);
	create_insn	(x=0X3501116D);
	op_stkvar	(x,	1);
	set_cmt	(0X35011170,	"lpBuffer",	0);
	set_cmt	(0X35011171,	"hFile",	0);
	create_insn	(x=0X35011171);
	op_stkvar	(x,	0);
	create_insn	(x=0X3501117E);
	op_stkvar	(x,	0);
	create_insn	(x=0X3501118A);
	op_stkvar	(x,	1);
	create_insn	(x=0X35011195);
	op_stkvar	(x,	1);
	create_insn	(x=0X350111AC);
	op_hex		(x,	1);
	create_insn	(0X350111B6);
	create_insn	(x=0X350111BE);
	op_stkvar	(x,	1);
	set_cmt	(0X350111C5,	"StackCookie",	0);
	create_insn	(0X350111D1);
	set_name	(0X350111D1,	"?write_double_translated_unicode_nolock@@YA?AUwrite_result@?A0x4add88c5@@QBDI@Z");
	create_insn	(x=0X350111D9);
	op_stkvar	(x,	1);
	create_insn	(x=0X350111DF);
	op_stkvar	(x,	1);
	create_insn	(x=0X350111EA);
	op_stkvar	(x,	1);
	create_insn	(x=0X350111EF);
	op_stkvar	(x,	0);
	set_cmt	(0X350111F9,	"Character",	0);
	set_cmt	(0X35011211,	"Character",	0);
	create_insn	(x=0X35011226);
	op_stkvar	(x,	1);
	create_insn	(0X3501122D);
	create_insn	(0X3501123E);
	set_name	(0X3501123E,	"?write_requires_double_translation_nolock@@YA_NH@Z");
	create_insn	(x=0X35011245);
	op_stkvar	(x,	1);
	set_cmt	(0X35011248,	"FileHandle",	0);
	create_insn	(0X35011257);
	create_insn	(x=0X3501125A);
	op_hex		(x,	1);
	create_insn	(x=0X3501125D);
	op_hex		(x,	1);
	create_insn	(x=0X3501126A);
	op_hex		(x,	1);
	create_insn	(x=0X35011294);
	op_stkvar	(x,	1);
	set_cmt	(0X35011297,	"lpMode",	0);
	set_cmt	(0X3501129F,	"hConsoleHandle",	0);
	create_insn	(0X350112B4);
	set_name	(0X350112B4,	"?write_text_ansi_nolock@@YA?AUwrite_result@?A0x4add88c5@@HQBDI@Z");
	create_insn	(x=0X350112CA);
	op_stkvar	(x,	0);
	create_insn	(x=0X350112CD);
	op_stkvar	(x,	1);
	create_insn	(x=0X350112D2);
	op_hex		(x,	1);
	create_insn	(x=0X350112D5);
	op_hex		(x,	1);
	create_insn	(x=0X350112DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X350112E7);
	op_stkvar	(x,	1);
	create_insn	(x=0X350112EF);
	op_stkvar	(x,	1);
	create_insn	(x=0X350112F2);
	op_hex		(x,	1);
	create_insn	(x=0X350112F7);
	op_hex		(x,	1);
	create_insn	(x=0X350112FB);
	op_hex		(x,	1);
	create_insn	(x=0X350112FF);
	op_stkvar	(x,	0);
	create_insn	(x=0X35011305);
	op_stkvar	(x,	0);
	create_insn	(x=0X3501130D);
	op_stkvar	(x,	1);
	create_insn	(x=0X35011327);
	op_stkvar	(x,	1);
	create_insn	(x=0X3501132D);
	op_stkvar	(x,	1);
	create_insn	(x=0X35011335);
	op_stkvar	(x,	1);
	create_insn	(x=0X3501133D);
	op_stkvar	(x,	1);
	set_cmt	(0X35011343,	"lpOverlapped",	0);
	set_cmt	(0X35011345,	"lpNumberOfBytesWritten",	0);
	set_cmt	(0X35011346,	"nNumberOfBytesToWrite",	0);
	create_insn	(x=0X35011347);
	op_stkvar	(x,	1);
	set_cmt	(0X3501134D,	"lpBuffer",	0);
	set_cmt	(0X3501134E,	"hFile",	0);
	create_insn	(x=0X35011359);
	op_stkvar	(x,	1);
	create_insn	(x=0X35011366);
	op_stkvar	(x,	1);
	create_insn	(x=0X3501136C);
	op_stkvar	(x,	1);
	create_insn	(0X35011378);
	create_insn	(x=0X35011380);
	op_stkvar	(x,	1);
	set_cmt	(0X35011387,	"StackCookie",	0);
	create_insn	(0X35011393);
	set_name	(0X35011393,	"?write_text_utf16le_nolock@@YA?AUwrite_result@?A0x4add88c5@@HQBDI@Z");
	create_insn	(x=0X350113A9);
	op_stkvar	(x,	0);
	create_insn	(x=0X350113AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X350113B1);
	op_hex		(x,	1);
	create_insn	(x=0X350113B4);
	op_hex		(x,	1);
	create_insn	(x=0X350113BB);
	op_stkvar	(x,	1);
	create_insn	(x=0X350113C6);
	op_stkvar	(x,	1);
	create_insn	(x=0X350113CE);
	op_stkvar	(x,	1);
	create_insn	(x=0X350113D3);
	op_stkvar	(x,	0);
	create_insn	(x=0X350113DB);
	op_stkvar	(x,	0);
	create_insn	(x=0X350113EB);
	op_stkvar	(x,	1);
	create_insn	(x=0X35011410);
	op_stkvar	(x,	1);
	create_insn	(x=0X35011418);
	op_stkvar	(x,	1);
	create_insn	(x=0X35011420);
	op_stkvar	(x,	1);
	create_insn	(x=0X35011428);
	op_stkvar	(x,	1);
	set_cmt	(0X3501142E,	"lpOverlapped",	0);
	set_cmt	(0X35011430,	"lpNumberOfBytesWritten",	0);
	create_insn	(x=0X35011431);
	op_hex		(x,	1);
	create_insn	(x=0X35011434);
	op_stkvar	(x,	1);
	set_cmt	(0X3501143A,	"nNumberOfBytesToWrite",	0);
	set_cmt	(0X3501143B,	"lpBuffer",	0);
	set_cmt	(0X3501143C,	"hFile",	0);
	create_insn	(x=0X35011447);
	op_stkvar	(x,	1);
	create_insn	(x=0X35011454);
	op_stkvar	(x,	1);
	create_insn	(x=0X3501145A);
	op_stkvar	(x,	1);
	create_insn	(0X35011466);
	create_insn	(x=0X3501146E);
	op_stkvar	(x,	1);
	set_cmt	(0X35011475,	"StackCookie",	0);
	create_insn	(0X35011481);
	set_name	(0X35011481,	"?write_text_utf8_nolock@@YA?AUwrite_result@?A0x4add88c5@@HQBDI@Z");
	create_insn	(x=0X35011497);
	op_stkvar	(x,	0);
	create_insn	(x=0X3501149A);
	op_stkvar	(x,	1);
	create_insn	(x=0X3501149F);
	op_hex		(x,	1);
	create_insn	(x=0X350114A2);
	op_hex		(x,	1);
	create_insn	(x=0X350114B3);
	op_stkvar	(x,	1);
	create_insn	(x=0X350114BB);
	op_stkvar	(x,	1);
	create_insn	(x=0X350114C0);
	op_stkvar	(x,	0);
	create_insn	(x=0X350114C6);
	op_stkvar	(x,	1);
	create_insn	(x=0X350114D0);
	op_stkvar	(x,	0);
	create_insn	(x=0X350114E1);
	op_stkvar	(x,	1);
	create_insn	(x=0X350114E7);
	op_stkvar	(x,	1);
	create_insn	(x=0X3501150B);
	op_stkvar	(x,	1);
	set_cmt	(0X35011512,	"lpUsedDefaultChar",	0);
	set_cmt	(0X35011513,	"lpDefaultChar",	0);
	set_cmt	(0X35011514,	"cbMultiByte",	0);
	create_insn	(x=0X35011519);
	op_stkvar	(x,	1);
	set_cmt	(0X3501151F,	"lpMultiByteStr",	0);
	create_insn	(x=0X35011520);
	op_stkvar	(x,	1);
	create_insn	(x=0X35011528);
	op_hex		(x,	1);
	set_cmt	(0X3501152A,	"cchWideChar",	0);
	set_cmt	(0X3501152D,	"lpWideCharStr",	0);
	set_cmt	(0X3501152E,	"dwFlags",	0);
	set_cmt	(0X3501152F,	"CodePage",	0);
	create_insn	(x=0X3501153A);
	op_stkvar	(x,	1);
	create_insn	(x=0X3501153D);
	op_stkvar	(x,	0);
	set_cmt	(0X35011547,	"lpOverlapped",	0);
	create_insn	(x=0X35011549);
	op_stkvar	(x,	1);
	set_cmt	(0X35011551,	"lpNumberOfBytesWritten",	0);
	set_cmt	(0X35011552,	"nNumberOfBytesToWrite",	0);
	create_insn	(x=0X35011553);
	op_stkvar	(x,	1);
	set_cmt	(0X3501155B,	"lpBuffer",	0);
	set_cmt	(0X3501155C,	"hFile",	0);
	create_insn	(x=0X3501155C);
	op_stkvar	(x,	0);
	create_insn	(x=0X3501156C);
	op_stkvar	(x,	1);
	create_insn	(x=0X35011572);
	op_stkvar	(x,	1);
	create_insn	(x=0X3501157E);
	op_stkvar	(x,	1);
	create_insn	(x=0X35011584);
	op_stkvar	(x,	1);
	create_insn	(0X35011593);
	create_insn	(x=0X3501159B);
	op_stkvar	(x,	1);
	set_cmt	(0X350115A2,	"StackCookie",	0);
	create_insn	(0X350115AE);
	set_name	(0X350115AE,	"__write");
	create_insn	(x=0X350115B0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X350115BA);
	op_stkvar	(x,	1);
	create_insn	(x=0X350115C7);
	op_hex		(x,	1);
	create_insn	(0X350115DA);
	create_insn	(x=0X350115F0);
	op_hex		(x,	1);
	create_insn	(x=0X350115F5);
	op_hex		(x,	1);
	create_insn	(x=0X350115FB);
	op_stkvar	(x,	0);
	create_insn	(x=0X3501160A);
	op_hex		(x,	1);
	create_insn	(x=0X35011616);
	op_hex		(x,	1);
	create_insn	(x=0X35011619);
	op_stkvar	(x,	0);
	create_insn	(x=0X3501161C);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0X35011627);
	op_stkvar	(x,	1);
	create_insn	(x=0X3501162A);
	op_hex		(x,	1);
	create_insn	(x=0X35011641);
	op_hex		(x,	1);
	set_cmt	(0X35011646,	"int",	0);
	create_insn	(x=0X35011646);
	op_stkvar	(x,	0);
	set_cmt	(0X35011649,	"lpBuffer",	0);
	create_insn	(x=0X35011649);
	op_stkvar	(x,	0);
	set_cmt	(0X3501164C,	"FileHandle",	0);
	create_insn	(x=0X35011652);
	op_hex		(x,	1);
	create_insn	(x=0X35011657);
	op_stkvar	(x,	0);
	create_insn	(x=0X3501165A);
	op_stkvar	(x,	0);
	create_insn	(0X35011666);
	create_insn	(x=0X3501166A);
	op_stkvar	(x,	1);
	create_insn	(x=0X3501166D);
	op_stkvar	(x,	1);
	create_insn	(0X35011678);
	create_insn	(x=0X3501167D);
	op_hex		(x,	1);
	create_insn	(x=0X35011690);
	op_hex		(x,	1);
	create_insn	(0X35011699);
	set_name	(0X35011699,	"__write_nolock");
	create_insn	(x=0X3501169E);
	op_hex		(x,	1);
	create_insn	(x=0X350116A8);
	op_stkvar	(x,	0);
	create_insn	(x=0X350116AB);
	op_stkvar	(x,	1);
	create_insn	(x=0X350116AE);
	op_stkvar	(x,	0);
	create_insn	(x=0X350116B2);
	op_stkvar	(x,	1);
	create_insn	(x=0X350116B6);
	op_stkvar	(x,	1);
	create_insn	(x=0X350116B9);
	op_stkvar	(x,	0);
	create_insn	(0X350116C7);
	create_insn	(x=0X350116E2);
	op_hex		(x,	1);
	create_insn	(0X350116EA);
	create_insn	(x=0X350116EF);
	op_hex		(x,	1);
	create_insn	(x=0X350116F2);
	op_hex		(x,	1);
	create_insn	(x=0X350116F8);
	op_stkvar	(x,	0);
	create_insn	(x=0X35011702);
	op_stkvar	(x,	0);
	create_insn	(x=0X35011705);
	op_stkvar	(x,	0);
	create_insn	(x=0X3501171A);
	op_hex		(x,	1);
	create_insn	(x=0X35011723);
	op_hex		(x,	1);
	create_insn	(x=0X3501173B);
	op_stkvar	(x,	1);
	create_insn	(x=0X3501173E);
	op_hex		(x,	1);
	set_cmt	(0X35011745,	"dwMoveMethod",	0);
	set_cmt	(0X35011749,	"liDistanceToMove",	0);
	set_cmt	(0X3501174B,	"FileHandle",	0);
	create_insn	(x=0X35011751);
	op_hex		(x,	1);
	set_cmt	(0X35011754,	"FileHandle",	0);
	create_insn	(x=0X3501176E);
	op_stkvar	(x,	0);
	create_insn	(x=0X35011771);
	op_stkvar	(x,	1);
	create_insn	(x=0X3501177B);
	op_hex		(x,	1);
	create_insn	(x=0X35011785);
	op_stkvar	(x,	0);
	create_insn	(x=0X35011788);
	op_stkvar	(x,	1);
	create_insn	(x=0X35011793);
	op_hex		(x,	1);
	create_insn	(x=0X35011798);
	op_stkvar	(x,	1);
	create_insn	(x=0X350117A2);
	op_stkvar	(x,	1);
	create_insn	(x=0X350117A5);
	op_hex		(x,	1);
	create_insn	(x=0X350117C2);
	op_stkvar	(x,	0);
	create_insn	(x=0X350117C5);
	op_stkvar	(x,	1);
	create_insn	(x=0X350117D2);
	op_stkvar	(x,	0);
	create_insn	(x=0X350117D5);
	op_stkvar	(x,	1);
	create_insn	(x=0X350117E2);
	op_stkvar	(x,	0);
	create_insn	(x=0X350117E5);
	op_stkvar	(x,	1);
	create_insn	(0X350117F2);
	set_cmt	(0X350117F8,	"lpOverlapped",	0);
	create_insn	(x=0X350117F9);
	op_stkvar	(x,	0);
	create_insn	(x=0X350117FC);
	op_stkvar	(x,	0);
	create_insn	(x=0X350117FF);
	op_stkvar	(x,	0);
	create_insn	(x=0X35011802);
	op_stkvar	(x,	1);
	set_cmt	(0X35011805,	"lpNumberOfBytesWritten",	0);
	set_cmt	(0X35011806,	"nNumberOfBytesToWrite",	0);
	create_insn	(x=0X35011806);
	op_stkvar	(x,	0);
	set_cmt	(0X35011809,	"lpBuffer",	0);
	set_cmt	(0X3501180A,	"hFile",	0);
	create_insn	(x=0X3501181B);
	op_stkvar	(x,	0);
	create_insn	(x=0X3501181E);
	op_stkvar	(x,	1);
	create_insn	(x=0X35011821);
	op_stkvar	(x,	1);
	create_insn	(x=0X35011827);
	op_stkvar	(x,	1);
	create_insn	(x=0X3501182E);
	op_stkvar	(x,	1);
	create_insn	(0X35011850);
	create_insn	(x=0X35011859);
	op_stkvar	(x,	1);
	create_insn	(x=0X3501185C);
	op_stkvar	(x,	1);
	create_insn	(x=0X3501185F);
	op_stkvar	(x,	1);
	create_insn	(x=0X35011869);
	op_hex		(x,	1);
	create_insn	(0X35011879);
	create_insn	(x=0X35011889);
	op_hex		(x,	1);
	create_insn	(x=0X3501188C);
	op_hex		(x,	1);
	create_insn	(x=0X35011891);
	op_stkvar	(x,	1);
	create_insn	(x=0X35011895);
	op_stkvar	(x,	1);
	set_cmt	(0X35011899,	"StackCookie",	0);
	make_array	(0X350118A5,	0XB);
	create_insn	(0X350118B0);
	set_name	(0X350118B0,	"_log10");
	create_insn	(x=0X350118BD);
	op_hex		(x,	1);
	create_insn	(x=0X350118C0);
	op_stkvar	(x,	0);
	create_insn	(x=0X350118C5);
	op_stkvar	(x,	1);
	create_insn	(x=0X350118C9);
	op_hex		(x,	1);
	create_insn	(x=0X350118D5);
	op_stkvar	(x,	0);
	create_insn	(x=0X350118D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X350118DC);
	op_hex		(x,	1);
	set_name	(0X350118E4,	"jnedef");
	create_insn	(0X350118F0);
	set_name	(0X350118F0,	"__CIlog10");
	create_insn	(x=0X350118F9);
	op_hex		(x,	1);
	create_insn	(x=0X350118FC);
	op_stkvar	(x,	0);
	create_insn	(x=0X35011901);
	op_stkvar	(x,	1);
	create_insn	(x=0X35011905);
	op_hex		(x,	1);
	create_insn	(x=0X35011911);
	op_stkvar	(x,	0);
	create_insn	(x=0X35011914);
	op_stkvar	(x,	1);
	create_insn	(x=0X35011918);
	op_hex		(x,	1);
	create_insn	(x=0X3501192B);
	op_hex		(x,	1);
	set_name	(0X3501192B,	"__CIlog10_default");
	create_insn	(x=0X3501192E);
	op_stkvar	(x,	1);
	create_insn	(x=0X3501193B);
	op_hex		(x,	1);
	create_insn	(x=0X3501193F);
	op_stkvar	(x,	1);
	set_name	(0X3501193F,	"__log10_default");
	create_insn	(0X35011948);
	set_name	(0X35011948,	"start_0");
	create_insn	(x=0X35011949);
	op_stkvar	(x,	0);
	create_insn	(x=0X3501194F);
	op_stkvar	(x,	1);
	create_insn	(x=0X35011953);
	op_stkvar	(x,	0);
	create_insn	(x=0X35011961);
	op_hex		(x,	1);
	set_name	(0X35011961,	"CW_is_set_to_default");
	create_insn	(x=0X35011968);
	op_hex		(x,	1);
	set_name	(0X3501196F,	"normal");
	set_name	(0X35011975,	"exit_0");
	create_insn	(x=0X35011982);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X35011992);
	op_hex		(x,	1);
	set_name	(0X35011992,	"x_is_denormal");
	create_insn	(x=0X3501199B);
	op_hex		(x,	1);
	set_name	(0X3501199B,	"inf_or_nan");
	create_insn	(x=0X350119A2);
	op_stkvar	(x,	0);
	create_insn	(x=0X350119A9);
	op_hex		(x,	1);
	set_name	(0X350119B0,	"negative_x");
	create_insn	(0X350119BF);
	set_name	(0X350119BF,	"not_infinity");
	create_insn	(x=0X350119C6);
	op_hex		(x,	1);
	set_name	(0X350119C6,	"test_if_x_zero");
	create_insn	(x=0X350119CD);
	op_stkvar	(x,	0);
	set_name	(0X350119E1,	"_ErrorHandling");
	create_insn	(x=0X350119EE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X35011A00);
	set_name	(0X35011A00,	"_ceil");
	create_insn	(x=0X35011A0D);
	op_hex		(x,	1);
	create_insn	(x=0X35011A10);
	op_stkvar	(x,	0);
	create_insn	(x=0X35011A15);
	op_stkvar	(x,	1);
	create_insn	(x=0X35011A19);
	op_hex		(x,	1);
	create_insn	(x=0X35011A25);
	op_stkvar	(x,	0);
	create_insn	(x=0X35011A28);
	op_stkvar	(x,	1);
	create_insn	(x=0X35011A2C);
	op_hex		(x,	1);
	set_name	(0X35011A34,	"jnedef_0");
	create_insn	(x=0X35011A40);
	op_stkvar	(x,	1);
	set_name	(0X35011A40,	"__ceil_pentium4");
	create_insn	(x=0X35011A6F);
	op_hex		(x,	1);
	create_insn	(x=0X35011A88);
	op_stkvar	(x,	0);
	create_insn	(x=0X35011A8E);
	op_stkvar	(x,	1);
	create_insn	(0X35011A93);
	set_name	(0X35011A93,	"return_x");
	create_insn	(x=0X35011A9E);
	op_hex		(x,	1);
	create_insn	(x=0X35011AA1);
	op_stkvar	(x,	0);
	create_insn	(x=0X35011AAA);
	op_stkvar	(x,	0);
	create_insn	(x=0X35011AAE);
	op_stkvar	(x,	0);
	create_insn	(x=0X35011AB2);
	op_stkvar	(x,	0);
	create_insn	(x=0X35011ABA);
	op_hex		(x,	1);
	create_insn	(x=0X35011ABD);
	op_stkvar	(x,	1);
	set_name	(0X35011ABD,	"not_nan");
	create_insn	(x=0X35011AC2);
	op_stkvar	(x,	1);
	set_name	(0X35011AC2,	"positive_0");
	create_insn	(x=0X35011AEF);
	op_stkvar	(x,	0);
	create_insn	(x=0X35011AF5);
	op_stkvar	(x,	1);
	create_insn	(0X35011AFA);
	set_name	(0X35011AFA,	"ret_zero");
	create_insn	(0X35011B01);
	set_name	(0X35011B01,	"ret_one");
	create_insn	(x=0X35011B12);
	op_stkvar	(x,	0);
	create_insn	(x=0X35011B18);
	op_stkvar	(x,	1);
	create_insn	(0X35011B1D);
	set_name	(0X35011B1D,	"??$common_lseek_nolock@_J@@YA_JH_JH@Z");
	create_insn	(x=0X35011B25);
	op_stkvar	(x,	1);
	set_cmt	(0X35011B29,	"FileHandle",	0);
	create_insn	(x=0X35011B2F);
	op_hex		(x,	1);
	set_cmt	(0X35011B48,	"dwMoveMethod",	0);
	create_insn	(x=0X35011B48);
	op_stkvar	(x,	0);
	create_insn	(x=0X35011B4B);
	op_stkvar	(x,	1);
	set_cmt	(0X35011B4E,	"lpNewFilePointer",	0);
	create_insn	(x=0X35011B4F);
	op_stkvar	(x,	0);
	set_cmt	(0X35011B52,	"liDistanceToMove",	0);
	create_insn	(x=0X35011B52);
	op_stkvar	(x,	0);
	set_cmt	(0X35011B55,	"hFile",	0);
	create_insn	(x=0X35011B6F);
	op_stkvar	(x,	1);
	create_insn	(x=0X35011B72);
	op_stkvar	(x,	1);
	create_insn	(x=0X35011B7B);
	op_stkvar	(x,	1);
	create_insn	(x=0X35011B80);
	op_hex		(x,	1);
	create_insn	(x=0X35011B83);
	op_hex		(x,	1);
	create_insn	(x=0X35011B90);
	op_hex		(x,	1);
	create_insn	(0X35011B9B);
	set_name	(0X35011B9B,	"__lseeki64_nolock");
	set_cmt	(0X35011BA0,	"dwMoveMethod",	0);
	create_insn	(x=0X35011BA0);
	op_stkvar	(x,	0);
	create_insn	(x=0X35011BA3);
	op_stkvar	(x,	0);
	set_cmt	(0X35011BA6,	"liDistanceToMove",	0);
	create_insn	(x=0X35011BA6);
	op_stkvar	(x,	0);
	set_cmt	(0X35011BA9,	"FileHandle",	0);
	create_insn	(x=0X35011BA9);
	op_stkvar	(x,	0);
	create_insn	(x=0X35011BB1);
	op_hex		(x,	1);
	create_insn	(0X35011BB6);
	set_name	(0X35011BB6,	"__fclose_nolock");
	create_insn	(x=0X35011BBC);
	op_stkvar	(x,	1);
	create_insn	(x=0X35011BD3);
	op_hex		(x,	1);
	create_insn	(0X35011BD8);
	create_insn	(x=0X35011BDC);
	op_hex		(x,	1);
	create_insn	(x=0X35011BDF);
	op_hex		(x,	1);
	create_insn	(x=0X35011BE2);
	op_hex		(x,	1);
	set_cmt	(0X35011BE6,	"Stream",	0);
	set_cmt	(0X35011BF4,	"Stream",	0);
	create_insn	(x=0X35011C00);
	op_hex		(x,	1);
	create_insn	(x=0X35011C07);
	op_hex		(x,	1);
	create_insn	(0X35011C0C);
	set_cmt	(0X35011C12,	"Block",	0);
	create_insn	(x=0X35011C1A);
	op_hex		(x,	1);
	create_insn	(0X35011C2C);
	set_name	(0X35011C2C,	"_fclose");
	create_insn	(x=0X35011C2E);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X35011C38);
	op_stkvar	(x,	1);
	create_insn	(x=0X35011C3B);
	op_stkvar	(x,	0);
	create_insn	(x=0X35011C59);
	op_hex		(x,	1);
	create_insn	(0X35011C5E);
	create_insn	(x=0X35011C61);
	op_hex		(x,	1);
	set_cmt	(0X35011C64,	"Stream",	0);
	create_insn	(x=0X35011C65);
	op_hex		(x,	1);
	create_insn	(x=0X35011C71);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0X35011C7B);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	set_cmt	(0X35011C7F,	"Stream",	0);
	create_insn	(x=0X35011C88);
	op_stkvar	(x,	0);
	create_insn	(x=0X35011C8B);
	op_stkvar	(x,	0);
	create_insn	(0X35011C97);
	create_insn	(x=0X35011C9F);
	op_stkvar	(x,	1);
	set_cmt	(0X35011CA2,	"Stream",	0);
	create_insn	(x=0X35011CA2);
	op_stkvar	(x,	0);
	make_array	(0X35011CAC,	0X4);
	create_insn	(0X35011CB0);
	set_name	(0X35011CB0,	"___ascii_strnicmp");
	create_insn	(x=0X35011CB6);
	op_stkvar	(x,	1);
	create_insn	(x=0X35011CBD);
	op_stkvar	(x,	1);
	create_insn	(x=0X35011CC0);
	op_stkvar	(x,	1);
	set_name	(0X35011CCC,	"lupe");
	set_name	(0X35011CE8,	"skip1");
	set_name	(0X35011CF2,	"skip2");
	set_name	(0X35011CFB,	"eject");
	set_name	(0X35011D01,	"differ");
	set_name	(0X35011D0A,	"toend_0");
	create_insn	(0X35011D11);
	set_name	(0X35011D11,	"__putwch_nolock");
	set_cmt	(0X35011D37,	"lpReserved",	0);
	create_insn	(0X35011D37);
	create_insn	(x=0X35011D39);
	op_stkvar	(x,	1);
	set_cmt	(0X35011D3C,	"lpNumberOfCharsWritten",	0);
	set_cmt	(0X35011D3D,	"nNumberOfCharsToWrite",	0);
	create_insn	(x=0X35011D3F);
	op_stkvar	(x,	1);
	set_cmt	(0X35011D42,	"lpBuffer",	0);
	set_cmt	(0X35011D43,	"hConsoleOutput",	0);
	create_insn	(x=0X35011D4E);
	op_stkvar	(x,	1);
	set_cmt	(0X35011D56,	"ProcessorFeature",	0);
	create_insn	(0X35011D56);
	make_array	(0X35011D65,	0XB);
	create_insn	(0X35011D70);
	set_name	(0X35011D70,	"__CIlog10_pentium4");
	create_insn	(x=0X35011D73);
	op_hex		(x,	1);
	create_insn	(x=0X35011D76);
	op_hex		(x,	1);
	create_insn	(x=0X35011D79);
	op_stkvar	(x,	1);
	create_insn	(x=0X35011D7C);
	op_stkvar	(x,	1);
	create_insn	(x=0X35011D88);
	op_stkvar	(x,	1);
	set_name	(0X35011D88,	"__log10_pentium4");
	create_insn	(0X35011D8E);
	set_name	(0X35011D8E,	"start_1");
	set_name	(0X35011D93,	"DENORMAL_RETRY");
	create_insn	(x=0X35011DDE);
	op_hex		(x,	1);
	create_insn	(x=0X35011E13);
	op_hex		(x,	1);
	create_insn	(x=0X35011E38);
	op_hex		(x,	1);
	create_insn	(x=0X35011EBD);
	op_hex		(x,	1);
	create_insn	(x=0X35011ED8);
	op_stkvar	(x,	0);
	create_insn	(x=0X35011EDE);
	op_stkvar	(x,	1);
	create_insn	(x=0X35011EE2);
	op_hex		(x,	1);
	create_insn	(x=0X35011EE6);
	op_stkvar	(x,	1);
	set_name	(0X35011EE6,	"SPECIAL_CASES");
	create_insn	(x=0X35011F10);
	op_stkvar	(x,	1);
	set_name	(0X35011F3D,	"INPUT_INF");
	create_insn	(0X35011F44);
	set_name	(0X35011F44,	"INPUT_NaN");
	create_insn	(0X35011F4B);
	set_name	(0X35011F4B,	"INPUT_ZERO");
	create_insn	(0X35011F66);
	set_name	(0X35011F66,	"INPUT_DENORM");
	create_insn	(0X35011F7C);
	set_name	(0X35011F7C,	"INPUT_NEGATIVE");
	create_insn	(x=0X35011F7F);
	op_hex		(x,	1);
	set_name	(0X35011F8D,	"NEG_NORMAL_INFINITY");
	create_insn	(x=0X35011F9A);
	op_hex		(x,	1);
	set_name	(0X35011F9A,	"CALL_LIBM_ERROR");
	create_insn	(x=0X35011F9D);
	op_stkvar	(x,	0);
	create_insn	(x=0X35011FA3);
	op_stkvar	(x,	0);
	create_insn	(x=0X35011FAC);
	op_stkvar	(x,	0);
	create_insn	(x=0X35011FB3);
	op_stkvar	(x,	0);
	create_insn	(x=0X35011FB7);
	op_stkvar	(x,	0);
	create_insn	(x=0X35011FBF);
	op_stkvar	(x,	1);
	create_insn	(x=0X35011FC3);
	op_hex		(x,	1);
	create_insn	(x=0X35011FC7);
	op_stkvar	(x,	1);
	set_name	(0X35011FC7,	"NEG_INF_NAN");
	create_insn	(x=0X35011FCD);
	op_stkvar	(x,	1);
	create_insn	(x=0X35011FE0);
	op_hex		(x,	1);
	create_byte	(0X35011FF4);
	make_array	(0X35011FF4,	0X7);
	create_insn	(0X35011FFB);
	make_array	(0X35011FFD,	0X3);
	create_insn	(0X35012000);
	set_name	(0X35012000,	"fFYTOX");
	set_name	(0X3501200D,	"fFXTOY");
	create_insn	(0X35012011);
	set_name	(0X35012011,	"__fFEXP");
	set_name	(0X3501201E,	"fF2X");
	create_insn	(x=0X35012027);
	op_hex		(x,	1);
	create_insn	(x=0X35012034);
	op_hex		(x,	1);
	set_name	(0X35012034,	"ExpNoInvert");
	set_name	(0X3501203B,	"ExpScaled");
	set_name	(0X35012041,	"expret");
	create_insn	(0X35012046);
	set_name	(0X35012046,	"negYTOX");
	set_name	(0X35012058,	"evenexp");
	create_insn	(0X3501205E);
	set_name	(0X3501205E,	"_rtfor0to0");
	create_insn	(0X35012063);
	set_name	(0X35012063,	"negYTOXerror");
	create_insn	(0X35012068);
	set_name	(0X35012068,	"__rtinfpopse");
	set_name	(0X3501206A,	"__rtinfnpopse");
	create_insn	(0X3501207A);
	set_name	(0X3501207A,	"__fFLN");
	create_insn	(x=0X35012088);
	op_hex		(x,	1);
	create_insn	(0X35012094);
	set_name	(0X35012094,	"_rtforln0");
	create_insn	(0X350120A4);
	set_name	(0X350120A4,	"_rtforloginf");
	create_insn	(0X350120A9);
	set_name	(0X350120A9,	"fFLOGm");
	create_insn	(0X350120AD);
	set_name	(0X350120AD,	"fFLNm");
	set_name	(0X350120AF,	"fFYL2Xm");
	create_insn	(0X350120B8);
	set_name	(0X350120B8,	"_rtforyto0");
	create_insn	(0X350120BD);
	set_name	(0X350120BD,	"_rtfor0tox");
	create_insn	(0X350120D7);
	set_name	(0X350120D7,	"zerotoxdone");
	create_insn	(0X350120D8);
	set_name	(0X350120D8,	"_rtfor0toneg");
	create_insn	(0X350120F2);
	set_name	(0X350120F2,	"tranzeropop");
	set_name	(0X350120F4,	"tranzeronpop");
	create_insn	(0X350120F9);
	set_name	(0X350120F9,	"tranindfpop");
	set_name	(0X350120FB,	"tranindfnpop");
	create_insn	(0X35012100);
	set_name	(0X35012100,	"ExpArgOutOfRange");
	create_insn	(x=0X3501210B);
	op_hex		(x,	1);
	create_insn	(0X35012122);
	set_name	(0X35012122,	"_expbigret");
	create_insn	(0X35012123);
	set_name	(0X35012123,	"zeronpopue");
	create_insn	(0X3501212F);
	set_name	(0X3501212F,	"__rtinfpop");
	set_name	(0X35012131,	"__rtinfnpop");
	set_name	(0X35012139,	"setOVERFLOW");
	create_insn	(0X35012141);
	set_name	(0X35012141,	"_rtforexpinf");
	create_insn	(0X3501214E);
	set_name	(0X3501214E,	"__ffexpm1");
	create_insn	(x=0X35012162);
	op_hex		(x,	1);
	create_insn	(0X35012191);
	set_name	(0X35012191,	"_isintTOS");
	create_insn	(0X350121B6);
	set_name	(0X350121B6,	"_isintTOSret");
	create_insn	(0X350121B7);
	set_name	(0X350121B7,	"notanint");
	create_insn	(0X350121BE);
	set_name	(0X350121BE,	"evenint");
	create_insn	(0X350121C5);
	set_name	(0X350121C5,	"_usepowhlp");
	create_insn	(x=0X350121C6);
	op_hex		(x,	1);
	set_cmt	(0X350121CB,	"int",	0);
	create_insn	(x=0X350121CC);
	op_hex		(x,	1);
	set_cmt	(0X350121CF,	"double",	0);
	create_insn	(x=0X350121CF);
	op_stkvar	(x,	1);
	create_insn	(x=0X350121D2);
	op_hex		(x,	1);
	set_cmt	(0X350121D5,	"double",	0);
	create_insn	(x=0X350121D5);
	op_stkvar	(x,	1);
	create_insn	(x=0X350121E1);
	op_hex		(x,	1);
	create_insn	(x=0X350121E9);
	op_hex		(x,	1);
	create_insn	(0X350121F6);
	set_name	(0X350121F6,	"noerror");
	make_array	(0X350121F7,	0X9);
	create_insn	(0X35012200);
	set_name	(0X35012200,	"__trandisp1");
	create_insn	(x=0X3501220D);
	op_hex		(x,	1);
	create_insn	(x=0X35012210);
	op_hex		(x,	1);
	create_insn	(0X35012217);
	create_insn	(x=0X35012228);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X3501224A);
	op_hex		(x,	1);
	create_insn	(x=0X3501224C);
	op_hex		(x,	1);
	create_insn	(x=0X3501224E);
	op_hex		(x,	1);
	create_insn	(x=0X35012252);
	op_hex		(x,	1);
	create_insn	(x=0X35012258);
	op_hex		(x,	1);
	create_insn	(0X35012267);
	set_name	(0X35012267,	"__trandisp2");
	create_insn	(x=0X35012274);
	op_hex		(x,	1);
	create_insn	(x=0X35012277);
	op_hex		(x,	1);
	create_insn	(0X3501227E);
	set_name	(0X3501227E,	"cwdefault");
	set_name	(0X35012282,	"setcw");
	create_insn	(x=0X3501228F);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X350122C3);
	op_hex		(x,	1);
	create_insn	(x=0X350122C5);
	op_hex		(x,	1);
	create_insn	(x=0X350122C7);
	op_hex		(x,	1);
	create_insn	(x=0X350122CB);
	op_hex		(x,	1);
	create_insn	(x=0X350122D0);
	op_hex		(x,	1);
	create_insn	(x=0X350122D2);
	op_hex		(x,	1);
	create_insn	(x=0X350122D4);
	op_hex		(x,	1);
	create_insn	(x=0X350122D8);
	op_hex		(x,	1);
	create_insn	(x=0X350122DB);
	op_hex		(x,	1);
	create_insn	(x=0X350122DD);
	op_hex		(x,	1);
	create_insn	(x=0X350122E4);
	op_hex		(x,	1);
	create_insn	(0X350122F3);
	set_name	(0X350122F3,	"__rttospopde");
	set_name	(0X350122F8,	"__rttospop");
	set_name	(0X350122FA,	"__rtnospop");
	create_insn	(0X350122FC);
	set_name	(0X350122FC,	"__rttosnpop");
	create_insn	(0X350122FD);
	set_name	(0X350122FD,	"__rtnospopde");
	create_insn	(0X35012304);
	set_name	(0X35012304,	"__rtzeropop");
	set_name	(0X35012306,	"__rtzeronpop");
	create_insn	(0X3501230B);
	set_name	(0X3501230B,	"__rtzerospop");
	create_insn	(0X35012317);
	set_name	(0X35012317,	"dont_change_zerosign");
	create_insn	(0X35012318);
	set_name	(0X35012318,	"__rtonepop");
	set_name	(0X3501231A,	"__rtonenpop");
	create_insn	(0X3501231F);
	set_name	(0X3501231F,	"__tosnan1");
	create_insn	(x=0X3501232B);
	op_hex		(x,	1);
	create_insn	(0X3501233C);
	set_name	(0X3501233C,	"_tossnan1");
	create_insn	(0X3501234A);
	set_name	(0X3501234A,	"__nosnan2");
	set_name	(0X3501234C,	"__tosnan2");
	create_insn	(x=0X35012358);
	op_hex		(x,	1);
	create_insn	(0X3501236A);
	set_name	(0X3501236A,	"_tossnan2");
	set_name	(0X35012371,	"_tosnan2ret");
	create_insn	(0X35012374);
	set_name	(0X35012374,	"__nan2");
	create_insn	(x=0X35012380);
	op_hex		(x,	1);
	create_insn	(x=0X35012397);
	op_hex		(x,	1);
	create_insn	(0X350123A9);
	set_name	(0X350123A9,	"_snan2");
	set_name	(0X350123B0,	"_nan2ret");
	create_insn	(0X350123B3);
	set_name	(0X350123B3,	"__rtindfpop");
	set_name	(0X350123B5,	"__rtindfnpop");
	create_insn	(0X350123C6);
	set_name	(0X350123C6,	"__rttosnpopde");
	set_name	(0X350123CD,	"retj");
	create_insn	(0X350123D0);
	set_name	(0X350123D0,	"__rtatan2inf");
	set_name	(0X350123E0,	"dont_change_sign");
	create_insn	(0X350123EC);
	set_name	(0X350123EC,	"retinf");
	create_insn	(0X350123ED);
	set_name	(0X350123ED,	"__rtchsifneg");
	create_insn	(0X350123F3);
	set_name	(0X350123F3,	"chsifnegret");
	make_array	(0X350123F4,	0XC);
	create_insn	(0X35012400);
	set_name	(0X35012400,	"__twoToTOS");
	create_insn	(x=0X35012415);
	op_stkvar	(x,	1);
	set_name	(0X35012415,	"__load_CW");
	create_insn	(x=0X35012419);
	op_hex		(x,	1);
	create_insn	(x=0X3501241F);
	op_hex		(x,	1);
	create_insn	(x=0X35012422);
	op_stkvar	(x,	0);
	create_insn	(x=0X35012427);
	op_stkvar	(x,	0);
	create_insn	(x=0X3501242C);
	op_hex		(x,	1);
	set_name	(0X3501242C,	"__convertTOStoQNaN");
	create_insn	(0X35012439);
	set_name	(0X35012439,	"tosIsSNaN");
	create_insn	(0X35012445);
	set_name	(0X35012445,	"__fload_withFB");
	create_insn	(x=0X35012448);
	op_hex		(x,	1);
	create_insn	(0X35012457);
	set_name	(0X35012457,	"fpload_special");
	create_insn	(x=0X3501245A);
	op_hex		(x,	1);
	create_insn	(x=0X3501245D);
	op_hex		(x,	1);
	create_insn	(x=0X35012462);
	op_stkvar	(x,	0);
	create_insn	(x=0X3501246B);
	op_hex		(x,	1);
	create_insn	(x=0X3501246F);
	op_hex		(x,	1);
	create_insn	(x=0X35012472);
	op_stkvar	(x,	0);
	create_insn	(x=0X35012476);
	op_stkvar	(x,	0);
	create_insn	(x=0X35012479);
	op_stkvar	(x,	1);
	create_insn	(x=0X3501247C);
	op_hex		(x,	1);
	create_insn	(x=0X3501247F);
	op_hex		(x,	1);
	create_insn	(x=0X35012488);
	op_stkvar	(x,	1);
	set_name	(0X35012488,	"__checkTOS_withFB");
	create_insn	(x=0X3501248C);
	op_hex		(x,	1);
	create_insn	(x=0X35012499);
	op_stkvar	(x,	1);
	set_name	(0X35012499,	"special_exp");
	create_insn	(x=0X3501249E);
	op_stkvar	(x,	0);
	set_name	(0X3501249E,	"__fast_exit");
	create_insn	(x=0X350124A6);
	op_stkvar	(x,	0);
	set_name	(0X350124A9,	"fast_exit_CW_is_restored");
	create_insn	(x=0X350124AB);
	op_stkvar	(x,	1);
	set_name	(0X350124AB,	"__math_exit");
	create_insn	(x=0X350124B5);
	op_hex		(x,	1);
	create_insn	(x=0X350124BE);
	op_hex		(x,	1);
	create_insn	(x=0X350124D0);
	op_stkvar	(x,	0);
	set_name	(0X350124D0,	"restore_CW");
	set_name	(0X350124D3,	"CW_is_restored");
	create_insn	(x=0X350124D5);
	op_hex		(x,	1);
	set_name	(0X350124D5,	"__check_overflow_exit");
	create_insn	(x=0X350124D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X350124DB);
	op_stkvar	(x,	1);
	create_insn	(x=0X350124DF);
	op_hex		(x,	1);
	create_insn	(x=0X350124E2);
	op_hex		(x,	1);
	create_insn	(x=0X350124E9);
	op_hex		(x,	1);
	set_name	(0X350124E9,	"__check_range_exit");
	create_insn	(x=0X350124EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X350124EF);
	op_stkvar	(x,	1);
	create_insn	(x=0X350124F3);
	op_hex		(x,	1);
	create_insn	(x=0X350124F6);
	op_hex		(x,	1);
	set_name	(0X350124FD,	"_check_overflow_start");
	create_insn	(x=0X35012504);
	op_stkvar	(x,	1);
	create_insn	(x=0X3501250E);
	op_hex		(x,	1);
	create_insn	(x=0X35012517);
	op_hex		(x,	1);
	set_name	(0X35012522,	"have_error");
	create_insn	(0X3501252E);
	set_name	(0X3501252E,	"have_error_in_pow");
	create_insn	(x=0X35012535);
	op_stkvar	(x,	0);
	create_insn	(0X3501253A);
	set_name	(0X3501253A,	"haveunderflow");
	create_insn	(0X35012563);
	set_name	(0X35012563,	"haveoverflow");
	make_array	(0X3501258C,	0X4);
	create_insn	(0X35012590);
	set_name	(0X35012590,	"__startTwoArgErrorHandling");
	create_insn	(x=0X35012593);
	op_hex		(x,	1);
	create_insn	(x=0X35012596);
	op_stkvar	(x,	0);
	create_insn	(x=0X35012599);
	op_stkvar	(x,	1);
	create_insn	(x=0X3501259C);
	op_stkvar	(x,	0);
	create_insn	(x=0X3501259F);
	op_stkvar	(x,	1);
	create_insn	(x=0X350125A2);
	op_stkvar	(x,	0);
	create_insn	(0X350125A7);
	set_name	(0X350125A7,	"__startOneArgErrorHandling");
	create_insn	(x=0X350125AA);
	op_hex		(x,	1);
	create_insn	(x=0X350125AD);
	op_stkvar	(x,	0);
	create_insn	(x=0X350125B0);
	op_stkvar	(x,	1);
	set_name	(0X350125B0,	"_ContinueErrorHandling");
	create_insn	(x=0X350125B3);
	op_stkvar	(x,	0);
	create_insn	(x=0X350125B6);
	op_stkvar	(x,	1);
	create_insn	(x=0X350125B9);
	op_stkvar	(x,	1);
	create_insn	(x=0X350125BC);
	op_stkvar	(x,	0);
	create_insn	(x=0X350125BF);
	op_stkvar	(x,	0);
	create_insn	(x=0X350125C2);
	op_stkvar	(x,	1);
	create_insn	(x=0X350125C5);
	op_stkvar	(x,	1);
	create_insn	(x=0X350125D0);
	op_hex		(x,	1);
	create_insn	(x=0X350125D3);
	op_stkvar	(x,	1);
	create_insn	(x=0X350125D6);
	op_stkvar	(x,	0);
	create_insn	(x=0X350125DE);
	op_stkvar	(x,	0);
	set_name	(0X350125E1,	"CW_is_restored_0");
	create_insn	(0X350125E3);
	set_name	(0X350125E3,	"___libm_error_support");
	create_insn	(x=0X350125E8);
	op_hex		(x,	1);
	create_insn	(x=0X350125F2);
	op_stkvar	(x,	0);
	set_cmt	(0X35012600,	"Ptr",	0);
	create_insn	(x=0X35012610);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X35012615);
	op_stkvar	(x,	1);
	create_insn	(x=0X35012650);
	op_stkvar	(x,	0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X35012657);
	op_stkvar	(x,	1);
	create_insn	(x=0X3501265C);
	op_stkvar	(x,	1);
	create_insn	(x=0X3501265F);
	op_stkvar	(x,	0);
	create_insn	(x=0X35012668);
	op_stkvar	(x,	1);
	create_insn	(x=0X3501266B);
	op_stkvar	(x,	1);
	create_insn	(x=0X35012670);
	op_stkvar	(x,	1);
	create_insn	(x=0X35012673);
	op_stkvar	(x,	1);
	create_insn	(x=0X35012679);
	op_stkvar	(x,	1);
	create_insn	(x=0X3501269D);
	op_stkvar	(x,	0);
	create_insn	(x=0X350126A0);
	op_stkvar	(x,	0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X350126AC);
	op_stkvar	(x,	0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X350126B5);
	op_stkvar	(x,	0);
	create_insn	(x=0X350126B8);
	op_stkvar	(x,	0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X350126C4);
	op_stkvar	(x,	0);
	create_insn	(x=0X350126CB);
	op_stkvar	(x,	0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X350126D7);
	create_insn	(x=0X350126EA);
	op_stkvar	(x,	0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X350126F1);
	op_stkvar	(x,	1);
	create_insn	(x=0X350126F6);
	op_stkvar	(x,	1);
	create_insn	(x=0X350126F9);
	op_stkvar	(x,	0);
	create_insn	(x=0X35012702);
	op_stkvar	(x,	1);
	create_insn	(x=0X35012705);
	op_stkvar	(x,	1);
	create_insn	(x=0X3501270A);
	op_stkvar	(x,	1);
	create_insn	(x=0X3501270D);
	op_stkvar	(x,	1);
	create_insn	(x=0X35012713);
	op_stkvar	(x,	1);
	create_insn	(x=0X35012724);
	op_stkvar	(x,	0);
	create_insn	(x=0X3501272D);
	op_stkvar	(x,	0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X35012736);
	create_insn	(x=0X35012738);
	op_stkvar	(x,	1);
	create_insn	(0X35012742);
	create_insn	(x=0X3501276B);
	op_stkvar	(x,	1);
	create_insn	(x=0X35012772);
	op_stkvar	(x,	0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X3501277E);
	op_stkvar	(x,	0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X3501278A);
	op_stkvar	(x,	0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X35012796);
	op_stkvar	(x,	0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X350127A2);
	op_stkvar	(x,	0);
	create_insn	(x=0X350127A9);
	op_stkvar	(x,	0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X350127B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X350127B5);
	op_stkvar	(x,	1);
	create_insn	(x=0X350127BA);
	op_stkvar	(x,	1);
	create_insn	(x=0X350127BD);
	op_stkvar	(x,	1);
	create_insn	(x=0X350127C2);
	op_stkvar	(x,	1);
	create_insn	(x=0X350127C5);
	op_stkvar	(x,	1);
	create_insn	(x=0X350127CB);
	op_stkvar	(x,	1);
	create_insn	(x=0X350127E6);
	op_stkvar	(x,	1);
	create_insn	(x=0X350127EB);
	op_stkvar	(x,	1);
	set_cmt	(0X350127EF,	"StackCookie",	0);
	create_insn	(0X350127FB);
	set_name	(0X350127FB,	"__ceil_default");
	create_insn	(x=0X35012814);
	op_stkvar	(x,	1);
	create_insn	(x=0X3501281B);
	op_stkvar	(x,	1);
	set_cmt	(0X35012828,	"double",	0);
	create_insn	(x=0X35012828);
	op_stkvar	(x,	1);
	create_insn	(x=0X35012844);
	op_stkvar	(x,	1);
	create_insn	(x=0X3501284B);
	op_stkvar	(x,	1);
	create_insn	(x=0X35012855);
	op_hex		(x,	1);
	create_insn	(x=0X3501285A);
	op_stkvar	(x,	1);
	create_insn	(x=0X3501285E);
	op_stkvar	(x,	1);
	create_insn	(0X35012867);
	create_insn	(x=0X3501286C);
	op_stkvar	(x,	1);
	create_insn	(x=0X3501286F);
	op_stkvar	(x,	1);
	create_insn	(x=0X35012872);
	op_hex		(x,	1);
	create_insn	(x=0X35012879);
	op_hex		(x,	1);
	create_insn	(x=0X35012889);
	op_stkvar	(x,	1);
	create_insn	(x=0X35012890);
	op_hex		(x,	1);
	create_insn	(x=0X35012896);
	op_hex		(x,	1);
	create_insn	(x=0X3501289B);
	op_stkvar	(x,	1);
	create_insn	(x=0X3501289F);
	op_stkvar	(x,	1);
	create_insn	(x=0X350128AB);
	op_hex		(x,	1);
	create_insn	(0X350128B4);
	set_name	(0X350128B4,	"??$?RV_lambda_123407a5e2ac06da108355a851863b7a_@@AAV_lambda_2fe9b910cf3cbf4a0ab98a02ba45b3ec_@@V_lambda_ae55bdf541ad94d75914d381c370e64d_@@@?$__crt_seh_guarded_call@H@@QAEH$$QAV_lambda_123407a5e2ac06da108355a851863b7a_@@AAV_lambda_2fe9b910cf3cbf4a0ab98a02ba45b3ec_@@$$QAV_lambda_ae55bdf541ad94d75914d381c370e64d_@@@Z");
	create_insn	(x=0X350128B6);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X350128C0);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0X350128C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X350128CF);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0X350128D3);
	op_stkvar	(x,	1);
	create_insn	(x=0X350128DC);
	op_hex		(x,	1);
	create_insn	(x=0X350128E1);
	op_hex		(x,	1);
	create_insn	(x=0X350128EE);
	op_hex		(x,	1);
	set_cmt	(0X350128F5,	"FileHandle",	0);
	create_insn	(0X35012900);
	create_insn	(x=0X3501290B);
	op_hex		(x,	1);
	create_insn	(x=0X3501290E);
	op_stkvar	(x,	0);
	create_insn	(x=0X35012911);
	op_stkvar	(x,	0);
	create_insn	(0X3501291D);
	create_insn	(x=0X35012927);
	op_stkvar	(x,	1);
	create_insn	(x=0X3501292A);
	op_stkvar	(x,	1);
	create_insn	(0X35012936);
	create_insn	(x=0X3501293B);
	op_hex		(x,	1);
	create_insn	(x=0X3501293E);
	op_stkvar	(x,	1);
	create_insn	(x=0X35012941);
	op_stkvar	(x,	1);
	create_insn	(x=0X35012944);
	op_stkvar	(x,	0);
	create_insn	(x=0X35012947);
	op_stkvar	(x,	0);
	create_insn	(x=0X3501294A);
	op_stkvar	(x,	1);
	create_insn	(x=0X3501294E);
	op_stkvar	(x,	0);
	create_insn	(x=0X35012951);
	op_stkvar	(x,	1);
	create_insn	(0X3501295E);
	create_insn	(x=0X35012965);
	op_stkvar	(x,	1);
	create_insn	(x=0X35012972);
	op_hex		(x,	1);
	create_insn	(0X35012982);
	create_insn	(x=0X35012992);
	op_hex		(x,	1);
	create_insn	(x=0X35012995);
	op_hex		(x,	1);
	create_insn	(x=0X350129A2);
	op_hex		(x,	1);
	create_insn	(x=0X350129A9);
	op_stkvar	(x,	1);
	create_insn	(x=0X350129AC);
	op_stkvar	(x,	0);
	create_insn	(x=0X350129AF);
	op_stkvar	(x,	1);
	create_insn	(0X350129BD);
	create_insn	(x=0X350129C2);
	op_hex		(x,	1);
	create_insn	(x=0X350129D5);
	op_hex		(x,	1);
	create_insn	(0X350129DD);
	set_name	(0X350129DD,	"__close_nolock");
	create_insn	(x=0X350129E4);
	op_stkvar	(x,	1);
	set_cmt	(0X350129E7,	"FileHandle",	0);
	create_insn	(0X350129F7);
	create_insn	(x=0X35012A01);
	op_hex		(x,	1);
	create_insn	(x=0X35012A0F);
	op_hex		(x,	1);
	set_cmt	(0X35012A15,	"FileHandle",	0);
	set_cmt	(0X35012A1C,	"FileHandle",	0);
	set_cmt	(0X35012A2B,	"FileHandle",	0);
	set_cmt	(0X35012A32,	"hObject",	0);
	create_insn	(x=0X35012A4E);
	op_hex		(x,	1);
	create_insn	(x=0X35012A51);
	op_hex		(x,	1);
	create_insn	(x=0X35012A6E);
	op_hex		(x,	1);
	create_insn	(0X35012A73);
	create_insn	(0X35012A79);
	set_name	(0X35012A79,	"?__acrt_stdio_free_stream@@YAXV__crt_stdio_stream@@@Z");
	create_insn	(x=0X35012A7E);
	op_stkvar	(x,	1);
	create_insn	(x=0X35012A85);
	op_stkvar	(x,	1);
	create_insn	(x=0X35012A8B);
	op_stkvar	(x,	1);
	create_insn	(x=0X35012A91);
	op_stkvar	(x,	1);
	create_insn	(x=0X35012A94);
	op_hex		(x,	1);
	create_insn	(x=0X35012A98);
	op_stkvar	(x,	1);
	create_insn	(x=0X35012A9E);
	op_stkvar	(x,	1);
	create_insn	(x=0X35012AA4);
	op_stkvar	(x,	1);
	create_insn	(x=0X35012AAA);
	op_stkvar	(x,	1);
	create_insn	(0X35012AB4);
	set_name	(0X35012AB4,	"?__dcrt_lowio_initialize_console_output@@YAXXZ");
	set_cmt	(0X35012AB6,	"hTemplateFile",	0);
	set_cmt	(0X35012AB7,	"dwFlagsAndAttributes",	0);
	set_cmt	(0X35012AB8,	"dwCreationDisposition",	0);
	set_cmt	(0X35012ABA,	"lpSecurityAttributes",	0);
	set_cmt	(0X35012ABB,	"dwShareMode",	0);
	set_cmt	(0X35012ABD,	"dwDesiredAccess",	0);
	create_insn	(x=0X35012AC2);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X35012AD3);
	set_name	(0X35012AD3,	"unknown_libname_52");
	set_cmt	(0X35012AE2,	"hObject",	0);
	create_insn	(0X35012AEA);
	set_name	(0X35012AEA,	"__d_inttype");
	create_insn	(x=0X35012AF1);
	op_stkvar	(x,	1);
	set_cmt	(0X35012AF6,	"X",	0);
	create_insn	(x=0X35012AF6);
	op_stkvar	(x,	1);
	create_insn	(x=0X35012B00);
	op_hex		(x,	1);
	create_insn	(x=0X35012B04);
	op_stkvar	(x,	1);
	set_cmt	(0X35012B09,	"double",	0);
	create_insn	(x=0X35012B09);
	op_stkvar	(x,	1);
	create_insn	(x=0X35012B11);
	op_stkvar	(x,	1);
	create_insn	(x=0X35012B1C);
	op_hex		(x,	1);
	create_insn	(x=0X35012B29);
	op_stkvar	(x,	1);
	set_cmt	(0X35012B2C,	"double",	0);
	create_insn	(x=0X35012B2C);
	op_stkvar	(x,	1);
	create_insn	(x=0X35012B34);
	op_stkvar	(x,	1);
	create_insn	(x=0X35012B3D);
	op_hex		(x,	1);
	create_insn	(0X35012B47);
	create_insn	(0X35012B4C);
	create_insn	(0X35012B54);
	set_name	(0X35012B54,	"__powhlp");
	create_insn	(x=0X35012B59);
	op_stkvar	(x,	1);
	create_insn	(x=0X35012B68);
	op_stkvar	(x,	0);
	create_insn	(x=0X35012B6D);
	op_stkvar	(x,	0);
	create_insn	(x=0X35012B79);
	op_hex		(x,	1);
	create_insn	(0X35012B8D);
	create_insn	(x=0X35012B93);
	op_hex		(x,	1);
	create_insn	(x=0X35012B96);
	op_stkvar	(x,	1);
	create_insn	(x=0X35012BA8);
	op_stkvar	(x,	0);
	create_insn	(x=0X35012BAD);
	op_stkvar	(x,	0);
	create_insn	(x=0X35012BB9);
	op_hex		(x,	1);
	create_insn	(0X35012BC9);
	create_insn	(x=0X35012BCF);
	op_hex		(x,	1);
	create_insn	(x=0X35012BD2);
	op_stkvar	(x,	1);
	create_insn	(0X35012BE8);
	create_insn	(x=0X35012BEA);
	op_stkvar	(x,	0);
	create_insn	(x=0X35012BEF);
	op_stkvar	(x,	0);
	create_insn	(x=0X35012BFB);
	op_stkvar	(x,	1);
	create_insn	(x=0X35012C02);
	op_hex		(x,	1);
	create_insn	(x=0X35012C0F);
	op_hex		(x,	1);
	create_insn	(x=0X35012C12);
	op_stkvar	(x,	1);
	create_insn	(x=0X35012C1D);
	op_stkvar	(x,	0);
	create_insn	(x=0X35012C22);
	op_stkvar	(x,	0);
	create_insn	(x=0X35012C28);
	op_stkvar	(x,	1);
	set_cmt	(0X35012C2D,	"double",	0);
	create_insn	(x=0X35012C2D);
	op_stkvar	(x,	1);
	create_insn	(x=0X35012C37);
	op_stkvar	(x,	1);
	create_insn	(x=0X35012C42);
	op_hex		(x,	1);
	create_insn	(0X35012C5A);
	create_insn	(x=0X35012C5E);
	op_hex		(x,	1);
	create_insn	(0X35012C72);
	create_insn	(x=0X35012C76);
	op_stkvar	(x,	1);
	create_insn	(0X35012C7F);
	set_name	(0X35012C7F,	"__87except");
	create_insn	(x=0X35012C86);
	op_hex		(x,	1);
	create_insn	(x=0X35012C89);
	op_hex		(x,	1);
	create_insn	(x=0X35012C90);
	op_stkvar	(x,	0);
	create_insn	(x=0X35012C96);
	op_hex		(x,	1);
	create_insn	(0X35012CDB);
	create_insn	(0X35012CDF);
	create_insn	(0X35012CE3);
	create_insn	(0X35012CE7);
	create_insn	(x=0X35012CF5);
	op_hex		(x,	1);
	create_insn	(x=0X35012D0E);
	op_hex		(x,	1);
	create_insn	(0X35012D14);
	create_insn	(x=0X35012D1A);
	op_hex		(x,	1);
	create_insn	(x=0X35012D1D);
	op_hex		(x,	1);
	set_cmt	(0X35012D29,	"int",	0);
	set_cmt	(0X35012D2D,	"int",	0);
	set_cmt	(0X35012D2E,	"int",	0);
	set_cmt	(0X35012D2F,	"int",	0);
	set_cmt	(0X35012D36,	"int",	0);
	set_cmt	(0X35012D3A,	"Arguments",	0);
	create_insn	(x=0X35012D40);
	op_hex		(x,	1);
	set_cmt	(0X35012D7B,	"StackCookie",	0);
	create_insn	(0X35012D8A);
	set_name	(0X35012D8A,	"__frnd");
	create_insn	(x=0X35012D91);
	op_stkvar	(x,	1);
	create_insn	(x=0X35012D96);
	op_stkvar	(x,	1);
	create_insn	(x=0X35012D99);
	op_stkvar	(x,	1);
	create_insn	(0X35012DA0);
	set_name	(0X35012DA0,	"__errcode");
	create_insn	(x=0X35012DA5);
	op_stkvar	(x,	1);
	create_insn	(x=0X35012DA8);
	op_hex		(x,	1);
	create_insn	(x=0X35012DB0);
	op_hex		(x,	1);
	create_insn	(x=0X35012DB9);
	op_hex		(x,	1);
	create_insn	(x=0X35012DC1);
	op_hex		(x,	1);
	create_insn	(0X35012DCA);
	create_insn	(x=0X35012DCD);
	op_hex		(x,	1);
	create_insn	(0X35012DD4);
	set_name	(0X35012DD4,	"__except1");
	create_insn	(x=0X35012DDB);
	op_hex		(x,	1);
	create_insn	(x=0X35012DDE);
	op_hex		(x,	1);
	create_insn	(x=0X35012DE5);
	op_stkvar	(x,	0);
	create_insn	(x=0X35012DEB);
	op_hex		(x,	1);
	create_insn	(x=0X35012E0D);
	op_hex		(x,	1);
	create_insn	(x=0X35012E14);
	op_hex		(x,	1);
	set_cmt	(0X35012E18,	"int",	0);
	set_cmt	(0X35012E1C,	"int",	0);
	set_cmt	(0X35012E20,	"int",	0);
	set_cmt	(0X35012E21,	"int",	0);
	set_cmt	(0X35012E27,	"int",	0);
	set_cmt	(0X35012E2A,	"int",	0);
	set_cmt	(0X35012E2E,	"Arguments",	0);
}

//------------------------------------------------------------------------
// Information about bytes

static Bytes_3(void) {
        auto x;
#define id x

	create_insn	(x=0X35012E37);
	op_hex		(x,	1);
	set_cmt	(0X35012E55,	"int",	0);
	create_insn	(x=0X35012E56);
	op_hex		(x,	1);
	set_cmt	(0X35012E59,	"double",	0);
	create_insn	(x=0X35012E59);
	op_stkvar	(x,	1);
	set_cmt	(0X35012E5F,	"int",	0);
	create_insn	(x=0X35012E5F);
	op_stkvar	(x,	1);
	set_cmt	(0X35012E66,	"int",	0);
	create_insn	(x=0X35012E66);
	op_stkvar	(x,	1);
	set_cmt	(0X35012E69,	"int",	0);
	set_cmt	(0X35012E6C,	"int",	0);
	create_insn	(x=0X35012E72);
	op_hex		(x,	1);
	create_insn	(0X35012E77);
	create_insn	(x=0X35012E7D);
	op_stkvar	(x,	0);
	set_cmt	(0X35012E93,	"StackCookie",	0);
	create_insn	(0X35012EA2);
	set_name	(0X35012EA2,	"__handle_exc");
	create_insn	(x=0X35012EA7);
	op_hex		(x,	1);
	create_insn	(x=0X35012EAB);
	op_stkvar	(x,	1);
	create_insn	(x=0X35012EB1);
	op_hex		(x,	1);
	create_insn	(x=0X35012EB4);
	op_hex		(x,	1);
	create_insn	(x=0X35012EB9);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0X35012EC7);
	op_hex		(x,	1);
	create_insn	(0X35012ECF);
	create_insn	(x=0X35012ED1);
	op_stkvar	(x,	1);
	create_insn	(x=0X35012ED4);
	op_hex		(x,	1);
	create_insn	(x=0X35012EE0);
	op_hex		(x,	1);
	create_insn	(x=0X35012EE8);
	op_hex		(x,	1);
	create_insn	(x=0X35012EF1);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0X35012F02);
	op_stkvar	(x,	1);
	create_insn	(x=0X35012F21);
	op_stkvar	(x,	1);
	create_insn	(x=0X35012F30);
	op_hex		(x,	1);
	create_insn	(x=0X35012F37);
	op_stkvar	(x,	1);
	create_insn	(x=0X35012F40);
	op_hex		(x,	1);
	create_insn	(x=0X35012F4D);
	op_stkvar	(x,	1);
	create_insn	(x=0X35012F56);
	op_hex		(x,	1);
	create_insn	(x=0X35012F63);
	op_stkvar	(x,	1);
	create_insn	(x=0X35012F6C);
	op_hex		(x,	1);
	create_insn	(0X35012F79);
	create_insn	(x=0X35012F83);
	op_hex		(x,	1);
	create_insn	(x=0X35012F8B);
	op_hex		(x,	1);
	create_insn	(x=0X35012F94);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0X35012FA1);
	op_hex		(x,	1);
	create_insn	(x=0X35012FA7);
	op_stkvar	(x,	1);
	create_insn	(x=0X35012FB2);
	op_hex		(x,	1);
	create_insn	(x=0X35012FBD);
	op_stkvar	(x,	1);
	set_cmt	(0X35012FC0,	"int",	0);
	set_cmt	(0X35012FC3,	"double",	0);
	create_insn	(x=0X35012FC3);
	op_stkvar	(x,	1);
	create_insn	(x=0X35012FCB);
	op_stkvar	(x,	1);
	create_insn	(x=0X35012FCE);
	op_hex		(x,	1);
	create_insn	(x=0X35012FD6);
	op_stkvar	(x,	0);
	create_insn	(x=0X35012FD9);
	op_stkvar	(x,	1);
	create_insn	(0X35012FEC);
	create_insn	(x=0X35012FF2);
	op_hex		(x,	1);
	create_insn	(x=0X35012FF8);
	op_stkvar	(x,	1);
	create_insn	(x=0X35013000);
	op_hex		(x,	1);
	create_insn	(x=0X35013003);
	op_hex		(x,	1);
	create_insn	(x=0X35013006);
	op_stkvar	(x,	0);
	create_insn	(x=0X3501300A);
	op_stkvar	(x,	1);
	create_insn	(x=0X35013013);
	op_stkvar	(x,	1);
	create_insn	(x=0X35013016);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0X35013021);
	op_hex		(x,	1);
	create_insn	(x=0X35013023);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0X35013027);
	op_stkvar	(x,	0);
	create_insn	(x=0X3501302C);
	op_hex		(x,	1);
	create_insn	(x=0X35013031);
	op_stkvar	(x,	0);
	create_insn	(x=0X35013034);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0X3501303C);
	op_stkvar	(x,	1);
	create_insn	(x=0X35013045);
	op_stkvar	(x,	1);
	create_insn	(0X3501304C);
	create_insn	(x=0X3501305C);
	op_hex		(x,	1);
	create_insn	(x=0X3501305F);
	op_hex		(x,	1);
	create_insn	(x=0X35013064);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0X35013072);
	op_hex		(x,	1);
	create_insn	(0X35013082);
	set_name	(0X35013082,	"__raise_exc");
	set_cmt	(0X35013087,	"int",	0);
	set_cmt	(0X35013089,	"int",	0);
	create_insn	(x=0X35013089);
	op_stkvar	(x,	0);
	set_cmt	(0X3501308C,	"int",	0);
	create_insn	(x=0X3501308C);
	op_stkvar	(x,	0);
	set_cmt	(0X3501308F,	"int",	0);
	create_insn	(x=0X3501308F);
	op_stkvar	(x,	0);
	set_cmt	(0X35013092,	"int",	0);
	create_insn	(x=0X35013092);
	op_stkvar	(x,	0);
	set_cmt	(0X35013095,	"int",	0);
	create_insn	(x=0X35013095);
	op_stkvar	(x,	0);
	set_cmt	(0X35013098,	"Arguments",	0);
	create_insn	(x=0X35013098);
	op_stkvar	(x,	0);
	create_insn	(x=0X350130A0);
	op_hex		(x,	1);
	create_insn	(0X350130A5);
	set_name	(0X350130A5,	"__raise_exc_ex");
	create_insn	(x=0X350130AA);
	op_stkvar	(x,	1);
	create_insn	(x=0X350130B6);
	op_stkvar	(x,	1);
	create_insn	(x=0X350130C2);
	op_stkvar	(x,	1);
	create_insn	(x=0X350130C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X350130CB);
	op_hex		(x,	1);
	create_insn	(x=0X350130D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X350130DB);
	op_hex		(x,	1);
	create_insn	(x=0X350130E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X350130E8);
	op_hex		(x,	1);
	create_insn	(x=0X350130EC);
	op_hex		(x,	1);
	create_insn	(x=0X350130F1);
	op_stkvar	(x,	1);
	create_insn	(x=0X350130F9);
	op_hex		(x,	1);
	create_insn	(x=0X350130FD);
	op_hex		(x,	1);
	create_insn	(x=0X35013102);
	op_stkvar	(x,	1);
	create_insn	(x=0X3501310A);
	op_hex		(x,	1);
	create_insn	(x=0X3501310E);
	op_hex		(x,	1);
	create_insn	(x=0X35013113);
	op_stkvar	(x,	1);
	create_insn	(x=0X3501311B);
	op_hex		(x,	1);
	create_insn	(x=0X3501311F);
	op_stkvar	(x,	1);
	create_insn	(x=0X35013123);
	op_stkvar	(x,	1);
	create_insn	(x=0X35013128);
	op_hex		(x,	1);
	create_insn	(x=0X35013130);
	op_hex		(x,	1);
	create_insn	(x=0X35013136);
	op_stkvar	(x,	1);
	create_insn	(x=0X35013142);
	op_hex		(x,	1);
	create_insn	(x=0X35013148);
	op_stkvar	(x,	1);
	create_insn	(x=0X3501314D);
	op_hex		(x,	1);
	create_insn	(x=0X35013154);
	op_hex		(x,	1);
	create_insn	(x=0X3501315A);
	op_stkvar	(x,	1);
	create_insn	(x=0X3501315F);
	op_hex		(x,	1);
	create_insn	(x=0X35013167);
	op_hex		(x,	1);
	create_insn	(x=0X3501316F);
	op_stkvar	(x,	1);
	create_insn	(x=0X35013172);
	op_hex		(x,	1);
	create_insn	(x=0X35013186);
	op_hex		(x,	1);
	create_insn	(x=0X3501318B);
	op_stkvar	(x,	1);
	create_insn	(x=0X3501318E);
	op_hex		(x,	1);
	create_insn	(x=0X35013192);
	op_hex		(x,	1);
	create_insn	(x=0X35013197);
	op_stkvar	(x,	1);
	create_insn	(x=0X3501319A);
	op_hex		(x,	1);
	create_insn	(x=0X3501319E);
	op_hex		(x,	1);
	create_insn	(x=0X350131A3);
	op_stkvar	(x,	1);
	create_insn	(x=0X350131A6);
	op_hex		(x,	1);
	create_insn	(x=0X350131AA);
	op_hex		(x,	1);
	create_insn	(x=0X350131AF);
	op_stkvar	(x,	1);
	create_insn	(x=0X350131B2);
	op_hex		(x,	1);
	create_insn	(x=0X350131B6);
	op_hex		(x,	1);
	create_insn	(x=0X350131BB);
	op_stkvar	(x,	1);
	create_insn	(x=0X350131DE);
	op_stkvar	(x,	1);
	create_insn	(x=0X350131E1);
	op_hex		(x,	1);
	create_insn	(x=0X350131E6);
	op_stkvar	(x,	1);
	create_insn	(x=0X350131EB);
	op_hex		(x,	1);
	create_insn	(x=0X350131EE);
	op_hex		(x,	1);
	create_insn	(x=0X350131F5);
	op_stkvar	(x,	1);
	create_insn	(x=0X350131FA);
	op_hex		(x,	1);
	create_insn	(x=0X35013201);
	op_stkvar	(x,	1);
	create_insn	(x=0X35013204);
	op_hex		(x,	1);
	create_insn	(x=0X3501321D);
	op_stkvar	(x,	1);
	create_insn	(x=0X35013220);
	op_hex		(x,	1);
	create_insn	(x=0X35013225);
	op_stkvar	(x,	1);
	create_insn	(x=0X3501322A);
	op_hex		(x,	1);
	create_insn	(x=0X3501322D);
	op_hex		(x,	1);
	create_insn	(x=0X35013232);
	op_stkvar	(x,	1);
	create_insn	(x=0X35013237);
	op_hex		(x,	1);
	create_insn	(x=0X3501323A);
	op_hex		(x,	1);
	create_insn	(x=0X3501323F);
	op_stkvar	(x,	1);
	create_insn	(x=0X35013242);
	op_stkvar	(x,	1);
	create_insn	(x=0X35013245);
	op_hex		(x,	1);
	create_insn	(x=0X3501324A);
	op_hex		(x,	1);
	create_insn	(x=0X35013252);
	op_stkvar	(x,	1);
	create_insn	(x=0X35013258);
	op_stkvar	(x,	0);
	create_insn	(x=0X3501325E);
	op_stkvar	(x,	1);
	create_insn	(x=0X35013261);
	op_hex		(x,	1);
	create_insn	(x=0X35013265);
	op_stkvar	(x,	1);
	create_insn	(x=0X3501326A);
	op_stkvar	(x,	1);
	create_insn	(x=0X35013270);
	op_stkvar	(x,	1);
	create_insn	(x=0X35013276);
	op_stkvar	(x,	1);
	create_insn	(x=0X35013279);
	op_stkvar	(x,	1);
	create_insn	(x=0X3501327C);
	op_hex		(x,	1);
	create_insn	(x=0X35013280);
	op_stkvar	(x,	1);
	create_insn	(x=0X3501328A);
	op_stkvar	(x,	1);
	create_insn	(x=0X35013290);
	op_hex		(x,	1);
	create_insn	(x=0X35013293);
	op_hex		(x,	1);
	create_insn	(x=0X35013299);
	op_stkvar	(x,	1);
	create_insn	(x=0X3501329E);
	op_stkvar	(x,	1);
	create_insn	(x=0X350132A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X350132AA);
	op_stkvar	(x,	1);
	create_insn	(x=0X350132AD);
	op_stkvar	(x,	1);
	create_insn	(x=0X350132B3);
	op_hex		(x,	1);
	create_insn	(x=0X350132B6);
	op_hex		(x,	1);
	create_insn	(x=0X350132BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X350132C9);
	op_stkvar	(x,	1);
	set_cmt	(0X350132CC,	"lpArguments",	0);
	set_cmt	(0X350132CD,	"nNumberOfArguments",	0);
	set_cmt	(0X350132CF,	"dwExceptionFlags",	0);
	set_cmt	(0X350132D1,	"dwExceptionCode",	0);
	create_insn	(x=0X350132D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X350132DB);
	op_hex		(x,	1);
	create_insn	(x=0X350132E1);
	op_hex		(x,	1);
	create_insn	(x=0X350132E4);
	op_hex		(x,	1);
	create_insn	(x=0X350132EA);
	op_hex		(x,	1);
	create_insn	(x=0X350132ED);
	op_hex		(x,	1);
	create_insn	(x=0X350132F3);
	op_hex		(x,	1);
	create_insn	(x=0X350132F6);
	op_hex		(x,	1);
	create_insn	(x=0X350132FC);
	op_hex		(x,	1);
	create_insn	(x=0X350132FF);
	op_hex		(x,	1);
	create_insn	(x=0X35013305);
	op_hex		(x,	1);
	create_insn	(x=0X3501330F);
	op_hex		(x,	1);
	create_insn	(x=0X35013326);
	op_hex		(x,	1);
	create_insn	(0X3501332E);
	create_insn	(x=0X35013330);
	op_hex		(x,	1);
	create_insn	(x=0X35013335);
	op_hex		(x,	1);
	create_insn	(0X3501333E);
	create_insn	(x=0X35013340);
	op_hex		(x,	1);
	create_insn	(x=0X35013345);
	op_hex		(x,	1);
	create_insn	(0X3501334C);
	create_insn	(x=0X35013350);
	op_hex		(x,	1);
	create_insn	(x=0X35013353);
	op_hex		(x,	1);
	create_insn	(0X35013369);
	create_insn	(x=0X3501336D);
	op_hex		(x,	1);
	create_insn	(0X35013374);
	create_insn	(x=0X35013378);
	op_hex		(x,	1);
	create_insn	(x=0X3501337F);
	op_stkvar	(x,	0);
	create_insn	(0X3501338D);
	create_insn	(0X35013396);
	set_name	(0X35013396,	"__set_errno_from_matherr");
	create_insn	(x=0X3501339B);
	op_stkvar	(x,	1);
	create_insn	(0X350133B8);
	create_insn	(0X350133C5);
	set_name	(0X350133C5,	"__umatherr");
	create_insn	(x=0X350133CA);
	op_stkvar	(x,	1);
	create_insn	(x=0X350133CD);
	op_hex		(x,	1);
	create_insn	(0X350133E5);
	create_insn	(x=0X350133EC);
	op_stkvar	(x,	0);
	create_insn	(x=0X350133F3);
	op_stkvar	(x,	1);
	create_insn	(x=0X350133F6);
	op_stkvar	(x,	0);
	create_insn	(x=0X350133F9);
	op_stkvar	(x,	1);
	create_insn	(x=0X350133FC);
	op_stkvar	(x,	0);
	create_insn	(x=0X350133FF);
	op_stkvar	(x,	1);
	create_insn	(x=0X35013402);
	op_stkvar	(x,	0);
	create_insn	(x=0X35013405);
	op_stkvar	(x,	1);
	create_insn	(x=0X35013409);
	op_stkvar	(x,	1);
	create_insn	(x=0X3501340C);
	op_stkvar	(x,	0);
	create_insn	(x=0X3501340F);
	op_stkvar	(x,	1);
	create_insn	(x=0X35013417);
	op_stkvar	(x,	0);
	create_insn	(x=0X3501341A);
	op_stkvar	(x,	0);
	create_insn	(x=0X3501341D);
	op_stkvar	(x,	1);
	create_insn	(x=0X35013420);
	op_stkvar	(x,	0);
	create_insn	(x=0X35013423);
	op_stkvar	(x,	0);
	create_insn	(x=0X3501342B);
	op_stkvar	(x,	1);
	create_insn	(x=0X35013434);
	op_hex		(x,	1);
	create_insn	(x=0X35013442);
	op_stkvar	(x,	1);
	create_insn	(0X35013448);
	create_insn	(x=0X3501344D);
	op_stkvar	(x,	0);
	create_insn	(x=0X35013455);
	op_stkvar	(x,	0);
	create_insn	(x=0X3501345D);
	op_stkvar	(x,	1);
	create_insn	(x=0X35013460);
	op_hex		(x,	1);
	create_insn	(0X35013467);
	set_name	(0X35013467,	"__decomp");
	create_insn	(x=0X3501346C);
	op_stkvar	(x,	1);
	create_insn	(x=0X35013476);
	op_hex		(x,	1);
	create_insn	(0X35013484);
	create_insn	(x=0X35013485);
	op_stkvar	(x,	1);
	create_insn	(x=0X3501348C);
	op_hex		(x,	1);
	create_insn	(x=0X35013493);
	op_stkvar	(x,	1);
	create_insn	(x=0X35013496);
	op_stkvar	(x,	1);
	create_insn	(x=0X35013499);
	op_hex		(x,	1);
	create_insn	(x=0X350134AE);
	op_hex		(x,	1);
	create_insn	(0X350134B8);
	create_insn	(x=0X350134BA);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0X350134C2);
	op_stkvar	(x,	0);
	create_insn	(x=0X350134C9);
	op_hex		(x,	1);
	create_insn	(x=0X350134CC);
	op_stkvar	(x,	0);
	create_insn	(x=0X350134D2);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0X350134D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X350134DC);
	op_stkvar	(x,	0);
	create_insn	(x=0X350134E7);
	op_stkvar	(x,	0);
	create_insn	(x=0X350134F7);
	op_stkvar	(x,	0);
	create_insn	(x=0X350134FB);
	op_stkvar	(x,	1);
	create_insn	(x=0X35013502);
	op_stkvar	(x,	1);
	create_insn	(x=0X3501350A);
	op_hex		(x,	1);
	create_insn	(0X3501350F);
	create_insn	(x=0X35013515);
	op_stkvar	(x,	1);
	create_insn	(x=0X35013520);
	op_hex		(x,	1);
	create_insn	(x=0X35013523);
	op_hex		(x,	1);
	create_insn	(x=0X35013526);
	op_hex		(x,	1);
	create_insn	(x=0X35013533);
	op_stkvar	(x,	1);
	create_insn	(0X3501353B);
	set_name	(0X3501353B,	"__set_exp");
	create_insn	(x=0X35013542);
	op_stkvar	(x,	1);
	create_insn	(x=0X35013545);
	op_stkvar	(x,	1);
	create_insn	(x=0X3501354C);
	op_hex		(x,	1);
	create_insn	(x=0X35013551);
	op_stkvar	(x,	1);
	create_insn	(x=0X3501355A);
	op_hex		(x,	1);
	create_insn	(x=0X3501355F);
	op_stkvar	(x,	0);
	create_insn	(x=0X35013563);
	op_stkvar	(x,	1);
	create_insn	(0X3501356A);
	set_name	(0X3501356A,	"__sptype");
	create_insn	(x=0X3501356F);
	op_stkvar	(x,	0);
	create_insn	(x=0X35013576);
	op_stkvar	(x,	1);
	create_insn	(x=0X35013582);
	op_stkvar	(x,	0);
	create_insn	(x=0X35013594);
	op_stkvar	(x,	1);
	create_insn	(0X350135A9);
	create_insn	(x=0X350135B3);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(0X350135C4);
	create_insn	(0X350135C8);
	set_name	(0X350135C8,	"__fpclass");
	create_insn	(x=0X350135CD);
	op_stkvar	(x,	1);
	create_insn	(x=0X350135E1);
	op_stkvar	(x,	1);
	create_insn	(x=0X350135E6);
	op_stkvar	(x,	1);
	create_insn	(0X35013604);
	create_insn	(0X35013608);
	create_insn	(0X3501360D);
	create_insn	(0X35013614);
	create_insn	(x=0X35013617);
	op_hex		(x,	1);
	create_insn	(x=0X35013622);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0X3501362B);
	op_stkvar	(x,	0);
	create_insn	(x=0X35013635);
	op_hex		(x,	1);
	create_insn	(x=0X35013640);
	op_stkvar	(x,	1);
	create_insn	(x=0X35013649);
	op_hex		(x,	1);
	create_insn	(x=0X35013652);
	op_hex		(x,	1);
	create_insn	(0X3501365A);
	create_insn	(x=0X3501365E);
	op_hex		(x,	1);
	create_insn	(0X3501366C);
	set_name	(0X3501366C,	"IsProcessorFeaturePresent");
	create_insn	(0X35013672);
	set_name	(0X35013672,	"RtlUnwind");
	make_array	(0X35013678,	0X8);
	create_insn	(0X35013680);
	set_name	(0X35013680,	"__FindPESection");
	create_insn	(x=0X35013683);
	op_stkvar	(x,	1);
	create_insn	(x=0X350136A1);
	op_stkvar	(x,	1);
	make_array	(0X350136C3,	0XD);
	create_insn	(0X350136D0);
	set_name	(0X350136D0,	"__IsNonwritableInCurrentImage");
	create_insn	(x=0X350136D5);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X350136DA);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X350136E6);
	op_hex		(x,	1);
	create_insn	(x=0X350136F1);
	op_stkvar	(x,	0);
	create_insn	(x=0X350136F7);
	op_stkvar	(x,	1);
	create_insn	(x=0X35013700);
	op_stkvar	(x,	0);
	create_insn	(x=0X35013703);
	op_stkvar	(x,	0);
	create_insn	(x=0X35013714);
	op_hex		(x,	1);
	create_insn	(x=0X3501371B);
	op_stkvar	(x,	1);
	create_insn	(x=0X3501372E);
	op_hex		(x,	1);
	create_insn	(x=0X35013738);
	op_hex		(x,	1);
	create_insn	(x=0X3501373D);
	op_hex		(x,	1);
	create_insn	(x=0X35013740);
	op_stkvar	(x,	0);
	create_insn	(x=0X35013747);
	op_stkvar	(x,	1);
	create_insn	(x=0X35013759);
	op_stkvar	(x,	1);
	create_insn	(x=0X3501376C);
	op_stkvar	(x,	1);
	create_insn	(x=0X3501376F);
	op_stkvar	(x,	0);
	create_insn	(x=0X35013778);
	op_stkvar	(x,	1);
	make_array	(0X3501378A,	0X6);
	create_insn	(0X35013790);
	set_name	(0X35013790,	"__ValidateImageBase");
	create_insn	(x=0X35013793);
	op_stkvar	(x,	1);
	create_insn	(0X350137A4);
	make_array	(0X350137C1,	0XF);
	create_insn	(0X350137D0);
	set_name	(0X350137D0,	"__aulldvrm");
	create_insn	(x=0X350137D1);
	op_stkvar	(x,	1);
	create_insn	(x=0X350137D9);
	op_stkvar	(x,	1);
	create_insn	(x=0X350137DD);
	op_stkvar	(x,	1);
	create_insn	(x=0X350137E7);
	op_stkvar	(x,	1);
	create_insn	(x=0X350137F1);
	op_stkvar	(x,	1);
	create_insn	(x=0X350137F9);
	op_stkvar	(x,	1);
	create_insn	(0X35013801);
	create_insn	(x=0X35013803);
	op_stkvar	(x,	1);
	create_insn	(x=0X35013807);
	op_stkvar	(x,	1);
	create_insn	(x=0X3501380B);
	op_stkvar	(x,	1);
	create_insn	(x=0X3501380F);
	op_hex		(x,	1);
	create_insn	(x=0X35013811);
	op_hex		(x,	1);
	create_insn	(x=0X35013813);
	op_hex		(x,	1);
	create_insn	(x=0X35013815);
	op_hex		(x,	1);
	create_insn	(x=0X3501381F);
	op_stkvar	(x,	1);
	create_insn	(x=0X35013825);
	op_stkvar	(x,	1);
	create_insn	(x=0X3501382F);
	op_stkvar	(x,	1);
	create_insn	(x=0X35013837);
	op_stkvar	(x,	1);
	create_insn	(x=0X3501383E);
	op_stkvar	(x,	1);
	create_insn	(x=0X35013842);
	op_stkvar	(x,	1);
	create_insn	(x=0X35013848);
	op_stkvar	(x,	1);
	create_insn	(x=0X3501384C);
	op_stkvar	(x,	1);
	make_array	(0X35013865,	0XB);
	create_insn	(x=0X35013870);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X35013870,	"__SEH_prolog4_GS");
	create_insn	(x=0X3501387C);
	op_stkvar	(x,	1);
	create_insn	(x=0X35013880);
	op_stkvar	(x,	0);
	create_insn	(x=0X35013884);
	op_stkvar	(x,	1);
	create_insn	(0X350138B9);
	set_name	(0X350138B9,	"__SEH_epilog4_GS");
	set_cmt	(0X350138BC,	"StackCookie",	0);
	make_array	(0X350138CA,	0X6);
	create_insn	(0X350138D0);
	set_name	(0X350138D0,	"__alloca_probe_16");
	create_insn	(x=0X350138D1);
	op_stkvar	(x,	1);
	create_insn	(x=0X350138D7);
	op_hex		(x,	1);
	create_insn	(0X350138E6);
	set_name	(0X350138E6,	"__alloca_probe_8");
	create_insn	(x=0X350138E7);
	op_stkvar	(x,	1);
	create_insn	(x=0X350138ED);
	op_hex		(x,	1);
	make_array	(0X350138FC,	0X4);
	create_insn	(0X35013900);
	set_name	(0X35013900,	"__alldvrm");
	create_insn	(x=0X35013907);
	op_stkvar	(x,	1);
	create_insn	(x=0X35013911);
	op_stkvar	(x,	1);
	create_insn	(x=0X3501391C);
	op_stkvar	(x,	0);
	create_insn	(x=0X35013920);
	op_stkvar	(x,	0);
	create_insn	(x=0X35013924);
	op_stkvar	(x,	1);
	create_insn	(x=0X3501392D);
	op_stkvar	(x,	1);
	create_insn	(x=0X35013938);
	op_stkvar	(x,	0);
	create_insn	(x=0X3501393C);
	op_stkvar	(x,	0);
	create_insn	(x=0X35013944);
	op_stkvar	(x,	1);
	create_insn	(x=0X35013948);
	op_stkvar	(x,	1);
	create_insn	(x=0X35013952);
	op_stkvar	(x,	1);
	create_insn	(x=0X3501395C);
	op_stkvar	(x,	1);
	create_insn	(x=0X35013964);
	op_stkvar	(x,	1);
	create_insn	(0X3501396C);
	create_insn	(x=0X3501396E);
	op_stkvar	(x,	1);
	create_insn	(x=0X35013972);
	op_stkvar	(x,	1);
	create_insn	(x=0X35013976);
	op_stkvar	(x,	1);
	create_insn	(x=0X3501397A);
	op_hex		(x,	1);
	create_insn	(x=0X3501397C);
	op_hex		(x,	1);
	create_insn	(x=0X3501397E);
	op_hex		(x,	1);
	create_insn	(x=0X35013980);
	op_hex		(x,	1);
	create_insn	(x=0X3501398A);
	op_stkvar	(x,	1);
	create_insn	(x=0X35013990);
	op_stkvar	(x,	1);
	create_insn	(x=0X3501399A);
	op_stkvar	(x,	1);
	create_insn	(x=0X350139A2);
	op_stkvar	(x,	1);
	create_insn	(x=0X350139A9);
	op_stkvar	(x,	1);
	create_insn	(x=0X350139AD);
	op_stkvar	(x,	1);
	create_insn	(x=0X350139B3);
	op_stkvar	(x,	1);
	create_insn	(x=0X350139B7);
	op_stkvar	(x,	1);
	create_insn	(0X350139E0);
	set_name	(0X350139E0,	"__aullshr");
	create_insn	(0X350139F0);
	set_name	(0X350139F0,	"MORE32");
	create_insn	(x=0X350139F4);
	op_hex		(x,	1);
	create_insn	(0X350139FA);
	set_name	(0X350139FA,	"RETZERO");
	create_insn	(0X35013A00);
	set_name	(0X35013A00,	"__allshl");
	create_insn	(0X35013A10);
	set_name	(0X35013A10,	"MORE32_0");
	create_insn	(x=0X35013A14);
	op_hex		(x,	1);
	create_insn	(0X35013A1A);
	set_name	(0X35013A1A,	"RETZERO_0");
	create_insn	(0X35013A20);
	set_name	(0X35013A20,	"__ftol2_sse");
	create_insn	(0X35013A29);
	set_name	(0X35013A29,	"__ftol2_pentium4");
	create_insn	(x=0X35013A2C);
	op_hex		(x,	1);
	create_insn	(x=0X35013A2F);
	op_hex		(x,	1);
	create_insn	(x=0X35013A32);
	op_stkvar	(x,	1);
	create_insn	(x=0X35013A35);
	op_stkvar	(x,	1);
	create_insn	(0X35013A3C);
	set_name	(0X35013A3C,	"__ftol2_sse_excpt");
	create_insn	(x=0X35013A45);
	op_hex		(x,	1);
	create_insn	(x=0X35013A48);
	op_stkvar	(x,	0);
	create_insn	(x=0X35013A4C);
	op_hex		(x,	1);
	create_insn	(0X35013A60);
	set_name	(0X35013A60,	"__ftol2");
	create_insn	(x=0X35013A63);
	op_hex		(x,	1);
	create_insn	(x=0X35013A66);
	op_hex		(x,	1);
	create_insn	(x=0X35013A6B);
	op_stkvar	(x,	1);
	create_insn	(x=0X35013A6F);
	op_stkvar	(x,	1);
	create_insn	(x=0X35013A73);
	op_stkvar	(x,	1);
	create_insn	(x=0X35013A77);
	op_stkvar	(x,	1);
	create_insn	(x=0X35013A7B);
	op_stkvar	(x,	1);
	set_name	(0X35013A83,	"arg_is_not_integer_QnaN");
	create_insn	(x=0X35013A89);
	op_stkvar	(x,	1);
	create_insn	(x=0X35013A8C);
	op_stkvar	(x,	1);
	create_insn	(x=0X35013A8F);
	op_hex		(x,	1);
	create_insn	(x=0X35013A9E);
	op_stkvar	(x,	1);
	create_insn	(x=0X35013AA7);
	op_stkvar	(x,	1);
	set_name	(0X35013AA7,	"positive");
	create_insn	(x=0X35013AAA);
	op_stkvar	(x,	1);
	create_insn	(x=0X35013AB6);
	op_stkvar	(x,	1);
	create_insn	(x=0X35013ABF);
	op_stkvar	(x,	1);
	set_name	(0X35013ABF,	"integer_QnaN_or_zero");
	create_insn	(x=0X35013AC3);
	op_hex		(x,	1);
	create_insn	(x=0X35013ACB);
	op_stkvar	(x,	1);
	create_insn	(x=0X35013ACF);
	op_stkvar	(x,	1);
	set_name	(0X35013AD3,	"localexit");
	make_array	(0X35013AD5,	0XB);
	create_insn	(0X35013AE0);
	set_name	(0X35013AE0,	"_memmove_0");
	create_insn	(x=0X35013AE2);
	op_stkvar	(x,	1);
	create_insn	(x=0X35013AE6);
	op_stkvar	(x,	1);
	create_insn	(x=0X35013AEA);
	op_stkvar	(x,	1);
	set_name	(0X35013B00,	"CopyUp_0");
	create_insn	(0X35013B24);
	set_name	(0X35013B24,	"CopyUpLargeMov_0");
	create_insn	(x=0X35013B30);
	op_stkvar	(x,	1);
	create_insn	(0X35013B37);
	set_name	(0X35013B37,	"CopyUpSSE2Check_0");
	create_insn	(x=0X35013B3B);
	op_hex		(x,	1);
	set_name	(0X35013B50,	"AtomChk_0");
	create_insn	(x=0X35013B5E);
	op_hex		(x,	1);
	create_insn	(x=0X35013B6A);
	op_hex		(x,	1);
	set_name	(0X35013B76,	"PalignHead4_0");
	set_name	(0X35013B89,	"PalignHead8_0");
	create_insn	(x=0X35013BA0);
	op_hex		(x,	1);
	set_name	(0X35013BA0,	"PalignLoop_0");
	set_name	(0X35013BB2,	"MovPalign12_0");
	set_name	(0X35013BBC,	"PalignLoop12_0");
	create_insn	(0X35013C0D);
	set_name	(0X35013C0D,	"MovPalign8_0");
	set_name	(0X35013C18,	"PalignLoop8_0");
	create_insn	(0X35013C66);
	set_name	(0X35013C66,	"MovPalign4_0");
	set_name	(0X35013C70,	"PalignLoop4_0");
	set_name	(0X35013CBC,	"PalignTail_0");
	create_insn	(0X35013CD4);
	set_name	(0X35013CD4,	"PalignTail4_0");
	set_name	(0X35013CE7,	"PalignTail8_0");
	set_cmt	(0X35013CFE,	"switch 4 cases",	0);
	create_insn	(x=0X35013CFE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_name	(0X35013CFE,	"PalignTailLE3_0");
	set_cmt	(0X35013D05,	"switch jump",	0);
	create_insn	(x=0X35013D07);
	op_hex		(x,	1);
	set_name	(0X35013D07,	"Dword_align_0");
	set_name	(0X35013D0F,	"Dword_up_align_loop_0");
	create_insn	(x=0X35013D1A);
	op_hex		(x,	1);
	set_name	(0X35013D22,	"Dword_align_Ok_0");
	create_insn	(x=0X35013D2D);
	op_hex		(x,	1);
	create_insn	(x=0X35013D32);
	op_hex		(x,	1);
	set_cmt	(0X35013D35,	"switch 4 cases",	0);
	create_insn	(x=0X35013D35);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X35013D3C);
	set_name	(0X35013D3C,	"ByteCopyUp_0");
	set_cmt	(0X35013D44,	"jump table for switch statement",	0);
	create_dword	(x=0X35013D44);
	make_array	(x,	0X4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X35013D44,	"jpt_35013D05");
	set_cmt	(0X35013D54,	"jumptable 35013D05 case 0\njumptable 35013D35 case 0",	1);
	create_insn	(x=0X35013D54);
	op_stkvar	(x,	1);
	set_name	(0X35013D54,	"TrailingUp0_0");
	set_cmt	(0X35013D5C,	"jumptable 35013D05 case 1\njumptable 35013D35 case 1",	1);
	create_insn	(0X35013D5C);
	set_name	(0X35013D5C,	"TrailingUp1_0");
	create_insn	(x=0X35013D60);
	op_stkvar	(x,	1);
	set_cmt	(0X35013D68,	"jumptable 35013D05 case 2\njumptable 35013D35 case 2",	1);
	create_insn	(0X35013D68);
	set_name	(0X35013D68,	"TrailingUp2_0");
	create_insn	(x=0X35013D72);
	op_stkvar	(x,	1);
	make_array	(0X35013D79,	0X3);
	set_cmt	(0X35013D7C,	"jumptable 35013D05 case 3\njumptable 35013D35 case 3",	1);
	create_insn	(0X35013D7C);
	set_name	(0X35013D7C,	"TrailingUp3_0");
	create_insn	(x=0X35013D8C);
	op_stkvar	(x,	1);
	create_insn	(0X35013D94);
	set_name	(0X35013D94,	"CopyDown_0");
	create_insn	(x=0X35013DB1);
	op_hex		(x,	1);
	set_name	(0X35013DB9,	"CopyDownNotAligned_0");
	create_insn	(x=0X35013DBB);
	op_hex		(x,	1);
	set_name	(0X35013DC0,	"CopyDownAlignLoop_0");
	set_name	(0X35013DCD,	"CopyDownAligned_0");
	create_insn	(x=0X35013DD8);
	op_hex		(x,	1);
	create_insn	(x=0X35013DDB);
	op_hex		(x,	1);
	set_cmt	(0X35013DE8,	"switch 4 cases",	0);
	create_insn	(x=0X35013DE8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X35013DF0,	"jump table for switch statement",	0);
	create_dword	(x=0X35013DF0);
	make_array	(x,	0X4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X35013DF0,	"jpt_35013DE8");
	set_cmt	(0X35013E00,	"jumptable 35013DE8 case 0",	1);
	create_insn	(x=0X35013E00);
	op_stkvar	(x,	1);
	set_name	(0X35013E00,	"TrailingDown0_0");
	set_cmt	(0X35013E08,	"jumptable 35013DE8 case 1",	1);
	create_insn	(0X35013E08);
	set_name	(0X35013E08,	"TrailingDown1_0");
	create_insn	(x=0X35013E0E);
	op_stkvar	(x,	1);
	make_array	(0X35013E15,	0X3);
	set_cmt	(0X35013E18,	"jumptable 35013DE8 case 2",	1);
	create_insn	(0X35013E18);
	set_name	(0X35013E18,	"TrailingDown2_0");
	create_insn	(x=0X35013E24);
	op_stkvar	(x,	1);
	set_cmt	(0X35013E2C,	"jumptable 35013DE8 case 3",	1);
	create_insn	(0X35013E2C);
	set_name	(0X35013E2C,	"TrailingDown3_0");
	create_insn	(x=0X35013E3E);
	op_stkvar	(x,	1);
	create_insn	(x=0X35013E45);
	op_hex		(x,	1);
	set_name	(0X35013E45,	"XmmMovLargeAlignTest_0");
	set_name	(0X35013E4D,	"XmmMovAlignLoop_0");
	create_insn	(x=0X35013E54);
	op_hex		(x,	1);
	set_name	(0X35013E5C,	"XmmMovLargeLoop_0");
	create_insn	(x=0X35013EC4);
	op_hex		(x,	1);
	set_name	(0X35013ECC,	"XmmMovSmallTest_0");
	set_name	(0X35013ED1,	"XmmMovSmallLoop_0");
	create_insn	(x=0X35013EEC);
	op_hex		(x,	1);
	create_insn	(x=0X35013EF4);
	op_hex		(x,	1);
	set_name	(0X35013EF4,	"CopyDownSmall_0");
	set_name	(0X35013EFC,	"CopyDownDwordLoop_0");
	create_insn	(x=0X35013F09);
	op_hex		(x,	1);
	set_name	(0X35013F11,	"CopyDownByteTest_0");
	set_name	(0X35013F15,	"CopyDownByteLoop_0");
	create_insn	(x=0X35013F24);
	op_stkvar	(x,	1);
	set_name	(0X35013F24,	"CopyDownReturn_0");
	create_insn	(0X35013F2B);
	make_array	(0X35013F2D,	0X3);
	create_insn	(0X35013F30);
	set_name	(0X35013F30,	"XmmCopy_0");
	create_insn	(x=0X35013F32);
	op_hex		(x,	1);
	set_name	(0X35013F3D,	"XmmCopyAligned_0");
	create_insn	(x=0X35013F3F);
	op_hex		(x,	1);
	create_insn	(x=0X35013F42);
	op_hex		(x,	1);
	set_name	(0X35013F50,	"XmmCopyLargeLoop_0");
	set_name	(0X35013FAD,	"XmmCopySmallTest_0");
	create_insn	(x=0X35013FB3);
	op_hex		(x,	1);
	set_name	(0X35013FC0,	"XmmCopySmallLoop_0");
	create_insn	(x=0X35013FDB);
	op_hex		(x,	1);
	set_name	(0X35013FDB,	"CopyUpDwordMov_0");
	set_name	(0X35013FE0,	"CopyUpDwordTest_0");
	create_insn	(x=0X35013FE2);
	op_hex		(x,	1);
	set_name	(0X35013FE7,	"CopyUpDwordLoop_0");
	set_name	(0X35013FF6,	"CopyUpByteTest_0");
	create_insn	(x=0X35013FF8);
	op_hex		(x,	1);
	set_name	(0X35013FFD,	"CopyUpByteLoop_0");
	create_insn	(x=0X35014010);
	op_stkvar	(x,	1);
	set_name	(0X35014010,	"CopyUpReturn_0");
	make_array	(0X35014017,	0X9);
	create_insn	(0X35014020);
	set_name	(0X35014020,	"XmmCopyUnaligned_0");
	create_insn	(x=0X3501402E);
	op_hex		(x,	1);
	set_name	(0X35014033,	"XmmAlignByte_0");
	create_insn	(x=0X3501403C);
	op_hex		(x,	1);
	set_name	(0X3501403C,	"XmmAlignDwordTest_0");
	set_name	(0X35014041,	"XmmAlignDwordLoop_0");
	set_name	(0X3501404E,	"XmmAlignAdjustCnt_0");
	make_array	(0X35014054,	0XC);
	create_insn	(0X35014060);
	set_name	(0X35014060,	"_strrchr");
	create_insn	(x=0X35014071);
	op_stkvar	(x,	1);
	create_insn	(x=0X35014076);
	op_stkvar	(x,	1);
	create_insn	(x=0X3501407C);
	op_hex		(x,	1);
	create_insn	(x=0X35014094);
	op_hex		(x,	1);
	set_name	(0X3501409D,	"strrchr_sse_loop");
	create_insn	(x=0X350140C5);
	op_hex		(x,	1);
	create_insn	(0X350140CD);
	set_name	(0X350140CD,	"strrchr_sse_break");
	create_insn	(x=0X350140D4);
	op_hex		(x,	1);
	create_insn	(x=0X350140ED);
	op_stkvar	(x,	1);
	set_name	(0X350140ED,	"strrchr_sttni");
	create_insn	(x=0X350140F7);
	op_hex		(x,	1);
	set_name	(0X350140FF,	"strrchr_sttni_chars");
	create_insn	(x=0X3501410C);
	op_hex		(x,	1);
	set_name	(0X35014114,	"strrchr_sttni_aligned");
	set_name	(0X35014118,	"strrchr_sttni_xmm");
	set_name	(0X3501412B,	"exit");
	create_insn	(0X3501412E);
	set_name	(0X3501412E,	"strrchr_zero");
	set_name	(0X35014153,	"strchr_zero_loop");
	set_name	(0X35014167,	"strchr_zero_result");
	create_insn	(x=0X3501416E);
	op_stkvar	(x,	1);
	set_name	(0X3501416E,	"strrchr_no_sse");
	create_insn	(x=0X35014173);
	op_hex		(x,	1);
	create_insn	(x=0X35014180);
	op_stkvar	(x,	1);
	create_insn	(0X35014191);
	set_name	(0X35014191,	"returndi");
	set_name	(0X35014193,	"toend");
	make_array	(0X35014197,	0X69);
	create_dword	(0X35014200);
	make_array	(0X35014200,	0X380);
	update_extra_cmt		(0X35015000,	E_PREV + 0,	"; Section 2. (virtual address 00015000)");
	update_extra_cmt		(0X35015000,	E_PREV + 1,	"; Virtual size                  : 000059D8 (  23000.)");
	update_extra_cmt		(0X35015000,	E_PREV + 2,	"; Section size in file          : 00005A00 (  23040.)");
	update_extra_cmt		(0X35015000,	E_PREV + 3,	"; Offset to raw data for section: 00013600");
	update_extra_cmt		(0X35015000,	E_PREV + 4,	"; Flags 40000040: Data Readable");
	update_extra_cmt		(0X35015000,	E_PREV + 5,	"; Alignment     : default");
	update_extra_cmt		(0X35015000,	E_PREV + 6,	"; ");
	update_extra_cmt		(0X35015000,	E_PREV + 7,	"; Imports from KERNEL32.dll");
	update_extra_cmt		(0X35015000,	E_PREV + 8,	"; ");
	create_dword	(x=0X35015000);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X35015000,	"GetProcAddress");
	create_dword	(x=0X35015004);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X35015004,	"GetCurrentProcess");
	create_dword	(x=0X35015008);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X35015008,	"CreateThread");
	create_dword	(x=0X3501500C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X3501500C,	"GetCurrentThread");
	create_dword	(x=0X35015010);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X35015010,	"SetLastError");
	create_dword	(x=0X35015014);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X35015014,	"WaitForMultipleObjects");
	create_dword	(x=0X35015018);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X35015018,	"Sleep");
	create_dword	(x=0X3501501C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X3501501C,	"CloseHandle");
	create_dword	(x=0X35015020);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X35015020,	"WinExec");
	create_dword	(x=0X35015024);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X35015024,	"GetLocalTime");
	create_dword	(x=0X35015028);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X35015028,	"GetTickCount");
	create_dword	(x=0X3501502C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X3501502C,	"LoadLibraryA");
	create_dword	(x=0X35015030);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X35015030,	"GetSystemDirectoryA");
	create_dword	(x=0X35015034);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X35015034,	"CreateFileW");
	create_dword	(x=0X35015038);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X35015038,	"DecodePointer");
	create_dword	(x=0X3501503C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X3501503C,	"WriteConsoleW");
	create_dword	(x=0X35015040);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X35015040,	"SetFilePointerEx");
	create_dword	(x=0X35015044);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X35015044,	"QueryPerformanceCounter");
	create_dword	(x=0X35015048);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X35015048,	"GetCurrentProcessId");
	create_dword	(x=0X3501504C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X3501504C,	"GetCurrentThreadId");
	create_dword	(x=0X35015050);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X35015050,	"GetSystemTimeAsFileTime");
	create_dword	(x=0X35015054);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X35015054,	"InitializeSListHead");
	create_dword	(x=0X35015058);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X35015058,	"IsDebuggerPresent");
	create_dword	(x=0X3501505C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X3501505C,	"UnhandledExceptionFilter");
	create_dword	(x=0X35015060);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X35015060,	"SetUnhandledExceptionFilter");
	create_dword	(x=0X35015064);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X35015064,	"GetStartupInfoW");
	create_dword	(x=0X35015068);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X35015068,	"__imp_IsProcessorFeaturePresent");
	create_dword	(x=0X3501506C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X3501506C,	"GetModuleHandleW");
	create_dword	(x=0X35015070);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X35015070,	"TerminateProcess");
	create_dword	(x=0X35015074);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X35015074,	"__imp_RtlUnwind");
	create_dword	(x=0X35015078);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X35015078,	"GetLastError");
	create_dword	(x=0X3501507C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X3501507C,	"EnterCriticalSection");
	create_dword	(x=0X35015080);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X35015080,	"LeaveCriticalSection");
	create_dword	(x=0X35015084);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X35015084,	"DeleteCriticalSection");
	create_dword	(x=0X35015088);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X35015088,	"InitializeCriticalSectionAndSpinCount");
	create_dword	(x=0X3501508C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X3501508C,	"TlsAlloc");
	create_dword	(x=0X35015090);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X35015090,	"TlsGetValue");
	create_dword	(x=0X35015094);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X35015094,	"TlsSetValue");
	create_dword	(x=0X35015098);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X35015098,	"TlsFree");
	create_dword	(x=0X3501509C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X3501509C,	"FreeLibrary");
	create_dword	(x=0X350150A0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X350150A0,	"LoadLibraryExW");
	create_dword	(x=0X350150A4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X350150A4,	"ExitProcess");
	create_dword	(x=0X350150A8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X350150A8,	"GetModuleHandleExW");
	create_dword	(x=0X350150AC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X350150AC,	"GetStdHandle");
	create_dword	(x=0X350150B0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X350150B0,	"WriteFile");
	create_dword	(x=0X350150B4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X350150B4,	"GetModuleFileNameW");
	create_dword	(x=0X350150B8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X350150B8,	"MultiByteToWideChar");
	create_dword	(x=0X350150BC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X350150BC,	"WideCharToMultiByte");
	create_dword	(x=0X350150C0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X350150C0,	"GetACP");
	create_dword	(x=0X350150C4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X350150C4,	"HeapFree");
	create_dword	(x=0X350150C8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X350150C8,	"HeapAlloc");
	create_dword	(x=0X350150CC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X350150CC,	"GetStringTypeW");
	create_dword	(x=0X350150D0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X350150D0,	"LCMapStringW");
	create_dword	(x=0X350150D4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X350150D4,	"FindClose");
	create_dword	(x=0X350150D8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X350150D8,	"FindFirstFileExW");
	create_dword	(x=0X350150DC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X350150DC,	"FindNextFileW");
	create_dword	(x=0X350150E0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X350150E0,	"IsValidCodePage");
	create_dword	(x=0X350150E4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X350150E4,	"GetOEMCP");
	create_dword	(x=0X350150E8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X350150E8,	"GetCPInfo");
	create_dword	(x=0X350150EC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X350150EC,	"GetCommandLineA");
	create_dword	(x=0X350150F0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X350150F0,	"GetCommandLineW");
	create_dword	(x=0X350150F4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X350150F4,	"GetEnvironmentStringsW");
	create_dword	(x=0X350150F8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X350150F8,	"FreeEnvironmentStringsW");
	create_dword	(x=0X350150FC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X350150FC,	"SetStdHandle");
	create_dword	(x=0X35015100);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X35015100,	"GetFileType");
	create_dword	(x=0X35015104);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X35015104,	"GetProcessHeap");
	create_dword	(x=0X35015108);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X35015108,	"HeapSize");
	create_dword	(x=0X3501510C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X3501510C,	"HeapReAlloc");
	create_dword	(x=0X35015110);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X35015110,	"FlushFileBuffers");
	create_dword	(x=0X35015114);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X35015114,	"GetConsoleCP");
	create_dword	(x=0X35015118);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X35015118,	"GetConsoleMode");
	create_dword	(x=0X3501511C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X3501511C,	"RaiseException");
	create_byte	(0X35015120);
	make_array	(0X35015120,	0X4);
	update_extra_cmt		(0X35015124,	E_PREV + 0,	"; ");
	update_extra_cmt		(0X35015124,	E_PREV + 1,	"; Imports from WS2_32.dll");
	update_extra_cmt		(0X35015124,	E_PREV + 2,	"; ");
	create_dword	(x=0X35015124);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X35015124,	"htons");
	create_dword	(x=0X35015128);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X35015128,	"htonl");
	create_dword	(x=0X3501512C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X3501512C,	"bind");
	create_dword	(x=0X35015130);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X35015130,	"inet_addr");
	create_byte	(0X35015134);
	make_array	(0X35015134,	0X4);
	create_dword	(x=0X35015138);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X35015138,	"___guard_check_icall_fptr");
	create_dword	(0X3501513C);
	set_name	(0X3501513C,	"First");
	create_dword	(x=0X35015140);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X35015144);
	set_name	(0X35015144,	"Last");
	create_dword	(0X35015148);
	create_dword	(x=0X3501514C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X35015150);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X35015154);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X35015158);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X3501515C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X35015160);
	create_dword	(0X35015164);
	create_dword	(x=0X35015168);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X3501516C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X35015170);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X35015174);
	create_dword	(0X35015178);
	create_dword	(0X3501517C);
	create_qword	(0X35015180);
	create_word	(0X35015188);
	create_byte	(0X3501518A);
	create_word	(0X3501518C);
	make_array	(0X3501518E,	0X2);
	create_word	(0X35015190);
	make_array	(0X35015192,	0X2);
	create_word	(0X35015194);
	make_array	(0X35015196,	0X2);
	create_dword	(0X35015198);
	create_word	(0X3501519C);
	make_array	(0X3501519E,	0X2);
	create_dword	(0X350151A0);
	create_qword	(0X350151A4);
	create_dword	(0X350151AC);
	create_word	(0X350151B0);
	make_array	(0X350151B2,	0X2);
	create_word	(0X350151B4);
	create_byte	(0X350151B6);
	create_qword	(0X350151B8);
	create_dword	(0X350151C0);
	create_byte	(0X350151C4);
	make_array	(0X350151C5,	0X3);
	create_dword	(0X350151C8);
	create_dword	(0X350151CC);
	create_dword	(0X350151D0);
	create_dword	(0X350151D4);
	create_dword	(0X350151D8);
	create_word	(0X350151DC);
	make_array	(0X350151DE,	0X2);
	create_dword	(0X350151E0);
	create_dword	(0X350151E4);
	create_dword	(0X350151E8);
	create_word	(0X350151EC);
	create_byte	(0X350151EE);
	create_word	(0X350151F0);
	make_array	(0X350151F2,	0X2);
	create_dword	(0X350151F4);
	make_array	(0X350151F8,	0X8);
	create_oword	(0X35015200);
	create_oword	(0X35015210);
	create_oword	(0X35015220);
	MakeStruct	(0X35015230,	"_EXCEPTION_POINTERS");
	set_name	(0X35015230,	"ExceptionInfo");
	create_dword	(x=0X35015238);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X35015238,	"lpLibFileName");
	create_dword	(x=0X3501523C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X35015240);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X35015244);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_strlit	(0X35015248,	0X12);
	set_name	(0X35015248,	"aAdvapi32");
	make_array	(0X3501525A,	0X2);
	create_strlit	(0X3501525C,	0X3C);
	set_name	(0X3501525C,	"aApiMsWinCoreFi");
	create_strlit	(0X35015298,	0X3A);
	set_name	(0X35015298,	"aApiMsWinCoreSy");
	make_array	(0X350152D2,	0X2);
	create_strlit	(0X350152D4,	0X12);
	set_name	(0X350152D4,	"aKernel32");
	make_array	(0X350152E6,	0X2);
	create_strlit	(0X350152F0,	0X9);
	set_name	(0X350152F0,	"aFlsalloc");
	make_array	(0X350152F9,	0X3);
	create_strlit	(0X35015304,	0X8);
	set_name	(0X35015304,	"aFlsfree");
	create_strlit	(0X3501530C,	0XC);
	set_name	(0X3501530C,	"aFlsgetvalue");
	create_strlit	(0X35015320,	0XC);
	set_name	(0X35015320,	"aFlssetvalue");
	create_strlit	(0X35015334,	0X1C);
	set_name	(0X35015334,	"aInitializecrit");
	create_dword	(x=0X35015350);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X35015354);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X35015358);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X3501535C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X35015360);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X35015364);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X35015368);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X3501536C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X35015370);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X35015374);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X35015378);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X3501537C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X35015380);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X35015384);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X35015388);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X3501538C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X35015390);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X35015394);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X35015398);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X3501539C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X350153A0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X350153A4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X350153A8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X350153AC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X350153B0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X350153B4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X350153B8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X350153BC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X350153C0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X350153C4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X350153C8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X350153CC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X350153D0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X350153D4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X350153D8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X350153DC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X350153E0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X350153E4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X350153E8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X350153EC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X350153F0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X350153F4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X350153F8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X350153FC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X35015400);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X35015404);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X35015408);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X3501540C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X35015410);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X35015414);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X35015418);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X3501541C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X35015420);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X35015424);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X35015428);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X3501542C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X35015430);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X35015434);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X35015438);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X3501543C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X35015440);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X35015444);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X35015448);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X3501544C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X35015450);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X35015454);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X35015458);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X3501545C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X35015460);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X35015464);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X35015468);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X3501546C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X35015470);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X35015474);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X35015478);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X3501547C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X35015480);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X35015484);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X35015488);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X3501548C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X35015490);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X35015494);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X35015498);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X3501549C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X350154A0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X350154A4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X350154A8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X350154AC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X350154B0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X350154B4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X350154B8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X350154BC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X350154C0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X350154C4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X350154C8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X350154CC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X350154D0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X350154D4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X350154D8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X350154DC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_strlit	(0X350154E0,	0X9);
	set_name	(0X350154E0,	"aBased");
	make_array	(0X350154E9,	0X3);
	create_strlit	(0X350154EC,	0X8);
	set_name	(0X350154EC,	"aCdecl");
	create_strlit	(0X350154F4,	0X9);
	set_name	(0X350154F4,	"aPascal");
	make_array	(0X350154FD,	0X3);
	create_strlit	(0X35015500,	0XA);
	set_name	(0X35015500,	"aStdcall");
	make_array	(0X3501550A,	0X2);
	create_strlit	(0X3501550C,	0XB);
	set_name	(0X3501550C,	"aThiscall");
	create_strlit	(0X35015518,	0XB);
	set_name	(0X35015518,	"aFastcall");
	create_strlit	(0X35015524,	0XD);
	set_name	(0X35015524,	"aVectorcall");
	make_array	(0X35015531,	0X3);
	create_strlit	(0X35015534,	0XA);
	set_name	(0X35015534,	"aClrcall");
	make_array	(0X3501553E,	0X2);
	create_strlit	(0X35015540,	0X7);
	set_name	(0X35015540,	"aEabi");
	create_strlit	(0X35015548,	0X8);
	set_name	(0X35015548,	"aPtr64");
	create_strlit	(0X35015550,	0XB);
	set_name	(0X35015550,	"aRestrict");
	create_strlit	(0X3501555C,	0XC);
	set_name	(0X3501555C,	"aUnaligned");
	create_strlit	(0X35015568,	0XA);
	set_name	(0X35015568,	"aRestrict_0");
	create_strlit	(0X35015574,	0X5);
	set_name	(0X35015574,	"aNew");
	make_array	(0X35015579,	0X3);
	create_strlit	(0X3501557C,	0X8);
	set_name	(0X3501557C,	"aDelete");
	create_strlit	(0X35015584,	0X2);
	make_array	(0X35015586,	0X2);
	create_strlit	(0X35015588,	0X3);
	create_strlit	(0X3501558C,	0X3);
	create_strlit	(0X35015590,	0X2);
	make_array	(0X35015592,	0X2);
	create_strlit	(0X35015594,	0X3);
	create_strlit	(0X35015598,	0X3);
	create_strlit	(0X3501559C,	0X3);
	create_strlit	(0X350155A0,	0X9);
	set_name	(0X350155A0,	"aOperator");
	make_array	(0X350155A9,	0X3);
	create_strlit	(0X350155AC,	0X3);
	create_strlit	(0X350155B0,	0X2);
	make_array	(0X350155B2,	0X2);
	create_strlit	(0X350155B4,	0X3);
	create_strlit	(0X350155B8,	0X3);
	create_strlit	(0X350155BC,	0X2);
	make_array	(0X350155BE,	0X2);
	create_strlit	(0X350155C0,	0X2);
	make_array	(0X350155C2,	0X2);
	create_strlit	(0X350155C4,	0X2);
	make_array	(0X350155C6,	0X2);
	create_strlit	(0X350155C8,	0X4);
	create_strlit	(0X350155CC,	0X2);
	make_array	(0X350155CE,	0X2);
	create_strlit	(0X350155D0,	0X2);
	make_array	(0X350155D2,	0X2);
	create_strlit	(0X350155D4,	0X3);
	create_strlit	(0X350155D8,	0X2);
	make_array	(0X350155DA,	0X2);
	create_strlit	(0X350155DC,	0X3);
	create_strlit	(0X350155E0,	0X2);
	make_array	(0X350155E2,	0X2);
	create_strlit	(0X350155E4,	0X3);
	create_strlit	(0X350155E8,	0X2);
	make_array	(0X350155EA,	0X2);
	create_strlit	(0X350155EC,	0X2);
	make_array	(0X350155EE,	0X2);
	create_strlit	(0X350155F0,	0X3);
	create_strlit	(0X350155F4,	0X3);
	create_strlit	(0X350155F8,	0X3);
	create_strlit	(0X350155FC,	0X3);
	create_strlit	(0X35015600,	0X3);
	create_strlit	(0X35015604,	0X3);
	create_strlit	(0X35015608,	0X3);
	create_strlit	(0X3501560C,	0X4);
	create_strlit	(0X35015610,	0X4);
	create_strlit	(0X35015614,	0X3);
	create_strlit	(0X35015618,	0X3);
	create_strlit	(0X3501561C,	0X3);
	create_strlit	(0X35015620,	0XA);
	set_name	(0X35015620,	"aVftable");
	make_array	(0X3501562A,	0X2);
	create_strlit	(0X3501562C,	0XA);
	set_name	(0X3501562C,	"aVbtable");
	make_array	(0X35015636,	0X2);
	create_strlit	(0X35015638,	0X8);
	set_name	(0X35015638,	"aVcall");
	create_strlit	(0X35015640,	0X9);
	set_name	(0X35015640,	"aTypeof");
	make_array	(0X35015649,	0X3);
	create_strlit	(0X3501564C,	0X15);
	set_name	(0X3501564C,	"aLocalStaticGua");
	make_array	(0X35015661,	0X3);
	create_strlit	(0X35015664,	0X9);
	set_name	(0X35015664,	"aString");
	make_array	(0X3501566D,	0X3);
	create_strlit	(0X35015670,	0X13);
	set_name	(0X35015670,	"aVbaseDestructo");
	create_strlit	(0X35015684,	0X1D);
	set_name	(0X35015684,	"aVectorDeleting");
	make_array	(0X350156A1,	0X3);
	create_strlit	(0X350156A4,	0X1E);
	set_name	(0X350156A4,	"aDefaultConstru");
	make_array	(0X350156C2,	0X2);
	create_strlit	(0X350156C4,	0X1D);
	set_name	(0X350156C4,	"aScalarDeleting");
	make_array	(0X350156E1,	0X3);
	create_strlit	(0X350156E4,	0X1E);
	set_name	(0X350156E4,	"aVectorConstruc");
	make_array	(0X35015702,	0X2);
	create_strlit	(0X35015704,	0X1D);
	set_name	(0X35015704,	"aVectorDestruct");
	make_array	(0X35015721,	0X3);
	create_strlit	(0X35015724,	0X24);
	set_name	(0X35015724,	"aVectorVbaseCon");
	create_strlit	(0X35015748,	0X1B);
	set_name	(0X35015748,	"aVirtualDisplac");
	create_strlit	(0X35015764,	0X21);
	set_name	(0X35015764,	"aEhVectorConstr");
	make_array	(0X35015785,	0X3);
	create_strlit	(0X35015788,	0X20);
	set_name	(0X35015788,	"aEhVectorDestru");
	create_strlit	(0X350157A8,	0X27);
	set_name	(0X350157A8,	"aEhVectorVbaseC");
	create_strlit	(0X350157D0,	0X1B);
	set_name	(0X350157D0,	"aCopyConstructo");
	create_strlit	(0X350157EC,	0X10);
	set_name	(0X350157EC,	"aUdtReturning");
	create_strlit	(0X350157FC,	0X4);
	set_name	(0X350157FC,	"aEh");
	create_strlit	(0X35015800,	0X6);
	set_name	(0X35015800,	"aRtti");
	make_array	(0X35015806,	0X2);
	create_strlit	(0X35015808,	0X10);
	set_name	(0X35015808,	"aLocalVftable");
	create_strlit	(0X35015818,	0X24);
	set_name	(0X35015818,	"aLocalVftableCo");
	create_strlit	(0X3501583C,	0X7);
	set_name	(0X3501583C,	"aNew_0");
	create_strlit	(0X35015844,	0XA);
	set_name	(0X35015844,	"aDelete_0");
	make_array	(0X3501584E,	0X2);
	create_strlit	(0X35015850,	0XF);
	set_name	(0X35015850,	"aOmniCallsig");
	create_strlit	(0X35015860,	0X1B);
	set_name	(0X35015860,	"aPlacementDelet");
	create_strlit	(0X3501587C,	0X1D);
	set_name	(0X3501587C,	"aPlacementDelet_0");
	make_array	(0X35015899,	0X3);
	create_strlit	(0X3501589C,	0X26);
	set_name	(0X3501589C,	"aManagedVectorC");
	make_array	(0X350158C2,	0X2);
	create_strlit	(0X350158C4,	0X25);
	set_name	(0X350158C4,	"aManagedVectorD");
	make_array	(0X350158E9,	0X3);
	create_strlit	(0X350158EC,	0X26);
	set_name	(0X350158EC,	"aEhVectorCopyCo");
	make_array	(0X35015912,	0X2);
	create_strlit	(0X35015914,	0X2C);
	set_name	(0X35015914,	"aEhVectorVbaseC_0");
	create_strlit	(0X35015940,	0X1B);
	set_name	(0X35015940,	"aDynamicInitial");
	create_strlit	(0X3501595C,	0X21);
	set_name	(0X3501595C,	"aDynamicAtexitD");
	make_array	(0X3501597D,	0X3);
	create_strlit	(0X35015980,	0X23);
	set_name	(0X35015980,	"aVectorCopyCons");
	create_strlit	(0X350159A4,	0X29);
	set_name	(0X350159A4,	"aVectorVbaseCop");
	make_array	(0X350159CD,	0X3);
	create_strlit	(0X350159D0,	0X2B);
	set_name	(0X350159D0,	"aManagedVectorC_0");
	create_strlit	(0X350159FC,	0X1C);
	set_name	(0X350159FC,	"aLocalStaticThr");
	create_strlit	(0X35015A18,	0XD);
	set_name	(0X35015A18,	"aOperator_0");
	make_array	(0X35015A25,	0X3);
	create_strlit	(0X35015A28,	0X12);
	set_name	(0X35015A28,	"aTypeDescriptor");
	make_array	(0X35015A3A,	0X2);
	create_strlit	(0X35015A3C,	0X1C);
	set_name	(0X35015A3C,	"aBaseClassDescr");
	create_strlit	(0X35015A58,	0X13);
	set_name	(0X35015A58,	"aBaseClassArray");
	create_strlit	(0X35015A6C,	0X1D);
	set_name	(0X35015A6C,	"aClassHierarchy");
	make_array	(0X35015A89,	0X3);
	create_strlit	(0X35015A8C,	0X1A);
	set_name	(0X35015A8C,	"aCompleteObject");
	make_array	(0X35015AA6,	0X2);
	create_strlit	(0X35015AA8,	0X18);
	set_name	(0X35015AA8,	"ModuleName");
	create_strlit	(0X35015AC0,	0XF);
	set_name	(0X35015AC0,	"ProcName");
	create_dword	(0X35015B60);
	create_dword	(0X35015B64);
	create_dword	(0X35015B68);
	make_array	(0X35015B6C,	0X4);
	create_dword	(x=0X35015B70);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	make_array	(0X35015B74,	0X4);
	create_dword	(x=0X35015B78);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	make_array	(0X35015B7C,	0X4);
	create_dword	(x=0X35015B80);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X35015B84);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X35015B88);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X35015B8C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X35015B90);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X35015B94);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X35015B98);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X35015B9C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_strlit	(0X35015C04,	0X7);
	set_name	(0X35015C04,	"aSunday");
	create_strlit	(0X35015C0C,	0X7);
	set_name	(0X35015C0C,	"aMonday");
	create_strlit	(0X35015C14,	0X8);
	set_name	(0X35015C14,	"aTuesday");
	create_strlit	(0X35015C1C,	0XA);
	set_name	(0X35015C1C,	"aWednesday");
	make_array	(0X35015C26,	0X2);
	create_strlit	(0X35015C28,	0X9);
	set_name	(0X35015C28,	"aThursday");
	make_array	(0X35015C31,	0X3);
	create_strlit	(0X35015C34,	0X7);
	set_name	(0X35015C34,	"aFriday");
	create_strlit	(0X35015C3C,	0X9);
	set_name	(0X35015C3C,	"aSaturday");
	make_array	(0X35015C45,	0X3);
	create_strlit	(0X35015C48,	0X4);
	set_name	(0X35015C48,	"aJan");
	create_strlit	(0X35015C4C,	0X4);
	set_name	(0X35015C4C,	"aFeb");
	create_strlit	(0X35015C50,	0X4);
	set_name	(0X35015C50,	"aMar");
	create_strlit	(0X35015C54,	0X4);
	set_name	(0X35015C54,	"aApr");
	create_strlit	(0X35015C58,	0X4);
	set_name	(0X35015C58,	"aMay");
	create_strlit	(0X35015C5C,	0X4);
	set_name	(0X35015C5C,	"aJun");
	create_strlit	(0X35015C60,	0X4);
	set_name	(0X35015C60,	"aJul");
	create_strlit	(0X35015C64,	0X4);
	set_name	(0X35015C64,	"aAug");
	create_strlit	(0X35015C68,	0X4);
	set_name	(0X35015C68,	"aSep");
	create_strlit	(0X35015C6C,	0X4);
	set_name	(0X35015C6C,	"aOct");
	create_strlit	(0X35015C70,	0X4);
	set_name	(0X35015C70,	"aNov");
	create_strlit	(0X35015C74,	0X4);
	set_name	(0X35015C74,	"aDec");
	create_strlit	(0X35015C78,	0X8);
	set_name	(0X35015C78,	"aJanuary");
	create_strlit	(0X35015C80,	0X9);
	set_name	(0X35015C80,	"aFebruary");
	make_array	(0X35015C89,	0X3);
	create_strlit	(0X35015C8C,	0X6);
	set_name	(0X35015C8C,	"aMarch");
	make_array	(0X35015C92,	0X2);
	create_strlit	(0X35015C94,	0X6);
	set_name	(0X35015C94,	"aApril");
	make_array	(0X35015C9A,	0X2);
	create_strlit	(0X35015C9C,	0X5);
	set_name	(0X35015C9C,	"aJune");
	make_array	(0X35015CA1,	0X3);
	create_strlit	(0X35015CA4,	0X5);
	set_name	(0X35015CA4,	"aJuly");
	make_array	(0X35015CA9,	0X3);
	create_strlit	(0X35015CAC,	0X7);
	set_name	(0X35015CAC,	"aAugust");
	create_strlit	(0X35015CB4,	0XA);
	set_name	(0X35015CB4,	"aSeptember");
	make_array	(0X35015CBE,	0X2);
	create_strlit	(0X35015CC0,	0X8);
	set_name	(0X35015CC0,	"aOctober");
	create_strlit	(0X35015CC8,	0X9);
	set_name	(0X35015CC8,	"aNovember");
	make_array	(0X35015CD1,	0X3);
	create_strlit	(0X35015CD4,	0X9);
	set_name	(0X35015CD4,	"aDecember");
	make_array	(0X35015CDD,	0X3);
	create_strlit	(0X35015CE0,	0X3);
	set_name	(0X35015CE0,	"aAm");
	create_strlit	(0X35015CE4,	0X3);
	set_name	(0X35015CE4,	"aPm");
	create_strlit	(0X35015CE8,	0X9);
	set_name	(0X35015CE8,	"aMmDdYy");
	make_array	(0X35015CF1,	0X3);
	create_strlit	(0X35015CF4,	0X14);
	set_name	(0X35015CF4,	"aDdddMmmmDdYyyy");
	create_strlit	(0X35015D08,	0X9);
	set_name	(0X35015D08,	"aHhMmSs");
	make_array	(0X35015D11,	0X3);
	create_strlit	(0X35015D14,	0X8);
	set_name	(0X35015D14,	"aSun");
	create_strlit	(0X35015D1C,	0X8);
	set_name	(0X35015D1C,	"aMon");
	create_strlit	(0X35015D24,	0X8);
	set_name	(0X35015D24,	"aTue");
	create_strlit	(0X35015D2C,	0X8);
	set_name	(0X35015D2C,	"aWed");
	create_strlit	(0X35015D34,	0X8);
	set_name	(0X35015D34,	"aThu");
	create_strlit	(0X35015D3C,	0X8);
	set_name	(0X35015D3C,	"aFri");
	create_strlit	(0X35015D44,	0X8);
	set_name	(0X35015D44,	"aSat");
	create_strlit	(0X35015D4C,	0XE);
	set_name	(0X35015D4C,	"aSunday_0");
	make_array	(0X35015D5A,	0X2);
	create_strlit	(0X35015D5C,	0XE);
	set_name	(0X35015D5C,	"aMonday_0");
	make_array	(0X35015D6A,	0X2);
	create_strlit	(0X35015D6C,	0X10);
	set_name	(0X35015D6C,	"aTuesday_0");
	create_strlit	(0X35015D7C,	0X14);
	set_name	(0X35015D7C,	"aWednesday_0");
	create_strlit	(0X35015D90,	0X12);
	set_name	(0X35015D90,	"aThursday_0");
	make_array	(0X35015DA2,	0X2);
	create_strlit	(0X35015DA4,	0XE);
	set_name	(0X35015DA4,	"aFriday_0");
	make_array	(0X35015DB2,	0X2);
	create_strlit	(0X35015DB4,	0X12);
	set_name	(0X35015DB4,	"aSaturday_0");
	make_array	(0X35015DC6,	0X2);
	create_strlit	(0X35015DC8,	0X8);
	set_name	(0X35015DC8,	"aJan_0");
	create_strlit	(0X35015DD0,	0X8);
	set_name	(0X35015DD0,	"aFeb_0");
	create_strlit	(0X35015DD8,	0X8);
	set_name	(0X35015DD8,	"aMar_0");
	create_strlit	(0X35015DE0,	0X8);
	set_name	(0X35015DE0,	"aApr_0");
	create_strlit	(0X35015DE8,	0X8);
	set_name	(0X35015DE8,	"aMay_0");
	create_strlit	(0X35015DF0,	0X8);
	set_name	(0X35015DF0,	"aJun_0");
	create_strlit	(0X35015DF8,	0X8);
	set_name	(0X35015DF8,	"aJul_0");
	create_strlit	(0X35015E00,	0X8);
	set_name	(0X35015E00,	"aAug_0");
	create_strlit	(0X35015E08,	0X8);
	set_name	(0X35015E08,	"aSep_0");
	create_strlit	(0X35015E10,	0X8);
	set_name	(0X35015E10,	"aOct_0");
	create_strlit	(0X35015E18,	0X8);
	set_name	(0X35015E18,	"aNov_0");
	create_strlit	(0X35015E20,	0X8);
	set_name	(0X35015E20,	"aDec_0");
	create_strlit	(0X35015E28,	0X10);
	set_name	(0X35015E28,	"aJanuary_0");
	create_strlit	(0X35015E38,	0X12);
	set_name	(0X35015E38,	"aFebruary_0");
	make_array	(0X35015E4A,	0X2);
	create_strlit	(0X35015E4C,	0XC);
	set_name	(0X35015E4C,	"aMarch_0");
	create_strlit	(0X35015E58,	0XC);
	set_name	(0X35015E58,	"aApril_0");
	create_strlit	(0X35015E64,	0XA);
	set_name	(0X35015E64,	"aJune_0");
	make_array	(0X35015E6E,	0X2);
	create_strlit	(0X35015E70,	0XA);
	set_name	(0X35015E70,	"aJuly_0");
	make_array	(0X35015E7A,	0X2);
	create_strlit	(0X35015E7C,	0XE);
	set_name	(0X35015E7C,	"aAugust_0");
	make_array	(0X35015E8A,	0X2);
	create_strlit	(0X35015E8C,	0X14);
	set_name	(0X35015E8C,	"aSeptember_0");
	create_strlit	(0X35015EA0,	0X10);
	set_name	(0X35015EA0,	"aOctober_0");
	create_strlit	(0X35015EB0,	0X12);
	set_name	(0X35015EB0,	"aNovember_0");
	make_array	(0X35015EC2,	0X2);
	create_strlit	(0X35015EC4,	0X12);
	set_name	(0X35015EC4,	"aDecember_0");
	make_array	(0X35015ED6,	0X2);
	create_strlit	(0X35015ED8,	0X6);
	set_name	(0X35015ED8,	"aAm_0");
	make_array	(0X35015EDE,	0X2);
	create_strlit	(0X35015EE0,	0X6);
	set_name	(0X35015EE0,	"aPm_0");
	make_array	(0X35015EE6,	0X2);
	create_strlit	(0X35015EE8,	0X12);
	set_name	(0X35015EE8,	"aMmDdYy_0");
	make_array	(0X35015EFA,	0X2);
	create_strlit	(0X35015EFC,	0X28);
	set_name	(0X35015EFC,	"aDdddMmmmDdYyyy_0");
	create_strlit	(0X35015F24,	0X12);
	set_name	(0X35015F24,	"aHhMmSs_0");
	make_array	(0X35015F36,	0X2);
	create_strlit	(0X35015F38,	0XC);
	set_name	(0X35015F38,	"aEnUs");
	make_array	(0X35015F44,	0X4);
	create_dword	(x=0X35015F48);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X35015F4C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X35015F50);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X35015F54);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X35015F58);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X35015F5C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X35015F60);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X35015F64);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X35015F68);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X35015F6C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X35015F70);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X35015F74);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X35015F78);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X35015F7C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X35015F80);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X35015F84);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X35015F88);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X35015F8C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X35015F90);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X35015F94);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X35015F98);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X35015F9C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X35015FA0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X35015FA4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X35015FA8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X35015FAC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X35015FB0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X35015FB4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X35015FB8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X35015FBC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X35015FC0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X35015FC4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X35015FC8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X35015FCC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X35015FD0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X35015FD4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X35015FD8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X35015FDC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X35015FE0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X35015FE4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X35015FE8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X35015FEC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X35015FF0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_strlit	(0X350163B8,	0X42);
	create_dword	(0X350168B8);
	create_dword	(0X350168BC);
	create_dword	(x=0X35016A20);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X35016A24);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X35016A28);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X35016A2C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X35016A30);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X35016A34);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X35016A38);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X35016A3C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X35016A40);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X35016A44);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X35016A48);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X35016A4C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X35016A50);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X35016A54);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X35016A58);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X35016A5C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X35016A60);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X35016A64);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X35016A68);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X35016A6C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_strlit	(0X35016A70,	0X46);
	set_name	(0X35016A70,	"aApiMsWinAppmod");
	make_array	(0X35016AB6,	0X2);
	create_strlit	(0X35016AB8,	0X40);
	set_name	(0X35016AB8,	"aApiMsWinCoreDa");
	create_strlit	(0X35016AF8,	0X38);
	set_name	(0X35016AF8,	"aApiMsWinCoreFi_0");
	create_strlit	(0X35016B30,	0X48);
	set_name	(0X35016B30,	"aApiMsWinCoreLo");
	create_strlit	(0X35016B78,	0X5A);
	set_name	(0X35016B78,	"aApiMsWinCoreLo_0");
	make_array	(0X35016BD2,	0X6);
	create_strlit	(0X35016BD8,	0X4C);
	set_name	(0X35016BD8,	"aApiMsWinCorePr");
	create_strlit	(0X35016C24,	0X3C);
	set_name	(0X35016C24,	"aApiMsWinCoreSt");
	create_strlit	(0X35016C60,	0X3E);
	set_name	(0X35016C60,	"aApiMsWinCoreSy_0");
	make_array	(0X35016C9E,	0X2);
	create_strlit	(0X35016CA0,	0X3A);
	set_name	(0X35016CA0,	"aApiMsWinCoreWi");
	make_array	(0X35016CDA,	0X2);
	create_strlit	(0X35016CDC,	0X3C);
	set_name	(0X35016CDC,	"aApiMsWinCoreXs");
	create_strlit	(0X35016D18,	0X4E);
	set_name	(0X35016D18,	"aApiMsWinRtcore");
	make_array	(0X35016D66,	0X2);
	create_strlit	(0X35016D68,	0X56);
	set_name	(0X35016D68,	"aApiMsWinSecuri");
	make_array	(0X35016DBE,	0X2);
	create_strlit	(0X35016DC0,	0X56);
	set_name	(0X35016DC0,	"aExtMsWinKernel");
	make_array	(0X35016E16,	0X2);
	create_strlit	(0X35016E18,	0X46);
	set_name	(0X35016E18,	"aExtMsWinNtuser");
	make_array	(0X35016E5E,	0X2);
	create_strlit	(0X35016E60,	0X4E);
	set_name	(0X35016E60,	"aExtMsWinNtuser_0");
	make_array	(0X35016EAE,	0X2);
	create_strlit	(0X35016EB0,	0XE);
	set_name	(0X35016EB0,	"aUser32");
	make_array	(0X35016EBE,	0X2);
	create_strlit	(0X35016EE8,	0X14);
	set_name	(0X35016EE8,	"aGetcurrentpack");
	create_strlit	(0X35016EFC,	0X2);
	make_array	(0X35016EFE,	0X2);
	create_strlit	(0X35016F0C,	0XE);
	set_name	(0X35016F0C,	"aLcmapstringex");
	make_array	(0X35016F1A,	0X2);
	create_strlit	(0X35016F24,	0X11);
	set_name	(0X35016F24,	"aLocalenametolc");
	make_array	(0X35016F35,	0X3);
	create_dword	(x=0X35016F38);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X35016F3C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X35016F40);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X35016F44);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_strlit	(0X35016F48,	0XC);
	set_name	(0X35016F48,	"aJaJp");
	create_strlit	(0X35016F54,	0XC);
	set_name	(0X35016F54,	"aZhCn");
	create_strlit	(0X35016F60,	0XC);
	set_name	(0X35016F60,	"aKoKr");
	create_strlit	(0X35016F6C,	0XC);
	set_name	(0X35016F6C,	"aZhTw");
	create_strlit	(0X35016F78,	0X6);
	set_name	(0X35016F78,	"aUk");
	make_array	(0X35016F7E,	0X2);
	create_dword	(0X35016F80);
	create_dword	(x=0X35016F84);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_strlit	(0X350176A0,	0X6);
	set_name	(0X350176A0,	"aAr");
	make_array	(0X350176A6,	0X2);
	create_strlit	(0X350176A8,	0X6);
	set_name	(0X350176A8,	"aBg");
	make_array	(0X350176AE,	0X2);
	create_strlit	(0X350176B0,	0X6);
	set_name	(0X350176B0,	"aCa");
	make_array	(0X350176B6,	0X2);
	create_strlit	(0X350176B8,	0XE);
	set_name	(0X350176B8,	"aZhChs");
	make_array	(0X350176C6,	0X2);
	create_strlit	(0X350176C8,	0X6);
	set_name	(0X350176C8,	"aCs");
	make_array	(0X350176CE,	0X2);
	create_strlit	(0X350176D0,	0X6);
	set_name	(0X350176D0,	"aDa");
	make_array	(0X350176D6,	0X2);
	create_strlit	(0X350176D8,	0X6);
	set_name	(0X350176D8,	"aDe");
	make_array	(0X350176DE,	0X2);
	create_strlit	(0X350176E0,	0X6);
	set_name	(0X350176E0,	"aEl");
	make_array	(0X350176E6,	0X2);
	create_strlit	(0X350176E8,	0X6);
	set_name	(0X350176E8,	"aEn");
	make_array	(0X350176EE,	0X2);
	create_strlit	(0X350176F0,	0X6);
	set_name	(0X350176F0,	"aEs");
	make_array	(0X350176F6,	0X2);
	create_strlit	(0X350176F8,	0X6);
	set_name	(0X350176F8,	"aFi");
	make_array	(0X350176FE,	0X2);
	create_strlit	(0X35017700,	0X6);
	set_name	(0X35017700,	"aFr");
	make_array	(0X35017706,	0X2);
	create_strlit	(0X35017708,	0X6);
	set_name	(0X35017708,	"aHe");
	make_array	(0X3501770E,	0X2);
	create_strlit	(0X35017710,	0X6);
	set_name	(0X35017710,	"aHu");
	make_array	(0X35017716,	0X2);
	create_strlit	(0X35017718,	0X6);
	set_name	(0X35017718,	"aIs");
	make_array	(0X3501771E,	0X2);
	create_strlit	(0X35017720,	0X6);
	set_name	(0X35017720,	"aIt");
	make_array	(0X35017726,	0X2);
	create_strlit	(0X35017728,	0X6);
	set_name	(0X35017728,	"aJa");
	make_array	(0X3501772E,	0X2);
	create_strlit	(0X35017730,	0X6);
	set_name	(0X35017730,	"aKo");
	make_array	(0X35017736,	0X2);
	create_strlit	(0X35017738,	0X6);
	set_name	(0X35017738,	"aNl");
	make_array	(0X3501773E,	0X2);
	create_strlit	(0X35017740,	0X6);
	set_name	(0X35017740,	"aNo");
	make_array	(0X35017746,	0X2);
	create_strlit	(0X35017748,	0X6);
	set_name	(0X35017748,	"aPl");
	make_array	(0X3501774E,	0X2);
	create_strlit	(0X35017750,	0X6);
	set_name	(0X35017750,	"aPt");
	make_array	(0X35017756,	0X2);
	create_strlit	(0X35017758,	0X6);
	set_name	(0X35017758,	"aRo");
	make_array	(0X3501775E,	0X2);
	create_strlit	(0X35017760,	0X6);
	set_name	(0X35017760,	"aRu");
	make_array	(0X35017766,	0X2);
	create_strlit	(0X35017768,	0X6);
	set_name	(0X35017768,	"aHr");
	make_array	(0X3501776E,	0X2);
	create_strlit	(0X35017770,	0X6);
	set_name	(0X35017770,	"aSk");
	make_array	(0X35017776,	0X2);
	create_strlit	(0X35017778,	0X6);
	set_name	(0X35017778,	"aSq");
	make_array	(0X3501777E,	0X2);
	create_strlit	(0X35017780,	0X6);
	set_name	(0X35017780,	"aSv");
	make_array	(0X35017786,	0X2);
	create_strlit	(0X35017788,	0X6);
	set_name	(0X35017788,	"aTh");
	make_array	(0X3501778E,	0X2);
	create_strlit	(0X35017790,	0X6);
	set_name	(0X35017790,	"aTr");
	make_array	(0X35017796,	0X2);
	create_strlit	(0X35017798,	0X6);
	set_name	(0X35017798,	"aUr");
	make_array	(0X3501779E,	0X2);
	create_strlit	(0X350177A0,	0X6);
	set_name	(0X350177A0,	"aId");
	make_array	(0X350177A6,	0X2);
	create_strlit	(0X350177A8,	0X6);
	set_name	(0X350177A8,	"aBe");
	make_array	(0X350177AE,	0X2);
	create_strlit	(0X350177B0,	0X6);
	set_name	(0X350177B0,	"aSl");
	make_array	(0X350177B6,	0X2);
	create_strlit	(0X350177B8,	0X6);
	set_name	(0X350177B8,	"aEt");
	make_array	(0X350177BE,	0X2);
	create_strlit	(0X350177C0,	0X6);
	set_name	(0X350177C0,	"aLv");
	make_array	(0X350177C6,	0X2);
	create_strlit	(0X350177C8,	0X6);
	set_name	(0X350177C8,	"aLt");
	make_array	(0X350177CE,	0X2);
	create_strlit	(0X350177D0,	0X6);
	set_name	(0X350177D0,	"aFa");
	make_array	(0X350177D6,	0X2);
	create_strlit	(0X350177D8,	0X6);
	set_name	(0X350177D8,	"aVi");
	make_array	(0X350177DE,	0X2);
	create_strlit	(0X350177E0,	0X6);
	set_name	(0X350177E0,	"aHy");
	make_array	(0X350177E6,	0X2);
	create_strlit	(0X350177E8,	0X6);
	set_name	(0X350177E8,	"aAz");
	make_array	(0X350177EE,	0X2);
	create_strlit	(0X350177F0,	0X6);
	set_name	(0X350177F0,	"aEu");
	make_array	(0X350177F6,	0X2);
	create_strlit	(0X350177F8,	0X6);
	set_name	(0X350177F8,	"aMk");
	make_array	(0X350177FE,	0X2);
	create_strlit	(0X35017800,	0X6);
	set_name	(0X35017800,	"aAf");
	make_array	(0X35017806,	0X2);
	create_strlit	(0X35017808,	0X6);
	set_name	(0X35017808,	"aKa");
	make_array	(0X3501780E,	0X2);
	create_strlit	(0X35017810,	0X6);
	set_name	(0X35017810,	"aFo");
	make_array	(0X35017816,	0X2);
	create_strlit	(0X35017818,	0X6);
	set_name	(0X35017818,	"aHi");
	make_array	(0X3501781E,	0X2);
	create_strlit	(0X35017820,	0X6);
	set_name	(0X35017820,	"aMs");
	make_array	(0X35017826,	0X2);
	create_strlit	(0X35017828,	0X6);
	set_name	(0X35017828,	"aKk");
	make_array	(0X3501782E,	0X2);
	create_strlit	(0X35017830,	0X6);
	set_name	(0X35017830,	"aKy");
	make_array	(0X35017836,	0X2);
	create_strlit	(0X35017838,	0X6);
	set_name	(0X35017838,	"aSw");
	make_array	(0X3501783E,	0X2);
	create_strlit	(0X35017840,	0X6);
	set_name	(0X35017840,	"aUz");
	make_array	(0X35017846,	0X2);
	create_strlit	(0X35017848,	0X6);
	set_name	(0X35017848,	"aTt");
	make_array	(0X3501784E,	0X2);
	create_strlit	(0X35017850,	0X6);
	set_name	(0X35017850,	"aPa");
	make_array	(0X35017856,	0X2);
	create_strlit	(0X35017858,	0X6);
	set_name	(0X35017858,	"aGu");
	make_array	(0X3501785E,	0X2);
	create_strlit	(0X35017860,	0X6);
	set_name	(0X35017860,	"aTa");
	make_array	(0X35017866,	0X2);
	create_strlit	(0X35017868,	0X6);
	set_name	(0X35017868,	"aTe");
	make_array	(0X3501786E,	0X2);
	create_strlit	(0X35017870,	0X6);
	set_name	(0X35017870,	"aKn");
	make_array	(0X35017876,	0X2);
	create_strlit	(0X35017878,	0X6);
	set_name	(0X35017878,	"aMr");
	make_array	(0X3501787E,	0X2);
	create_strlit	(0X35017880,	0X6);
	set_name	(0X35017880,	"aSa");
	make_array	(0X35017886,	0X2);
	create_strlit	(0X35017888,	0X6);
	set_name	(0X35017888,	"aMn");
	make_array	(0X3501788E,	0X2);
	create_strlit	(0X35017890,	0X6);
	set_name	(0X35017890,	"aGl");
	make_array	(0X35017896,	0X2);
	create_strlit	(0X35017898,	0X8);
	set_name	(0X35017898,	"aKok");
	create_strlit	(0X350178A0,	0X8);
	set_name	(0X350178A0,	"aSyr");
	create_strlit	(0X350178A8,	0X8);
	set_name	(0X350178A8,	"aDiv");
	create_dword	(x=0X350180A0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X350180A4);
	create_dword	(x=0X350180A8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_tbyte	(0X35018FF0);
	make_array	(0X35018FFA,	0X2);
	create_tbyte	(0X35018FFC);
	make_array	(0X35019006,	0XA);
	create_strlit	(0X35019010,	0X6);
	set_name	(0X35019010,	"aLog10_0");
	make_array	(0X35019016,	0XA);
	create_oword	(0X35019020);
	create_oword	(0X35019030);
	create_oword	(0X35019040);
	create_oword	(0X35019050);
	create_double	(0X35019060);
	make_array	(0X35019068,	0X8);
	create_oword	(0X35019070);
	create_oword	(0X35019080);
	create_oword	(0X35019090);
	create_oword	(0X350190A0);
	create_oword	(0X350190B0);
	create_oword	(0X350190E0);
	create_oword	(0X350190F0);
	create_qword	(0X35019100);
	create_qword	(0X35019110);
	create_double	(0X35019118);
	create_oword	(0X35019130);
	create_oword	(0X35019140);
	create_oword	(0X35019150);
	create_oword	(0X35019160);
	create_tbyte	(0X35019170);
	create_tbyte	(0X3501917A);
	create_tbyte	(0X3501918E);
	create_double	(0X350191A2);
	create_tbyte	(0X350191D0);
	create_tbyte	(0X350191E4);
	create_double	(0X350191EE);
	create_double	(0X350191F6);
	create_double	(0X35019210);
	create_word	(0X35019218);
	create_double	(0X35019224);
	create_double	(0X3501922C);
	create_double	(0X35019234);
	create_double	(0X3501923C);
	create_double	(0X35019244);
	create_double	(0X3501924C);
	create_strlit	(0X35019258,	0X6);
	set_name	(0X35019258,	"aLog10");
	make_array	(0X3501925E,	0X2);
	create_strlit	(0X35019260,	0X4);
	set_name	(0X35019260,	"aExp");
	create_strlit	(0X35019264,	0X4);
	set_name	(0X35019264,	"aPow");
	create_strlit	(0X35019268,	0X5);
	set_name	(0X35019268,	"aAsin");
	make_array	(0X3501926D,	0X3);
	create_strlit	(0X35019270,	0X5);
	set_name	(0X35019270,	"aAcos");
	make_array	(0X35019275,	0X3);
	create_strlit	(0X35019278,	0X5);
	set_name	(0X35019278,	"aSqrt");
	make_array	(0X3501927D,	0X3);
	create_double	(0X35019280);
	create_strlit	(0X35019288,	0X10);
	set_name	(0X35019288,	"FileName");
	create_double	(0X35019AC0);
	create_strlit	(0X35019AC8,	0X5);
	set_name	(0X35019AC8,	"aTanh");
	make_array	(0X35019ACD,	0X3);
	create_strlit	(0X35019AD0,	0X5);
	set_name	(0X35019AD0,	"aAtan");
	make_array	(0X35019AD5,	0X3);
	create_strlit	(0X35019AD8,	0X6);
	set_name	(0X35019AD8,	"aAtan2");
	make_array	(0X35019ADE,	0X2);
	create_strlit	(0X35019AE0,	0X4);
	set_name	(0X35019AE0,	"aSin");
	create_strlit	(0X35019AE4,	0X4);
	set_name	(0X35019AE4,	"aCos");
	create_strlit	(0X35019AE8,	0X4);
	set_name	(0X35019AE8,	"aTan");
	create_strlit	(0X35019AEC,	0X5);
	set_name	(0X35019AEC,	"aCeil");
	make_array	(0X35019AF1,	0X3);
	create_strlit	(0X35019AF4,	0X6);
	set_name	(0X35019AF4,	"aFloor");
	make_array	(0X35019AFA,	0X2);
	create_strlit	(0X35019AFC,	0X5);
	set_name	(0X35019AFC,	"aFabs");
	make_array	(0X35019B01,	0X3);
	create_strlit	(0X35019B04,	0X5);
	set_name	(0X35019B04,	"aModf");
	make_array	(0X35019B09,	0X3);
	create_strlit	(0X35019B0C,	0X6);
	set_name	(0X35019B0C,	"aLdexp");
	make_array	(0X35019B12,	0X2);
	create_strlit	(0X35019B14,	0X6);
	set_name	(0X35019B14,	"aCabs");
	make_array	(0X35019B1A,	0X2);
	create_strlit	(0X35019B1C,	0X7);
	set_name	(0X35019B1C,	"aHypot");
	create_strlit	(0X35019B24,	0X5);
	set_name	(0X35019B24,	"aFmod");
	make_array	(0X35019B29,	0X3);
	create_strlit	(0X35019B2C,	0X6);
	set_name	(0X35019B2C,	"aFrexp");
	make_array	(0X35019B32,	0X2);
	create_strlit	(0X35019B34,	0X4);
	set_name	(0X35019B34,	"aY0");
	create_strlit	(0X35019B38,	0X4);
	set_name	(0X35019B38,	"aY1");
	create_strlit	(0X35019B3C,	0X4);
	set_name	(0X35019B3C,	"aYn");
	create_strlit	(0X35019B40,	0X6);
	set_name	(0X35019B40,	"aLogb");
	make_array	(0X35019B46,	0X2);
	create_strlit	(0X35019B48,	0XB);
	set_name	(0X35019B48,	"aNextafter");
	make_array	(0X35019B53,	0X5);
	create_dword	(0X35019B58);
	create_dword	(x=0X35019B5C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_double	(0X35019C50);
	create_double	(0X35019C58);
	create_double	(0X35019C60);
	make_array	(0X35019C68,	0X8);
	set_cmt	(0X35019C70,	"Characteristics",	0);
	update_extra_cmt		(0X35019C70,	E_PREV + 0,	"; Debug Directory entries");
	create_dword	(x=0X35019C70);
	op_hex		(x,	0);
	set_cmt	(0X35019C74,	"TimeDateStamp: Sun Feb 07 03:48:18 2021",	0);
	create_dword	(0X35019C74);
	set_cmt	(0X35019C78,	"MajorVersion",	0);
	create_word	(x=0X35019C78);
	op_hex		(x,	0);
	set_cmt	(0X35019C7A,	"MinorVersion",	0);
	create_word	(x=0X35019C7A);
	op_hex		(x,	0);
	set_cmt	(0X35019C7C,	"Type: IMAGE_DEBUG_TYPE_POGO",	0);
	create_dword	(x=0X35019C7C);
	op_hex		(x,	0);
	set_cmt	(0X35019C80,	"SizeOfData",	0);
	create_dword	(x=0X35019C80);
	op_hex		(x,	0);
	set_cmt	(0X35019C84,	"AddressOfRawData",	0);
	create_dword	(x=0X35019C84);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0X35000000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0X35000000,	0);
	set_cmt	(0X35019C88,	"PointerToRawData",	0);
	create_dword	(x=0X35019C88);
	op_hex		(x,	0);
	set_cmt	(0X35019C8C,	"Characteristics",	0);
	create_dword	(x=0X35019C8C);
	op_hex		(x,	0);
	set_cmt	(0X35019C90,	"TimeDateStamp: Sun Feb 07 03:48:18 2021",	0);
	create_dword	(0X35019C90);
	set_cmt	(0X35019C94,	"MajorVersion",	0);
	create_word	(x=0X35019C94);
	op_hex		(x,	0);
	set_cmt	(0X35019C96,	"MinorVersion",	0);
	create_word	(x=0X35019C96);
	op_hex		(x,	0);
	set_cmt	(0X35019C98,	"Type: IMAGE_DEBUG_TYPE_ILTCG",	0);
	create_dword	(x=0X35019C98);
	op_hex		(x,	0);
	set_cmt	(0X35019C9C,	"SizeOfData",	0);
	create_dword	(x=0X35019C9C);
	op_hex		(x,	0);
	set_cmt	(0X35019CA0,	"AddressOfRawData",	0);
	create_dword	(0X35019CA0);
	set_cmt	(0X35019CA4,	"PointerToRawData",	0);
	create_dword	(x=0X35019CA4);
	op_hex		(x,	0);
	set_cmt	(0X35019CA8,	"Size",	0);
	create_dword	(x=0X35019CA8);
	op_hex		(x,	0);
	set_name	(0X35019CA8,	"__load_config_used");
	set_cmt	(0X35019CAC,	"Time stamp",	0);
	create_dword	(0X35019CAC);
	set_cmt	(0X35019CB0,	"Version: 0.0",	0);
	create_word	(0X35019CB0);
	make_array	(0X35019CB0,	0X2);
	set_cmt	(0X35019CB4,	"GlobalFlagsClear",	0);
	create_dword	(x=0X35019CB4);
	op_hex		(x,	0);
	set_cmt	(0X35019CB8,	"GlobalFlagsSet",	0);
	create_dword	(x=0X35019CB8);
	op_hex		(x,	0);
	set_cmt	(0X35019CBC,	"CriticalSectionDefaultTimeout",	0);
	create_dword	(x=0X35019CBC);
	op_hex		(x,	0);
	set_cmt	(0X35019CC0,	"DeCommitFreeBlockThreshold",	0);
	create_dword	(0X35019CC0);
	set_cmt	(0X35019CC4,	"DeCommitTotalFreeThreshold",	0);
	create_dword	(0X35019CC4);
	set_cmt	(0X35019CC8,	"LockPrefixTable",	0);
	create_dword	(0X35019CC8);
	set_cmt	(0X35019CCC,	"MaximumAllocationSize",	0);
	create_dword	(0X35019CCC);
	set_cmt	(0X35019CD0,	"VirtualMemoryThreshold",	0);
	create_dword	(0X35019CD0);
	set_cmt	(0X35019CD4,	"ProcessAffinityMask",	0);
	create_dword	(0X35019CD4);
	set_cmt	(0X35019CD8,	"ProcessHeapFlags",	0);
	create_dword	(x=0X35019CD8);
	op_hex		(x,	0);
	set_cmt	(0X35019CDC,	"CSDVersion",	0);
	create_word	(0X35019CDC);
	set_cmt	(0X35019CDE,	"Reserved1",	0);
	create_word	(0X35019CDE);
	set_cmt	(0X35019CE0,	"EditList",	0);
	create_dword	(0X35019CE0);
	set_cmt	(0X35019CE4,	"SecurityCookie",	0);
	create_dword	(x=0X35019CE4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X35019CE8,	"SEHandlerTable",	0);
	create_dword	(x=0X35019CE8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X35019CEC,	"SEHandlerCount",	0);
	create_dword	(0X35019CEC);
	set_cmt	(0X35019CF0,	"GuardCFCheckFunctionPointer",	0);
	create_dword	(x=0X35019CF0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X35019CF4,	"GuardCFDispatchFunctionPointer",	0);
	create_dword	(0X35019CF4);
	set_cmt	(0X35019CF8,	"GuardCFFunctionTable",	0);
	create_dword	(0X35019CF8);
	set_cmt	(0X35019CFC,	"GuardCFFunctionCount",	0);
	create_dword	(0X35019CFC);
	set_cmt	(0X35019D00,	"GuardFlags",	0);
	create_dword	(x=0X35019D00);
	op_hex		(x,	0);
	make_array	(0X35019D04,	0XC);
	create_dword	(x=0X35019D10);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0X35000000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0X35000000,	0);
	set_name	(0X35019D10,	"___safe_se_handler_table");
	create_dword	(x=0X35019D14);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0X35000000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0X35000000,	0);
	create_dword	(x=0X35019D18);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0X35000000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0X35000000,	0);
	update_extra_cmt		(0X35019D1C,	E_PREV + 0,	"; Debug information (IMAGE_DEBUG_TYPE_POGO)");
	create_strlit	(0X35019D1C,	0X5);
	set_name	(0X35019D1C,	"aGctl");
	create_struct	(0X35019FC0,0X1C,	"_EH4_SCOPETABLE");
	make_array	(0X35019FDC,	0X4);
	create_struct	(0X35019FE0,0X1C,	"_EH4_SCOPETABLE");
	make_array	(0X35019FFC,	0X4);
	create_struct	(0X3501A000,0X28,	"_EH4_SCOPETABLE");
	create_struct	(0X3501A028,0X1C,	"_EH4_SCOPETABLE");
	make_array	(0X3501A044,	0X4);
	create_struct	(0X3501A048,0X1C,	"_EH4_SCOPETABLE");
	make_array	(0X3501A064,	0X4);
	create_struct	(0X3501A068,0X1C,	"_EH4_SCOPETABLE");
	make_array	(0X3501A084,	0X4);
	create_struct	(0X3501A088,0X1C,	"_EH4_SCOPETABLE");
	make_array	(0X3501A0A4,	0X4);
	create_struct	(0X3501A0A8,0X1C,	"_EH4_SCOPETABLE");
	make_array	(0X3501A0C4,	0X4);
	create_struct	(0X3501A0C8,0X1C,	"_EH4_SCOPETABLE");
	make_array	(0X3501A0E4,	0X4);
	create_struct	(0X3501A0E8,0X1C,	"_EH4_SCOPETABLE");
	make_array	(0X3501A104,	0X4);
	create_struct	(0X3501A108,0X1C,	"_EH4_SCOPETABLE");
	make_array	(0X3501A124,	0X4);
	create_struct	(0X3501A128,0X1C,	"_EH4_SCOPETABLE");
	make_array	(0X3501A144,	0X4);
	create_struct	(0X3501A148,0X1C,	"_EH4_SCOPETABLE");
	make_array	(0X3501A164,	0X4);
	create_struct	(0X3501A168,0X1C,	"_EH4_SCOPETABLE");
	make_array	(0X3501A184,	0X4);
	create_struct	(0X3501A188,0X1C,	"_EH4_SCOPETABLE");
	make_array	(0X3501A1A4,	0X4);
	create_struct	(0X3501A1A8,0X1C,	"_EH4_SCOPETABLE");
	make_array	(0X3501A1C4,	0X4);
	create_struct	(0X3501A1C8,0X1C,	"_EH4_SCOPETABLE");
	make_array	(0X3501A1E4,	0X4);
	create_struct	(0X3501A1E8,0X1C,	"_EH4_SCOPETABLE");
	make_array	(0X3501A204,	0X4);
	create_struct	(0X3501A208,0X1C,	"_EH4_SCOPETABLE");
	make_array	(0X3501A224,	0X4);
	create_struct	(0X3501A228,0X28,	"_EH4_SCOPETABLE");
	create_struct	(0X3501A250,0X1C,	"_EH4_SCOPETABLE");
	make_array	(0X3501A26C,	0X4);
	create_struct	(0X3501A270,0X1C,	"_EH4_SCOPETABLE");
	make_array	(0X3501A28C,	0X4);
	create_struct	(0X3501A290,0X1C,	"_EH4_SCOPETABLE");
	make_array	(0X3501A2AC,	0X4);
	create_struct	(0X3501A2B0,0X1C,	"_EH4_SCOPETABLE");
	make_array	(0X3501A2CC,	0X4);
	create_struct	(0X3501A2D0,0X1C,	"_EH4_SCOPETABLE");
	make_array	(0X3501A2EC,	0X4);
	create_struct	(0X3501A2F0,0X1C,	"_EH4_SCOPETABLE");
	make_array	(0X3501A30C,	0X4);
	create_struct	(0X3501A310,0X1C,	"_EH4_SCOPETABLE");
	set_cmt	(0X3501A32C,	"Import Name Table",	0);
	create_dword	(x=0X3501A32C);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0X35000000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0X35000000,	0);
	set_name	(0X3501A32C,	"__IMPORT_DESCRIPTOR_KERNEL32");
	set_cmt	(0X3501A330,	"Time stamp",	0);
	create_dword	(0X3501A330);
	set_cmt	(0X3501A334,	"Forwarder Chain",	0);
	create_dword	(0X3501A334);
	set_cmt	(0X3501A338,	"DLL Name",	0);
	create_dword	(x=0X3501A338);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0X35000000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0X35000000,	0);
	set_cmt	(0X3501A33C,	"Import Address Table",	0);
	create_dword	(x=0X3501A33C);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0X35000000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0X35000000,	0);
	set_cmt	(0X3501A340,	"Import Name Table",	0);
	create_dword	(x=0X3501A340);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0X35000000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0X35000000,	0);
	set_name	(0X3501A340,	"__IMPORT_DESCRIPTOR_WS2_32");
	set_cmt	(0X3501A344,	"Time stamp",	0);
	create_dword	(0X3501A344);
	set_cmt	(0X3501A348,	"Forwarder Chain",	0);
	create_dword	(0X3501A348);
	set_cmt	(0X3501A34C,	"DLL Name",	0);
	create_dword	(x=0X3501A34C);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0X35000000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0X35000000,	0);
	set_cmt	(0X3501A350,	"Import Address Table",	0);
	create_dword	(x=0X3501A350);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0X35000000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0X35000000,	0);
	update_extra_cmt		(0X3501A368,	E_PREV + 0,	"; ");
	update_extra_cmt		(0X3501A368,	E_PREV + 1,	"; Import names for KERNEL32.dll");
	update_extra_cmt		(0X3501A368,	E_PREV + 2,	"; ");
	create_dword	(x=0X3501A368);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0X35000000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0X35000000,	0);
	create_dword	(x=0X3501A36C);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0X35000000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0X35000000,	0);
	create_dword	(x=0X3501A370);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0X35000000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0X35000000,	0);
	create_dword	(x=0X3501A374);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0X35000000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0X35000000,	0);
	create_dword	(x=0X3501A378);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0X35000000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0X35000000,	0);
	create_dword	(x=0X3501A37C);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0X35000000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0X35000000,	0);
	create_dword	(x=0X3501A380);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0X35000000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0X35000000,	0);
	create_dword	(x=0X3501A384);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0X35000000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0X35000000,	0);
	create_dword	(x=0X3501A388);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0X35000000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0X35000000,	0);
	create_dword	(x=0X3501A38C);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0X35000000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0X35000000,	0);
	create_dword	(x=0X3501A390);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0X35000000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0X35000000,	0);
	create_dword	(x=0X3501A394);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0X35000000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0X35000000,	0);
	create_dword	(x=0X3501A398);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0X35000000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0X35000000,	0);
	create_dword	(x=0X3501A39C);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0X35000000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0X35000000,	0);
	create_dword	(x=0X3501A3A0);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0X35000000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0X35000000,	0);
	create_dword	(x=0X3501A3A4);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0X35000000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0X35000000,	0);
	create_dword	(x=0X3501A3A8);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0X35000000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0X35000000,	0);
	create_dword	(x=0X3501A3AC);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0X35000000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0X35000000,	0);
	create_dword	(x=0X3501A3B0);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0X35000000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0X35000000,	0);
	create_dword	(x=0X3501A3B4);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0X35000000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0X35000000,	0);
	create_dword	(x=0X3501A3B8);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0X35000000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0X35000000,	0);
	create_dword	(x=0X3501A3BC);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0X35000000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0X35000000,	0);
	create_dword	(x=0X3501A3C0);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0X35000000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0X35000000,	0);
	create_dword	(x=0X3501A3C4);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0X35000000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0X35000000,	0);
	create_dword	(x=0X3501A3C8);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0X35000000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0X35000000,	0);
	create_dword	(x=0X3501A3CC);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0X35000000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0X35000000,	0);
	create_dword	(x=0X3501A3D0);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0X35000000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0X35000000,	0);
	create_dword	(x=0X3501A3D4);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0X35000000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0X35000000,	0);
	create_dword	(x=0X3501A3D8);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0X35000000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0X35000000,	0);
	create_dword	(x=0X3501A3DC);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0X35000000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0X35000000,	0);
	create_dword	(x=0X3501A3E0);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0X35000000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0X35000000,	0);
	create_dword	(x=0X3501A3E4);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0X35000000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0X35000000,	0);
	create_dword	(x=0X3501A3E8);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0X35000000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0X35000000,	0);
	create_dword	(x=0X3501A3EC);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0X35000000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0X35000000,	0);
	create_dword	(x=0X3501A3F0);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0X35000000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0X35000000,	0);
	create_dword	(x=0X3501A3F4);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0X35000000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0X35000000,	0);
	create_dword	(x=0X3501A3F8);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0X35000000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0X35000000,	0);
	create_dword	(x=0X3501A3FC);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0X35000000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0X35000000,	0);
	create_dword	(x=0X3501A400);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0X35000000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0X35000000,	0);
	create_dword	(x=0X3501A404);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0X35000000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0X35000000,	0);
	create_dword	(x=0X3501A408);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0X35000000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0X35000000,	0);
	create_dword	(x=0X3501A40C);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0X35000000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0X35000000,	0);
	create_dword	(x=0X3501A410);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0X35000000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0X35000000,	0);
	create_dword	(x=0X3501A414);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0X35000000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0X35000000,	0);
	create_dword	(x=0X3501A418);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0X35000000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0X35000000,	0);
	create_dword	(x=0X3501A41C);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0X35000000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0X35000000,	0);
	create_dword	(x=0X3501A420);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0X35000000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0X35000000,	0);
	create_dword	(x=0X3501A424);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0X35000000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0X35000000,	0);
	create_dword	(x=0X3501A428);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0X35000000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0X35000000,	0);
	create_dword	(x=0X3501A42C);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0X35000000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0X35000000,	0);
	create_dword	(x=0X3501A430);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0X35000000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0X35000000,	0);
	create_dword	(x=0X3501A434);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0X35000000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0X35000000,	0);
	create_dword	(x=0X3501A438);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0X35000000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0X35000000,	0);
	create_dword	(x=0X3501A43C);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0X35000000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0X35000000,	0);
	create_dword	(x=0X3501A440);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0X35000000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0X35000000,	0);
	create_dword	(x=0X3501A444);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0X35000000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0X35000000,	0);
	create_dword	(x=0X3501A448);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0X35000000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0X35000000,	0);
	create_dword	(x=0X3501A44C);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0X35000000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0X35000000,	0);
	create_dword	(x=0X3501A450);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0X35000000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0X35000000,	0);
	create_dword	(x=0X3501A454);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0X35000000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0X35000000,	0);
	create_dword	(x=0X3501A458);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0X35000000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0X35000000,	0);
	create_dword	(x=0X3501A45C);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0X35000000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0X35000000,	0);
	create_dword	(x=0X3501A460);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0X35000000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0X35000000,	0);
	create_dword	(x=0X3501A464);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0X35000000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0X35000000,	0);
	create_dword	(x=0X3501A468);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0X35000000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0X35000000,	0);
	create_dword	(x=0X3501A46C);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0X35000000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0X35000000,	0);
	create_dword	(x=0X3501A470);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0X35000000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0X35000000,	0);
	create_dword	(x=0X3501A474);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0X35000000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0X35000000,	0);
	create_dword	(x=0X3501A478);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0X35000000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0X35000000,	0);
	create_dword	(x=0X3501A47C);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0X35000000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0X35000000,	0);
	create_dword	(x=0X3501A480);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0X35000000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0X35000000,	0);
	create_dword	(x=0X3501A484);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0X35000000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0X35000000,	0);
	create_dword	(0X3501A488);
	update_extra_cmt		(0X3501A48C,	E_PREV + 0,	"; ");
	update_extra_cmt		(0X3501A48C,	E_PREV + 1,	"; Import names for WS2_32.dll");
	update_extra_cmt		(0X3501A48C,	E_PREV + 2,	"; ");
	create_dword	(0X3501A48C);
	create_dword	(0X3501A490);
	create_dword	(0X3501A494);
	create_dword	(0X3501A498);
	create_dword	(0X3501A49C);
	create_word	(0X3501A4A0);
	create_strlit	(0X3501A4A2,	0XF);
	create_word	(0X3501A4B2);
	create_strlit	(0X3501A4B4,	0X12);
	create_word	(0X3501A4C6);
	create_strlit	(0X3501A4C8,	0XD);
	create_word	(0X3501A4D6);
	create_strlit	(0X3501A4D8,	0X11);
	create_word	(0X3501A4EA);
	create_strlit	(0X3501A4EC,	0XD);
	create_word	(0X3501A4FA);
	create_strlit	(0X3501A4FC,	0X17);
	create_word	(0X3501A514);
	create_strlit	(0X3501A516,	0X6);
	create_word	(0X3501A51C);
	create_strlit	(0X3501A51E,	0XC);
	create_word	(0X3501A52A);
	create_strlit	(0X3501A52C,	0X8);
	create_word	(0X3501A534);
	create_strlit	(0X3501A536,	0XD);
	create_word	(0X3501A544);
	create_strlit	(0X3501A546,	0XD);
	create_word	(0X3501A554);
	create_strlit	(0X3501A556,	0XD);
	create_word	(0X3501A564);
	create_strlit	(0X3501A566,	0X14);
	create_strlit	(0X3501A57A,	0XD);
	set_name	(0X3501A57A,	"aKernel32Dll");
	create_strlit	(0X3501A588,	0XB);
	set_name	(0X3501A588,	"aWs232Dll");
	create_word	(0X3501A594);
	create_strlit	(0X3501A596,	0X18);
	create_word	(0X3501A5AE);
	create_strlit	(0X3501A5B0,	0X14);
	create_word	(0X3501A5C4);
	create_strlit	(0X3501A5C6,	0X13);
	create_word	(0X3501A5DA);
	create_strlit	(0X3501A5DC,	0X18);
	create_word	(0X3501A5F4);
	create_strlit	(0X3501A5F6,	0X14);
	create_word	(0X3501A60A);
	create_strlit	(0X3501A60C,	0X12);
	create_word	(0X3501A61E);
	create_strlit	(0X3501A620,	0X19);
	create_word	(0X3501A63A);
	create_strlit	(0X3501A63C,	0X1C);
	create_word	(0X3501A658);
	create_strlit	(0X3501A65A,	0X10);
	create_word	(0X3501A66A);
	create_strlit	(0X3501A66C,	0X1A);
	create_word	(0X3501A686);
	create_strlit	(0X3501A688,	0X11);
	create_word	(0X3501A69A);
	create_strlit	(0X3501A69C,	0X11);
	create_word	(0X3501A6AE);
	create_strlit	(0X3501A6B0,	0XA);
	create_word	(0X3501A6BA);
	create_strlit	(0X3501A6BC,	0XD);
	create_word	(0X3501A6CA);
	create_strlit	(0X3501A6CC,	0X15);
	create_word	(0X3501A6E2);
	create_strlit	(0X3501A6E4,	0X15);
	create_word	(0X3501A6FA);
	create_strlit	(0X3501A6FC,	0X16);
	create_word	(0X3501A712);
	create_strlit	(0X3501A714,	0X26);
	create_word	(0X3501A73A);
	create_strlit	(0X3501A73C,	0X9);
	create_word	(0X3501A746);
	create_strlit	(0X3501A748,	0XC);
	create_word	(0X3501A754);
	create_strlit	(0X3501A756,	0XC);
	create_word	(0X3501A762);
	create_strlit	(0X3501A764,	0X8);
	create_word	(0X3501A76C);
	create_strlit	(0X3501A76E,	0XC);
	create_word	(0X3501A77A);
	create_strlit	(0X3501A77C,	0XF);
	create_word	(0X3501A78C);
	create_strlit	(0X3501A78E,	0XC);
	create_word	(0X3501A79A);
	create_strlit	(0X3501A79C,	0X13);
	create_word	(0X3501A7B0);
	create_strlit	(0X3501A7B2,	0XD);
	create_word	(0X3501A7C0);
	create_strlit	(0X3501A7C2,	0XA);
	create_word	(0X3501A7CC);
	create_strlit	(0X3501A7CE,	0X13);
	create_word	(0X3501A7E2);
	create_strlit	(0X3501A7E4,	0X14);
	create_word	(0X3501A7F8);
	create_strlit	(0X3501A7FA,	0X14);
	create_word	(0X3501A80E);
	create_strlit	(0X3501A810,	0X7);
	create_word	(0X3501A818);
	create_strlit	(0X3501A81A,	0X9);
	create_word	(0X3501A824);
	create_strlit	(0X3501A826,	0XA);
	create_word	(0X3501A830);
	create_strlit	(0X3501A832,	0XF);
	create_word	(0X3501A842);
	create_strlit	(0X3501A844,	0XD);
	create_word	(0X3501A852);
	create_strlit	(0X3501A854,	0XA);
	create_word	(0X3501A85E);
	create_strlit	(0X3501A860,	0X11);
	create_word	(0X3501A872);
	create_strlit	(0X3501A874,	0XE);
	create_word	(0X3501A882);
	create_strlit	(0X3501A884,	0X10);
	create_word	(0X3501A894);
	create_strlit	(0X3501A896,	0X9);
	create_word	(0X3501A8A0);
	create_strlit	(0X3501A8A2,	0XA);
	create_word	(0X3501A8AC);
	create_strlit	(0X3501A8AE,	0X10);
	create_word	(0X3501A8BE);
	create_strlit	(0X3501A8C0,	0X10);
	create_word	(0X3501A8D0);
	create_strlit	(0X3501A8D2,	0X17);
	create_word	(0X3501A8EA);
	create_strlit	(0X3501A8EC,	0X18);
	create_word	(0X3501A904);
	create_strlit	(0X3501A906,	0XD);
	create_word	(0X3501A914);
	create_strlit	(0X3501A916,	0XC);
	create_word	(0X3501A922);
	create_strlit	(0X3501A924,	0XF);
	create_word	(0X3501A934);
	create_strlit	(0X3501A936,	0X9);
	create_word	(0X3501A940);
	create_strlit	(0X3501A942,	0XC);
	create_word	(0X3501A94E);
	create_strlit	(0X3501A950,	0X11);
	create_word	(0X3501A962);
	create_strlit	(0X3501A964,	0XD);
	create_word	(0X3501A972);
	create_strlit	(0X3501A974,	0XF);
	create_word	(0X3501A984);
	create_strlit	(0X3501A986,	0X11);
	create_word	(0X3501A998);
	create_strlit	(0X3501A99A,	0XE);
	create_word	(0X3501A9A8);
	create_strlit	(0X3501A9AA,	0XE);
	create_word	(0X3501A9B8);
	create_strlit	(0X3501A9BA,	0XC);
	create_word	(0X3501A9C6);
	create_strlit	(0X3501A9C8,	0XF);
	make_array	(0X3501A9D7,	0X629);
	update_extra_cmt		(0X3501B000,	E_PREV + 0,	"; Section 3. (virtual address 0001B000)");
	update_extra_cmt		(0X3501B000,	E_PREV + 1,	"; Virtual size                  : 0000CBC4 (  52164.)");
	update_extra_cmt		(0X3501B000,	E_PREV + 2,	"; Section size in file          : 00005800 (  22528.)");
	update_extra_cmt		(0X3501B000,	E_PREV + 3,	"; Offset to raw data for section: 00019000");
	update_extra_cmt		(0X3501B000,	E_PREV + 4,	"; Flags C0000040: Data Readable Writable");
	update_extra_cmt		(0X3501B000,	E_PREV + 5,	"; Alignment     : default");
	create_dword	(0X3501B114);
	create_word	(0X3501B118);
	make_array	(0X3501B118,	0X404);
	create_word	(0X3501B920);
	make_array	(0X3501B920,	0X640);
	create_word	(0X3501C5A0);
	create_word	(0X3501C78C);
	make_array	(0X3501C78C,	0X10);
	create_strlit	(0X3501C7DC,	0X4);
	set_name	(0X3501C7DC,	"aEnso");
	create_byte	(0X3501C824);
	create_byte	(0X3501C83C);
	create_byte	(0X3501C87C);
	create_word	(0X3501C8C8);
	make_array	(0X3501C8C8,	0X22);
	create_word	(0X3501C910);
	create_strlit	(0X3501C96C,	0X3);
	set_name	(0X3501C96C,	"aTve");
	create_strlit	(0X3501C97C,	0X1);
	create_strlit	(0X3501C9AC,	0X6);
	set_name	(0X3501C9AC,	"a5Ee8");
	make_array	(0X3501C9B2,	0X2);
	create_word	(0X3501C9B4);
	create_byte	(x=0X3501CA1C);
	make_array	(x,	0X8);
	op_chr		(x,	0);
	create_word	(0X3501CA24);
	create_word	(0X3501CA8C);
	create_word	(0X3501CADC);
	create_word	(0X3501CB74);
	create_byte	(0X3501CCC8);
	create_word	(0X3501CEDC);
	create_byte	(0X3501CEEC);
	set_name	(0X3501CEEC,	"SubStr");
	create_byte	(x=0X3501CF90);
	make_array	(x,	0X8);
	op_chr		(x,	0);
	create_byte	(0X3501CFAC);
	create_dword	(0X3501CFAD);
	create_dword	(0X3501CFB1);
	create_word	(0X3501D000);
	create_word	(0X3501D06C);
	create_word	(0X3501D078);
	make_array	(0X3501D078,	0X4);
	create_word	(0X3501D080);
	create_strlit	(0X3501D15C,	0X5);
	set_name	(0X3501D15C,	"aUe");
	make_array	(0X3501D161,	0X3);
	create_strlit	(0X3501D164,	0X5);
	set_name	(0X3501D164,	"aAoae");
	create_word	(0X3501D214);
	create_strlit	(0X3501D2DC,	0X4);
	set_name	(0X3501D2DC,	"LibFileName");
	create_word	(0X3501D2F8);
	make_array	(0X3501D2F8,	0X6);
	create_word	(0X3501D304);
	create_word	(0X3501D338);
	create_strlit	(0X3501D574,	0X5);
	set_name	(0X3501D574,	"aOE");
	make_array	(0X3501D579,	0X3);
	create_word	(0X3501D57C);
	make_array	(0X3501D57C,	0X8);
	create_strlit	(0X3501D60C,	0X6);
	set_name	(0X3501D60C,	"aAwE9i");
	create_word	(0X3501D61C);
	create_word	(0X3501D640);
	create_strlit	(0X3501D79C,	0X1);
	create_strlit	(0X3501DA18,	0X1);
	create_word	(0X3501DB04);
	create_word	(0X3501DB20);
	create_word	(0X3501DB28);
	make_array	(0X3501DB28,	0XC);
	create_byte	(0X3501DB40);
	create_strlit	(0X3501DB58,	0X5);
	set_name	(0X3501DB58,	"aAfoo");
	make_array	(0X3501DB5D,	0X3);
	create_word	(0X3501DB60);
	make_array	(0X3501DB60,	0X8);
	create_word	(0X3501DCB8);
	create_word	(0X3501DD48);
	create_word	(0X3501DDE0);
	make_array	(0X3501DDE0,	0X8);
	create_word	(0X3501DE04);
	make_array	(0X3501DE04,	0X6);
	create_dword	(0X3501DFEC);
	create_byte	(0X3501DFF0);
	create_strlit	(0X3501DFF1,	0X1A06);
	set_name	(0X3501DFF1,	"aXkncbntppgqkzl");
	create_dword	(0X3501F9FC);
	create_byte	(0X3501FA00);
	create_byte	(0X3501FA02);
	create_byte	(0X3501FA04);
	create_byte	(0X3501FA06);
	create_byte	(0X3501FA08);
	create_byte	(0X3501FEA0);
	create_strlit	(0X3501FEA1,	0X63);
	set_name	(0X3501FEA1,	"aNvliqgxkdthbay");
	create_dword	(0X3501FF04);
	create_byte	(0X3501FF08);
	create_byte	(0X3501FF09);
	create_byte	(0X3501FF0A);
	create_byte	(0X3501FF0B);
	create_byte	(0X3501FF0C);
	create_byte	(0X3501FF0D);
	create_byte	(0X3501FF0E);
	create_byte	(0X3501FF0F);
	create_byte	(0X3501FF10);
	create_byte	(0X3501FF11);
	make_array	(0X3501FF12,	0X6);
	create_byte	(0X3501FF18);
	create_dword	(0X3501FF64);
	make_array	(0X3501FF68,	0X8);
	create_dword	(0X3501FF70);
	create_dword	(0X3501FF74);
	create_dword	(0X3501FF78);
	set_name	(0X3501FF78,	"___security_cookie");
	make_array	(0X3501FF7C,	0X4);
	create_dword	(0X3501FF80);
	set_name	(0X3501FF80,	"dwTlsIndex");
	make_array	(0X3501FF84,	0XC);
	create_byte	(0X3501FFA0);
	make_array	(0X3501FFA1,	0X3);
	create_dword	(0X3501FFA4);
	create_dword	(x=0X3501FFA8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X35020060);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X35020064);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X3502006C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_byte	(0X35020078);
	create_dword	(0X35020080);
	create_dword	(x=0X35020598);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X35020598,	"Block");
	create_dword	(x=0X350205A8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X350205AC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X350205B0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X350205B4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X350205B8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X350205BC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X350205C0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X350205C4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X350205C8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X350205CC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X350205D8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X350205DC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X350205E0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X350205E4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X350205E8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X350205EC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X350205F0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X350205F4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X350205F8);
	make_array	(0X350205FC,	0X4);
	create_dword	(0X350206B0);
	make_array	(0X350206B4,	0XC);
	create_dword	(0X350206C0);
	set_name	(0X350206C0,	"hObject");
	make_array	(0X350206C4,	0XC);
	create_dword	(0X350206E0);
	set_name	(0X350206E0,	"NtQueryInformationProcess");
	create_dword	(0X350206E4);
	create_dword	(0X350206E8);
	set_name	(0X350206E8,	"ShellExecuteA");
	create_dword	(0X350206EC);
	set_name	(0X350206EC,	"WNetCloseEnum");
	create_dword	(0X350206F0);
	set_name	(0X350206F0,	"WNetEnumResourceA");
	make_array	(0X350206F4,	0X4);
	create_dword	(0X350206F8);
	set_name	(0X350206F8,	"ExitProcess_0");
	create_dword	(0X350206FC);
	set_name	(0X350206FC,	"CloseHandle_0");
	create_dword	(0X35020700);
	set_name	(0X35020700,	"CoInitialize");
	create_dword	(0X35020704);
	create_dword	(0X35020708);
	set_name	(0X35020708,	"CryptEncrypt");
	create_dword	(0X3502070C);
	set_name	(0X3502070C,	"WinExec_0");
	create_dword	(0X35020710);
	set_name	(0X35020710,	"CryptDeriveKey");
	create_dword	(0X35020714);
	set_name	(0X35020714,	"GetUserNameW");
	create_dword	(0X35020718);
	set_name	(0X35020718,	"WaitForMultipleObjects_0");
	create_dword	(0X3502071C);
	make_array	(0X35020720,	0X20);
	create_dword	(0X35020740);
	set_name	(0X35020740,	"GetCurrentProcess_0");
	create_dword	(0X35020744);
	set_name	(0X35020744,	"CreateFileA");
	create_dword	(0X35021288);
	set_name	(0X35021288,	"GetIpNetTable");
	create_dword	(0X3502128C);
	set_name	(0X3502128C,	"CryptImportKey");
	create_dword	(0X35021290);
	set_name	(0X35021290,	"FindClose_0");
	create_dword	(0X35021294);
	set_name	(0X35021294,	"GetCommandLineW_0");
	create_dword	(0X35021298);
	set_name	(0X35021298,	"GetSystemDefaultLangID");
	create_dword	(0X3502129C);
	set_name	(0X3502129C,	"CryptGenKey");
	create_dword	(0X350212A0);
	set_name	(0X350212A0,	"GetVersionExW");
	create_word	(0X350212A6);
	create_word	(0X350212A8);
	create_dword	(0X350212AA);
	create_word	(0X350239B8);
	create_dword	(0X350260D0);
	set_name	(0X350260D0,	"RegDeleteValueW");
	create_dword	(0X350260D4);
	set_name	(0X350260D4,	"SetFilePointer");
	create_dword	(0X350268BC);
	make_array	(0X350268C0,	0X140);
	create_dword	(0X35026A00);
	create_dword	(0X35026A04);
	set_name	(0X35026A04,	"Wow64DisableWow64FsRedirection");
	create_word	(0X35026A08);
	make_array	(0X35026A08,	0X2);
	create_word	(0X35026A0C);
	create_dword	(0X35026C88);
	set_name	(0X35026C88,	"VirtualFree");
	create_dword	(0X35026C8C);
	create_dword	(0X35026CF8);
	set_name	(0X35026CF8,	"GetModuleFileNameW_0");
	create_dword	(0X35026CFC);
	set_name	(0X35026CFC,	"GetFileAttributesW");
	create_dword	(0X35026D00);
	set_name	(0X35026D00,	"WNetOpenEnumA");
	create_dword	(0X35026D04);
	set_name	(0X35026D04,	"GetFileAttributesA");
	create_dword	(0X35026D08);
	set_name	(0X35026D08,	"Wow64RevertWow64FsRedirection");
	create_dword	(0X35026D0C);
	set_name	(0X35026D0C,	"GetStartupInfoW_0");
	create_dword	(0X35026D14);
	set_name	(0X35026D14,	"CryptAcquireContextW");
	create_word	(0X35026D18);
	make_array	(0X35026D18,	0X9);
	create_dword	(0X35026F20);
	set_name	(0X35026F20,	"ReadFile");
	make_array	(0X35026F24,	0X4);
	create_dword	(0X35026F28);
	set_name	(0X35026F28,	"CreateFileW_0");
	make_array	(0X35026F2C,	0X4);
	create_dword	(0X35026F30);
	set_name	(0X35026F30,	"RegOpenKeyExA");
	create_dword	(0X35026F34);
	set_name	(0X35026F34,	"VirtualAlloc");
	create_dword	(0X35026F38);
	set_name	(0X35026F38,	"Sleep_0");
	create_dword	(0X35026F3C);
	set_name	(0X35026F3C,	"CryptExportKey");
	create_dword	(0X35026F40);
	set_name	(0X35026F40,	"WriteFile_0");
	create_dword	(0X35026F44);
	set_name	(0X35026F44,	"CreateProcessW");
	create_dword	(0X35026F48);
	set_name	(0X35026F48,	"GetLogicalDrives");
	create_dword	(0X35026F4C);
	set_name	(0X35026F4C,	"FindNextFileW_0");
	create_dword	(0X35026F50);
	set_name	(0X35026F50,	"GetFileSizeEx");
	create_dword	(0X35026F54);
	set_name	(0X35026F54,	"CopyFileW");
	create_dword	(0X35026F58);
	set_name	(0X35026F58,	"RegOpenKeyExW");
	create_dword	(0X35026F5C);
	set_name	(0X35026F5C,	"CreateDirectoryW");
	create_dword	(0X35026F60);
	set_name	(0X35026F60,	"GetDriveTypeW");
	create_dword	(0X35026F64);
	set_name	(0X35026F64,	"GlobalAlloc");
	create_dword	(0X35026F68);
	set_name	(0X35026F68,	"DeleteFileW");
	make_array	(0X35026F6C,	0X4);
	create_dword	(0X35026F70);
	set_name	(0X35026F70,	"CryptDecrypt");
	create_dword	(0X35026F74);
	set_name	(0X35026F74,	"CreateProcessA");
	create_dword	(0X35026F78);
	create_dword	(0X35026F7C);
	set_name	(0X35026F7C,	"GetModuleHandleA");
	create_dword	(0X35026F80);
	set_name	(0X35026F80,	"RegQueryValueExA");
	create_dword	(0X35026F84);
	set_name	(0X35026F84,	"GetUserNameA");
	create_dword	(0X35026F88);
	set_name	(0X35026F88,	"FreeLibrary_0");
	create_dword	(0X35026F8C);
	set_name	(0X35026F8C,	"SetFileAttributesW");
	create_dword	(0X35026F90);
	set_name	(0X35026F90,	"CoCreateInstance");
	create_dword	(0X35026F94);
	set_name	(0X35026F94,	"GetModuleFileNameA");
	create_dword	(0X35026F98);
	set_name	(0X35026F98,	"SetFileAttributesA");
	create_dword	(0X35026F9C);
	set_name	(0X35026F9C,	"MoveFileExW");
	create_dword	(0X35026FA0);
	set_name	(0X35026FA0,	"SetFilePointerEx_0");
	create_dword	(0X35026FA4);
	set_name	(0X35026FA4,	"GetWindowsDirectoryW");
	create_dword	(0X35026FB4);
	set_name	(0X35026FB4,	"CommandLineToArgvW");
	create_dword	(0X35026FB8);
	set_name	(0X35026FB8,	"AdjustTokenPrivileges");
	create_dword	(0X35026FBC);
	set_name	(0X35026FBC,	"EnumServicesStatusW");
	create_dword	(0X35026FC0);
	set_name	(0X35026FC0,	"GetTokenInformation");
	create_dword	(0X35026FC4);
	set_name	(0X35026FC4,	"ImpersonateSelf");
	create_dword	(0X35026FC8);
	set_name	(0X35026FC8,	"LookupPrivilegeValueW");
	create_dword	(0X35026FCC);
	set_name	(0X35026FCC,	"OpenProcessToken");
	create_dword	(0X35026FD0);
	set_name	(0X35026FD0,	"OpenSCManagerW");
	create_dword	(0X35026FD4);
	set_name	(0X35026FD4,	"OpenThreadToken");
	create_dword	(0X35026FD8);
	set_name	(0X35026FD8,	"VirtualAllocEx");
	create_dword	(0X35026FDC);
	set_name	(0X35026FDC,	"LookupAccountSidW");
	create_dword	(0X35026FE0);
	set_name	(0X35026FE0,	"WriteProcessMemory");
	make_array	(0X35026FE4,	0X4);
	create_dword	(0X35026FE8);
	set_name	(0X35026FE8,	"VirtualFreeEx");
	create_dword	(0X35026FEC);
	set_name	(0X35026FEC,	"CreateRemoteThread");
	create_dword	(0X35026FF4);
	set_name	(0X35026FF4,	"GetTempPathW");
	create_dword	(0X35026FF8);
	set_name	(0X35026FF8,	"CreateToolhelp32Snapshot");
	create_dword	(0X35026FFC);
	set_name	(0X35026FFC,	"Process32FirstW");
	create_dword	(0X35027000);
	set_name	(0X35027000,	"Process32NextW");
	create_dword	(0X35027004);
	set_name	(0X35027004,	"GetAdaptersAddresses");
	create_dword	(0X35027008);
	set_name	(0X35027008,	"IcmpCloseHandle");
	create_dword	(0X3502700C);
	set_name	(0X3502700C,	"IcmpCreateFile");
	create_dword	(0X35027010);
	set_name	(0X35027010,	"IcmpSendEcho");
	create_dword	(0X35027014);
	set_name	(0X35027014,	"WNetOpenEnumW");
	create_dword	(0X35027018);
	set_name	(0X35027018,	"WNetEnumResourceW");
	create_dword	(0X3502701C);
	create_dword	(0X35027020);
	set_name	(0X35027020,	"WSAStartup");
	create_dword	(0X35027024);
	set_name	(0X35027024,	"socket");
	create_dword	(0X35027028);
	set_name	(0X35027028,	"setsockopt");
	create_dword	(0X3502702C);
	set_name	(0X3502702C,	"sendto");
	create_dword	(0X35027034);
	set_name	(0X35027034,	"closesocket");
	create_dword	(0X35027038);
	set_name	(0X35027038,	"WSACleanup");
	create_dword	(0X3502703C);
	set_name	(0X3502703C,	"InetNtopW");
	create_dword	(0X35027040);
	set_name	(0X35027040,	"inet_ntop");
	create_dword	(0X35027044);
	set_name	(0X35027044,	"hModule");
	create_dword	(0X35027048);
	create_dword	(0X3502704C);
	set_name	(0X3502704C,	"CloseServiceHandle");
	create_dword	(0X35027050);
	set_name	(0X35027050,	"GetProcAddress_0");
	create_dword	(0X35027054);
	set_name	(0X35027054,	"FindFirstFileW");
	create_dword	(0X3502705C);
	set_name	(0X3502705C,	"CopyFileA");
	create_dword	(0X35027060);
	set_name	(0X35027060,	"RegCloseKey");
	create_dword	(0X35027064);
	set_name	(0X35027064,	"GetTickCount_0");
	create_dword	(0X3502706C);
	create_dword	(0X35027070);
	set_name	(0X35027070,	"CreateThread_0");
	make_array	(0X35027074,	0X4);
	create_dword	(0X35027078);
	create_dword	(0X3502707C);
	set_name	(0X3502707C,	"RegSetValueExW");
	create_dword	(0X35027080);
	set_name	(0X35027080,	"GetFileSize");
	create_dword	(0X35027084);
	set_name	(0X35027084,	"CryptDestroyKey");
	create_dword	(0X3502708C);
	set_name	(0X3502708C,	"ShellExecuteW");
	create_dword	(0X35027094);
	set_name	(0X35027094,	"GetLastError_0");
	create_dword	(0X35027098);
	create_dword	(0X3502709C);
	MakeStruct	(0X350270A4,	"_onexit_table_t");
	MakeStruct	(0X350270B0,	"_onexit_table_t");
	create_byte	(0X350270BC);
	make_array	(0X350270BD,	0X3);
	MakeStruct	(0X350270C0,	"_SLIST_HEADER");
	set_name	(0X350270C0,	"ListHead");
	create_dword	(0X350270D8);
	create_dword	(0X350270DC);
	create_dword	(0X350270E0);
	make_array	(0X350270E4,	0X4);
	create_dword	(0X350270E8);
	create_dword	(0X350270EC);
	create_dword	(0X350270F4);
	create_dword	(0X350270F8);
	create_dword	(0X350270FC);
	create_dword	(0X35027138);
	create_word	(0X350271C4);
	make_array	(0X350271C6,	0X2);
	create_word	(0X350271C8);
	make_array	(0X350271CA,	0X2);
	create_word	(0X350271CC);
	make_array	(0X350271CE,	0X2);
	create_word	(0X350271D0);
	make_array	(0X350271D2,	0X2);
	create_dword	(0X350271D4);
	create_dword	(0X350271D8);
	create_dword	(0X350271DC);
	create_dword	(0X350271E0);
	create_dword	(0X350271E4);
	create_dword	(0X350271E8);
	create_dword	(0X350271EC);
	create_dword	(0X350271F0);
	create_word	(0X350271F4);
	make_array	(0X350271F6,	0X2);
	create_dword	(0X350271F8);
	create_dword	(0X350271FC);
	create_word	(0X35027200);
	MakeStruct	(0X3502742C,	"_RTL_CRITICAL_SECTION");
	set_name	(0X3502742C,	"CriticalSection");
	create_dword	(0X35027444);
	create_dword	(0X3502747C);
	create_dword	(0X350274C0);
	create_byte	(0X350274C4);
	make_array	(0X350274C5,	0X3);
	create_dword	(0X350274C8);
	create_dword	(0X350274CC);
	create_word	(0X350274D0);
	set_name	(0X350274D0,	"Filename");
	create_dword	(0X350276E0);
	create_dword	(0X350276E4);
	create_dword	(0X350276E8);
	create_dword	(0X350276F0);
	create_dword	(0X350276F4);
	MakeStruct	(0X350276FC,	"_onexit_table_t");
	MakeStruct	(0X35027708,	"_onexit_table_t");
	set_name	(0X35027708,	"Table");
	create_dword	(0X35027714);
	create_dword	(0X35027718);
	make_array	(0X3502771C,	0X4);
	MakeStruct	(0X35027720,	"_RTL_CRITICAL_SECTION");
	create_dword	(0X35027858);
	make_array	(0X3502785C,	0X4);
	create_dword	(0X35027930);
	create_dword	(0X35027934);
	create_dword	(0X35027938);
	create_dword	(0X3502793C);
	create_dword	(0X3502794C);
	create_byte	(0X35027950);
	make_array	(0X35027951,	0X3);
	create_dword	(0X35027954);
	create_dword	(0X35027958);
	create_dword	(0X3502795C);
	create_dword	(0X35027960);
	create_dword	(0X35027964);
	create_dword	(0X35027968);
	create_dword	(0X35027970);
	create_dword	(0X35027B70);
	create_dword	(0X35027B7C);
	set_name	(0X35027B7C,	"hHeap");
	create_dword	(0X35027B80);
	create_dword	(0X35027B8C);
	create_dword	(0X35027B94);
	create_dword	(0X35027B98);
	create_dword	(0X35027B9C);
	set_name	(0X35027B9C,	"Count");
	create_dword	(0X35027BA0);
	create_dword	(0X35027BA4);
	create_dword	(0X35027BA8);
	create_dword	(0X35027BAC);
	create_dword	(0X35027BB8);
	create_dword	(0X35027BBC);
	set_name	(0X35027BBC,	"Ptr");
	create_dword	(0X35027BC0);
	make_array	(0X35027BC4,	0X43C);
	update_extra_cmt		(0X35028000,	E_PREV + 0,	"; Section 4. (virtual address 00028000)");
	update_extra_cmt		(0X35028000,	E_PREV + 1,	"; Virtual size                  : 000000AC (    172.)");
	update_extra_cmt		(0X35028000,	E_PREV + 2,	"; Section size in file          : 00000200 (    512.)");
	update_extra_cmt		(0X35028000,	E_PREV + 3,	"; Offset to raw data for section: 0001E800");
	update_extra_cmt		(0X35028000,	E_PREV + 4,	"; Flags 40000040: Data Readable");
	update_extra_cmt		(0X35028000,	E_PREV + 5,	"; Alignment     : default");
}

static Functions_0(void) {

	add_func    (0X35001000,0X35001938);
	set_func_flags(0X35001000,0x5410);
	set_frame_size(0X35001000, 0X1D0, 4, 0);
	add_func    (0X35001940,0X35001951);
	set_func_flags(0X35001940,0x5412);
	set_frame_size(0X35001940, 0X1C, 4, 0);
	add_func    (0X35001B70,0X35001EE5);
	set_func_flags(0X35001B70,0x5410);
	set_frame_size(0X35001B70, 0X28, 4, 0);
	add_func    (0X35001EF0,0X350020B6);
	set_func_flags(0X35001EF0,0x5410);
	set_frame_size(0X35001EF0, 0X24C, 4, 0);
	add_func    (0X350020C0,0X35002951);
	set_func_flags(0X350020C0,0x5410);
	set_frame_size(0X350020C0, 0X2BC, 4, 0);
	define_local_var(0X350020C0, 0X35002951, "[bp-0X2B0]", "Buffer");
	define_local_var(0X350020C0, 0X35002951, "[bp-0X1AC]", "CmdLine");
	define_local_var(0X350020C0, 0X35002951, "[bp-0X40]", "SystemTime");
	add_func    (0X35002960,0X35002A1F);
	set_func_flags(0X35002960,0x5410);
	set_frame_size(0X35002960, 0X14, 4, 0X4);
	add_func    (0X35002A20,0X35002A82);
	set_func_flags(0X35002A20,0x5410);
	set_frame_size(0X35002A20, 0X1C, 4, 0);
	add_func    (0X35002A90,0X35002AF5);
	set_func_flags(0X35002A90,0x5410);
	set_frame_size(0X35002A90, 0X1C, 4, 0);
	add_func    (0X35002B00,0X35002BF6);
	set_func_flags(0X35002B00,0x5410);
	set_frame_size(0X35002B00, 0X10, 4, 0);
	add_func    (0X35002C00,0X35002C57);
	set_func_flags(0X35002C00,0x5410);
	set_frame_size(0X35002C00, 0XC, 4, 0);
	add_func    (0X35002C60,0X35003361);
	set_func_flags(0X35002C60,0x5410);
	set_frame_size(0X35002C60, 0X468, 4, 0);
	define_local_var(0X35002C60, 0X35003361, "[bp+0X8]", "Str");
	add_func    (0X35003370,0X35003773);
	set_func_flags(0X35003370,0x5410);
	set_frame_size(0X35003370, 0X1080, 4, 0);
	define_local_var(0X35003370, 0X35003773, "[bp-0X50]", "cp");
	add_func    (0X35003780,0X35003A43);
	set_func_flags(0X35003780,0x5410);
	set_frame_size(0X35003780, 0X44C, 4, 0);
	define_local_var(0X35003780, 0X35003A43, "[bp-0X214]", "Str");
	define_local_var(0X35003780, 0X35003A43, "[bp+0X8]", "SubStr");
	add_func    (0X35003A50,0X35003E19);
	set_func_flags(0X35003A50,0x5410);
	set_frame_size(0X35003A50, 0X23C, 4, 0);
	define_local_var(0X35003A50, 0X35003E19, "[bp-0X14]", "SubStr");
	add_func    (0X35003E20,0X35003F6C);
	set_func_flags(0X35003E20,0x5410);
	set_frame_size(0X35003E20, 0X18, 4, 0);
	add_func    (0X35003F70,0X35003FB3);
	set_func_flags(0X35003F70,0x5410);
	set_frame_size(0X35003F70, 0XC, 4, 0);
	add_func    (0X35003FC0,0X35003FEF);
	set_func_flags(0X35003FC0,0x5410);
	set_frame_size(0X35003FC0, 0XC, 4, 0);
	add_func    (0X35003FF0,0X35004149);
	set_func_flags(0X35003FF0,0x5410);
	set_frame_size(0X35003FF0, 0XC, 4, 0);
	add_func    (0X35004150,0X350055F0);
	set_func_flags(0X35004150,0x5410);
	set_frame_size(0X35004150, 0X7FC, 4, 0);
	add_func    (0X350055F0,0X35006428);
	set_func_flags(0X350055F0,0x5410);
	set_frame_size(0X350055F0, 0X1B0, 4, 0);
	add_func    (0X35006430,0X350064DD);
	set_func_flags(0X35006430,0x5410);
	set_frame_size(0X35006430, 0X7C, 4, 0X4);
	add_func    (0X350064E0,0X35006698);
	set_func_flags(0X350064E0,0x5410);
	set_frame_size(0X350064E0, 0X48, 4, 0);
	add_func    (0X350066A0,0X35006A5C);
	set_func_flags(0X350066A0,0x5410);
	set_frame_size(0X350066A0, 0XC4, 4, 0);
	define_local_var(0X350066A0, 0X35006A5C, "[bp-0X14]", "hObject");
	add_func    (0X35006A60,0X35006B29);
	set_func_flags(0X35006A60,0x5410);
	SetType(0X35006A60, "DWORD __stdcall StartAddress(LPVOID lpThreadParameter);");
	set_frame_size(0X35006A60, 0X8, 4, 0X4);
	define_local_var(0X35006A60, 0X35006B29, "[bp+0X8]", "lpThreadParameter");
	add_func    (0X35006B30,0X35006BD3);
	set_func_flags(0X35006B30,0x5410);
	set_frame_size(0X35006B30, 0X24, 4, 0);
	add_func    (0X35006BE0,0X35006C36);
	set_func_flags(0X35006BE0,0x1401);
	set_frame_size(0X35006BE0, 0XC, 0, 0);
	add_func    (0X35006C40,0X35006DCC);
	set_func_flags(0X35006C40,0x5410);
	set_frame_size(0X35006C40, 0X230, 4, 0);
	define_local_var(0X35006C40, 0X35006DCC, "[bp-0X1C]", "name");
	define_local_var(0X35006C40, 0X35006DCC, "[bp+0X8]", "cp");
	add_func    (0X35006DD0,0X35006F7C);
	set_func_flags(0X35006DD0,0x5410);
	set_frame_size(0X35006DD0, 0X44, 4, 0X4);
	add_func    (0X35006F80,0X35007104);
	set_func_flags(0X35006F80,0x5410);
	set_frame_size(0X35006F80, 0X38, 4, 0);
	add_func    (0X35007110,0X350071FD);
	set_func_flags(0X35007110,0x5410);
	set_frame_size(0X35007110, 0X40C, 4, 0);
	add_func    (0X35007200,0X350074E9);
	set_func_flags(0X35007200,0x5410);
	set_frame_size(0X35007200, 0X110, 4, 0);
	define_local_var(0X35007200, 0X350074E9, "[bp-0X104]", "Src");
	add_func    (0X350074F0,0X350087A7);
	set_func_flags(0X350074F0,0x5410);
	set_frame_size(0X350074F0, 0XD74, 4, 0);
	define_local_var(0X350074F0, 0X350087A7, "[bp-0X180]", "Handles");
	define_local_var(0X350074F0, 0X350087A7, "[bp-0X68]", "CmdLine");
	define_local_var(0X350074F0, 0X350087A7, "[bp-0X8]", "lpParameter");
	add_func    (0X350087B0,0X350087D6);
	set_func_flags(0X350087B0,0x5410);
	set_frame_size(0X350087B0, 0X120, 4, 0);
	add_func    (0X35008820,0X3500884E);
	set_func_flags(0X35008820,0x5410);
	set_frame_size(0X35008820, 0, 4, 0);
	add_func    (0X35008850,0X35008871);
	set_func_flags(0X35008850,0x5411);
	SetType(0X35008850, "int __stdcall WinMain(HINSTANCE hInstance, HINSTANCE hPrevInstance, LPSTR lpCmdLine, int nShowCmd);");
	set_frame_size(0X35008850, 0X1218, 4, 0X10);
	define_local_var(0X35008850, 0X35008871, "[bp+0X8]", "hInstance");
	define_local_var(0X35008850, 0X35008871, "[bp+0XC]", "hPrevInstance");
	define_local_var(0X35008850, 0X35008871, "[bp+0X10]", "lpCmdLine");
	define_local_var(0X35008850, 0X35008871, "[bp+0X14]", "nShowCmd");
	add_func    (0X35008F20,0X35008F54);
	set_func_flags(0X35008F20,0x5444);
	set_frame_size(0X35008F20, 0, 0, 0X10);
	add_func    (0X35008F60,0X35008FC8);
	set_func_flags(0X35008F60,0x5444);
	set_frame_size(0X35008F60, 0X8, 0, 0X10);
	add_func    (0X35008FD0,0X35008FFD);
	set_func_flags(0X35008FD0,0x5444);
	set_frame_size(0X35008FD0, 0, 0, 0);
	add_func    (0X35008FFD,0X350090A1);
	set_func_flags(0X35008FFD,0x544c);
	SetType(0X35008FFD, "int __cdecl pre_c_initialization();");
	set_frame_size(0X35008FFD, 0, 0, 0);
	add_func    (0X350090A1,0X350090A9);
	set_func_flags(0X350090A1,0x544c);
	set_frame_size(0X350090A1, 0, 0, 0);
	add_func    (0X350090A9,0X350090BB);
	set_func_flags(0X350090A9,0x544c);
	set_frame_size(0X350090A9, 0, 0, 0);
	add_func    (0X350090BB,0X35009223);
	set_func_flags(0X350090BB,0x545c);
	SetType(0X350090BB, "int __cdecl __scrt_common_main_seh();");
	set_frame_size(0X350090BB, 0X34, 4, 0);
	define_local_var(0X350090BB, 0X35009223, "[bp-0X20]", "Code");
	define_local_var(0X350090BB, 0X35009223, "[bp-0X18]", "ms_exc");
	add_func    (0X35009223,0X3500922D);
	set_func_flags(0X35009223,0x5444);
	set_frame_size(0X35009223, 0, 0, 0);
	add_func    (0X3500922D,0X35009271);
	set_func_flags(0X3500922D,0x545c);
	SetType(0X3500922D, "struct _IMAGE_SECTION_HEADER *__cdecl find_pe_section(unsigned __int8 *const, unsigned int);");
	set_frame_size(0X3500922D, 0X4, 4, 0);
	add_func    (0X35009271,0X350092A6);
	set_func_flags(0X35009271,0x5444);
	set_frame_size(0X35009271, 0, 0, 0);
	add_func    (0X350092A6,0X350092DF);
	set_func_flags(0X350092A6,0x5454);
	set_frame_size(0X350092A6, 0, 4, 0);
	add_func    (0X350092DF,0X35009376);
	set_func_flags(0X350092DF,0x5454);
	set_frame_size(0X350092DF, 0X10, 4, 0);
	add_func    (0X35009376,0X35009400);
	set_func_flags(0X35009376,0x5454);
	set_frame_size(0X35009376, 0X28, 4, 0);
	define_local_var(0X35009376, 0X35009400, "[bp-0X18]", "ms_exc");
	add_func    (0X35009400,0X3500941D);
	set_func_flags(0X35009400,0x5454);
	set_frame_size(0X35009400, 0, 4, 0);
	add_func    (0X3500941D,0X35009445);
	set_func_flags(0X3500941D,0x5454);
	SetType(0X3500941D, "int __cdecl __scrt_uninitialize_crt(__vcrt_bool Terminating, char);");
	set_frame_size(0X3500941D, 0, 4, 0);
	define_local_var(0X3500941D, 0X35009445, "[bp+0X8]", "Terminating");
	add_func    (0X35009445,0X35009480);
	set_func_flags(0X35009445,0x5454);
	SetType(0X35009445, "_onexit_t __cdecl _onexit(_onexit_t Func);");
	set_frame_size(0X35009445, 0, 4, 0);
	define_local_var(0X35009445, 0X35009480, "[bp+0X8]", "Func");
	add_func    (0X35009480,0X35009495);
	set_func_flags(0X35009480,0x5454);
	SetType(0X35009480, "int __cdecl atexit(void (__cdecl *)());");
	set_frame_size(0X35009480, 0, 4, 0);
	define_local_var(0X35009480, 0X35009495, "[bp+0X8]", "Func");
	add_func    (0X35009495,0X35009531);
	set_func_flags(0X35009495,0x5454);
	SetType(0X35009495, "void __cdecl __security_init_cookie();");
	set_frame_size(0X35009495, 0X1C, 4, 0);
	define_local_var(0X35009495, 0X35009531, "[bp-0X14]", "PerformanceCount");
	define_local_var(0X35009495, 0X35009531, "[bp-0XC]", "SystemTimeAsFileTime");
	add_func    (0X35009535,0X3500953B);
	set_func_flags(0X35009535,0x5444);
	set_frame_size(0X35009535, 0, 0, 0);
	add_func    (0X3500954A,0X3500956B);
	set_func_flags(0X3500954A,0x5444);
	set_frame_size(0X3500954A, 0, 0, 0);
	add_func    (0X35009578,0X35009595);
	set_func_flags(0X35009578,0x5444);
	set_frame_size(0X35009578, 0, 0, 0);
	add_func    (0X350095AD,0X350096C8);
	set_func_flags(0X350095AD,0x5454);
	set_frame_size(0X350095AD, 0X32C, 4, 0);
	define_local_var(0X350095AD, 0X350096C8, "[bp-0X8]", "ExceptionInfo");
	add_func    (0X350096C8,0X350096FB);
	set_func_flags(0X350096C8,0x5454);
	set_frame_size(0X350096C8, 0X44, 4, 0);
	define_local_var(0X350096C8, 0X350096FB, "[bp-0X44]", "StartupInfo");
	add_func    (0X350096FB,0X3500973F);
	set_func_flags(0X350096FB,0x5444);
	set_frame_size(0X350096FB, 0, 0, 0);
	add_func    (0X3500973F,0X3500974B);
	set_func_flags(0X3500973F,0x5444);
	set_frame_size(0X3500973F, 0, 0, 0);
	add_func    (0X3500974B,0X3500978C);
	set_func_flags(0X3500974B,0x5454);
	SetType(0X3500974B, "LONG __stdcall __scrt_unhandled_exception_filter(struct _EXCEPTION_POINTERS *ExceptionInfo);");
	set_frame_size(0X3500974B, 0, 4, 0X4);
	define_local_var(0X3500974B, 0X3500978C, "[bp+0X8]", "ExceptionInfo");
	add_func    (0X35009794,0X350097BF);
	set_func_flags(0X35009794,0x5400);
	set_frame_size(0X35009794, 0X8, 0, 0);
	add_func    (0X350097BF,0X350097EA);
	set_func_flags(0X350097BF,0x5400);
	SetType(0X350097BF, "void __cdecl sub_350097BF();");
	set_frame_size(0X350097BF, 0X8, 0, 0);
	add_func    (0X350097F0,0X35009836);
	set_func_flags(0X350097F0,0x5444);
	set_frame_size(0X350097F0, 0, 0, 0);
	add_func    (0X35009836,0X3500984B);
	set_func_flags(0X35009836,0x5444);
	set_frame_size(0X35009836, 0, 0, 0);
	add_func    (0X3500984B,0X350099EF);
	set_func_flags(0X3500984B,0x5410);
	set_frame_size(0X3500984B, 0X30, 4, 0);
	add_func    (0X350099EF,0X350099FB);
	set_func_flags(0X350099EF,0x5444);
	set_frame_size(0X350099EF, 0, 0, 0);
	add_func    (0X350099FB,0X35009A0C);
	set_func_flags(0X350099FB,0x5444);
	SetType(0X350099FB, "void __fastcall __security_check_cookie(uintptr_t StackCookie);");
	set_frame_size(0X350099FB, 0, 0, 0);
	add_func    (0X35009A0C,0X35009A34);
	set_func_flags(0X35009A0C,0x5454);
	SetType(0X35009A0C, "int __cdecl __raise_securityfailure(struct _EXCEPTION_POINTERS *ExceptionInfo);");
	set_frame_size(0X35009A0C, 0, 4, 0);
	define_local_var(0X35009A0C, 0X35009A34, "[bp+0X8]", "ExceptionInfo");
	add_func    (0X35009A34,0X35009B2F);
	set_func_flags(0X35009A34,0x5455);
	SetType(0X35009A34, "void __cdecl __noreturn __report_gsfailure();");
	set_frame_size(0X35009A34, 0X324, 4, 0);
	add_func    (0X35009B30,0X35009D93);
	set_func_flags(0X35009B30,0x5444);
	SetType(0X35009B30, "char *__cdecl strstr(const char *Str, const char *SubStr);");
	set_frame_size(0X35009B30, 0XC, 0, 0);
	define_local_var(0X35009B30, 0X35009D93, "[bp+0X4]", "Str");
	define_local_var(0X35009B30, 0X35009D93, "[bp+0X8]", "SubStr");
	add_func    (0X35009D93,0X35009E41);
	set_func_flags(0X35009D93,0x5c44);
	SetType(0X35009D93, "wchar_t *__cdecl wcschr(const wchar_t *Str, wchar_t Ch);");
	set_frame_size(0X35009D93, 0XC, 0, 0);
	define_local_var(0X35009D93, 0X35009E41, "[bp+0X4]", "Str");
	add_func    (0X35009E41,0X3500A0C4);
	set_func_flags(0X35009E41,0x5c44);
	SetType(0X35009E41, "wchar_t *__cdecl wcsstr(const wchar_t *Str, const wchar_t *SubStr);");
	set_frame_size(0X35009E41, 0XC, 0, 0);
	define_local_var(0X35009E41, 0X3500A0C4, "[bp+0X4]", "Str");
	define_local_var(0X35009E41, 0X3500A0C4, "[bp+0X8]", "SubStr");
	add_func    (0X3500A0D0,0X3500A644);
	set_func_flags(0X3500A0D0,0x5444);
	SetType(0X3500A0D0, "void *__cdecl memmove(void *, const void *Src, size_t Size);");
	set_frame_size(0X3500A0D0, 0X8, 0, 0);
	define_local_var(0X3500A0D0, 0X3500A644, "[bp+0X8]", "Src");
	define_local_var(0X3500A0D0, 0X3500A644, "[bp+0XC]", "Size");
	add_func    (0X3500A650,0X3500A682);
	set_func_flags(0X3500A650,0x545c);
	set_frame_size(0X3500A650, 0X8, 4, 0);
	add_func    (0X3500A690,0X3500A7F6);
	set_func_flags(0X3500A690,0x5454);
	SetType(0X3500A690, "int __cdecl SEH_350136D0(PEXCEPTION_RECORD ExceptionRecord, PVOID TargetFrame, int);");
	set_frame_size(0X3500A690, 0X28, 4, 0);
	define_local_var(0X3500A690, 0X3500A7F6, "[bp+0X8]", "ExceptionRecord");
	define_local_var(0X3500A690, 0X3500A7F6, "[bp+0XC]", "TargetFrame");
	add_func    (0X3500A7F6,0X3500A81F);
	set_func_flags(0X3500A7F6,0x5444);
	SetType(0X3500A7F6, "__vcrt_bool __cdecl __vcrt_initialize();");
	set_frame_size(0X3500A7F6, 0, 0, 0);
	add_func    (0X3500A81F,0X3500A83E);
	set_func_flags(0X3500A81F,0x5454);
	SetType(0X3500A81F, "__vcrt_bool __cdecl __vcrt_uninitialize(__vcrt_bool Terminating);");
	set_frame_size(0X3500A81F, 0, 4, 0);
	define_local_var(0X3500A81F, 0X3500A83E, "[bp+0X8]", "Terminating");
	add_func    (0X3500A840,0X3500A8AE);
	set_func_flags(0X3500A840,0x5444);
	SetType(0X3500A840, "char *__cdecl strchr(const char *Str, int Val);");
	set_frame_size(0X3500A840, 0, 0, 0);
	define_local_var(0X3500A840, 0X3500A8AE, "[bp+0X4]", "Str");
	define_local_var(0X3500A840, 0X3500A8AE, "[bp+0X8]", "Val");
	add_func    (0X3500A8AE,0X3500A96B);
	set_func_flags(0X3500A8AE,0x5444);
	set_frame_size(0X3500A8AE, 0X4, 0, 0);
	add_func    (0X3500A970,0X3500AA00);
	set_func_flags(0X3500A970,0x5444);
	set_frame_size(0X3500A970, 0X20, 0, 0);
	add_func    (0X3500AA00,0X3500AA46);
	set_func_flags(0X3500AA00,0x544c);
	set_frame_size(0X3500AA00, 0, 0, 0);
	add_func    (0X3500AA46,0X3500AA6E);
	set_func_flags(0X3500AA46,0x5444);
	set_frame_size(0X3500AA46, 0X4, 0, 0X4);
	add_func    (0X3500AA6E,0X3500AA85);
	set_func_flags(0X3500AA6E,0x5444);
	set_frame_size(0X3500AA6E, 0X10, 0, 0);
	add_func    (0X3500AA85,0X3500AA9E);
	set_func_flags(0X3500AA85,0x1444);
	add_func    (0X3500AA9E,0X3500AAB7);
	set_func_flags(0X3500AA9E,0x5454);
	SetType(0X3500AA9E, "int __fastcall _EH4_GlobalUnwind2(PVOID TargetFrame, PEXCEPTION_RECORD ExceptionRecord);");
	set_frame_size(0X3500AA9E, 0XC, 4, 0);
	add_func    (0X3500AAB7,0X3500AACE);
	set_func_flags(0X3500AAB7,0x5444);
	set_frame_size(0X3500AAB7, 0X4, 0, 0X8);
	add_func    (0X3500AACE,0X3500AAEA);
	set_func_flags(0X3500AACE,0x5454);
	SetType(0X3500AACE, "int __stdcall __vcrt_freefls(void *Block);");
	set_frame_size(0X3500AACE, 0, 4, 0X4);
	define_local_var(0X3500AACE, 0X3500AAEA, "[bp+0X8]", "Block");
	add_func    (0X3500AAEA,0X3500AB1D);
	set_func_flags(0X3500AAEA,0x5444);
	set_frame_size(0X3500AAEA, 0, 0, 0);
	add_func    (0X3500AB1D,0X3500AB38);
	set_func_flags(0X3500AB1D,0x5444);
	set_frame_size(0X3500AB1D, 0, 0, 0);
	add_func    (0X3500AB38,0X3500AB74);
	set_func_flags(0X3500AB38,0x5444);
	set_frame_size(0X3500AB38, 0X8, 0, 0);
	add_func    (0X3500AB74,0X3500ABA3);
	set_func_flags(0X3500AB74,0x5444);
	set_frame_size(0X3500AB74, 0X4, 0, 0);
	add_func    (0X3500ABA3,0X3500ABC0);
	set_func_flags(0X3500ABA3,0x5454);
	set_func_cmt(0X3500ABA3,	"Microsoft VisualC 14/net runtime\nMicrosoft VisualC 14/net runtime\nMicrosoft VisualC 14/net runtime", 1);
	set_frame_size(0X3500ABA3, 0, 4, 0);
	add_func    (0X3500ABC0,0X3500AC60);
	set_func_flags(0X3500ABC0,0x545c);
	set_frame_size(0X3500ABC0, 0XC, 4, 0);
	define_local_var(0X3500ABC0, 0X3500AC60, "[bp+0XC]", "lpProcName");
	add_func    (0X3500AC60,0X3500ACE1);
	set_func_flags(0X3500AC60,0x545c);
	set_frame_size(0X3500AC60, 0X8, 4, 0);
	add_func    (0X3500ACE1,0X3500AD1B);
	set_func_flags(0X3500ACE1,0x5454);
	set_frame_size(0X3500ACE1, 0X4, 4, 0);
	add_func    (0X3500AD1B,0X3500AD55);
	set_func_flags(0X3500AD1B,0x5454);
	SetType(0X3500AD1B, "int __cdecl __vcrt_FlsFree(DWORD dwTlsIndex);");
	set_frame_size(0X3500AD1B, 0X4, 4, 0);
	define_local_var(0X3500AD1B, 0X3500AD55, "[bp+0X8]", "dwTlsIndex");
	add_func    (0X3500AD55,0X3500AD92);
	set_func_flags(0X3500AD55,0x5454);
	SetType(0X3500AD55, "int __cdecl __vcrt_FlsSetValue(DWORD dwTlsIndex, LPVOID lpTlsValue);");
	set_frame_size(0X3500AD55, 0X4, 4, 0);
	define_local_var(0X3500AD55, 0X3500AD92, "[bp+0X8]", "dwTlsIndex");
	define_local_var(0X3500AD55, 0X3500AD92, "[bp+0XC]", "lpTlsValue");
	add_func    (0X3500AD92,0X3500ADD8);
	set_func_flags(0X3500AD92,0x5454);
	SetType(0X3500AD92, "int __cdecl __vcrt_InitializeCriticalSectionEx(LPCRITICAL_SECTION lpCriticalSection, DWORD dwSpinCount, int);");
	set_frame_size(0X3500AD92, 0X4, 4, 0);
	define_local_var(0X3500AD92, 0X3500ADD8, "[bp+0X8]", "lpCriticalSection");
	define_local_var(0X3500AD92, 0X3500ADD8, "[bp+0XC]", "dwSpinCount");
	add_func    (0X3500ADD8,0X3500AE12);
	set_func_flags(0X3500ADD8,0x5444);
	set_frame_size(0X3500ADD8, 0X4, 0, 0);
	add_func    (0X3500AE12,0X3500AE44);
	set_func_flags(0X3500AE12,0x5454);
	set_frame_size(0X3500AE12, 0, 4, 0);
	add_func    (0X3500AE44,0X3500AE61);
	set_func_flags(0X3500AE44,0x5444);
	set_frame_size(0X3500AE44, 0, 0, 0);
	add_func    (0X3500AE70,0X3500AE90);
	set_func_flags(0X3500AE70,0x5454);
	SetType(0X3500AE70, "int __cdecl _global_unwind2(PVOID TargetFrame);");
	set_frame_size(0X3500AE70, 0X10, 4, 0);
	define_local_var(0X3500AE70, 0X3500AE90, "[bp+0X8]", "TargetFrame");
	add_func    (0X3500AE90,0X3500AED5);
	set_func_flags(0X3500AE90,0x544c);
	set_frame_size(0X3500AE90, 0, 0, 0);
	add_func    (0X3500AED5,0X3500AF59);
	set_func_flags(0X3500AED5,0x5444);
	set_frame_size(0X3500AED5, 0X20, 0, 0);
	add_func    (0X3500AF59,0X3500AF7C);
	set_func_flags(0X3500AF59,0x5444);
	SetType(0X3500AF59, "int __cdecl _abnormal_termination();");
	set_frame_size(0X3500AF59, 0, 0, 0);
	add_func    (0X3500AF7C,0X3500AF85);
	set_func_flags(0X3500AF7C,0x1444);
	set_frame_size(0X3500AF7C, 0X4, 0, 0);
	add_func    (0X3500AF85,0X3500AFA4);
	set_func_flags(0X3500AF85,0x5444);
	set_frame_size(0X3500AF85, 0XC, 0, 0X4);
	add_func    (0X3500AFA4,0X3500AFA7);
	set_func_flags(0X3500AFA4,0x5444);
	set_frame_size(0X3500AFA4, 0, 0, 0);
	add_func    (0X3500AFA7,0X3500B02A);
	set_func_flags(0X3500AFA7,0x5454);
	SetType(0X3500AFA7, "_LocaleUpdate *__thiscall _LocaleUpdate___LocaleUpdate(_LocaleUpdate *__hidden this, struct __crt_locale_pointers *const);");
	set_frame_size(0X3500AFA7, 0X4, 4, 0X4);
	add_func    (0X3500B02A,0X3500B0F3);
	set_func_flags(0X3500B02A,0x5454);
	SetType(0X3500B02A, "wint_t __cdecl _towlower_l(wint_t C, _locale_t Locale);");
	set_frame_size(0X3500B02A, 0X18, 4, 0);
	define_local_var(0X3500B02A, 0X3500B0F3, "[bp-0X4]", "DestStr");
	define_local_var(0X3500B02A, 0X3500B0F3, "[bp+0X8]", "C");
	define_local_var(0X3500B02A, 0X3500B0F3, "[bp+0XC]", "Locale");
	add_func    (0X3500B0F3,0X3500B0F5);
	set_func_flags(0X3500B0F3,0x5444);
	SetType(0X3500B0F3, "wint_t __cdecl towlower(wint_t C);");
	set_frame_size(0X3500B0F3, 0, 0, 0);
	define_local_var(0X3500B0F3, 0X3500B0F5, "[bp+0X8]", "C");
	add_func    (0X3500B0F5,0X3500B106);
	set_func_flags(0X3500B0F5,0x5454);
	SetType(0X3500B0F5, "int __cdecl _Mtx_lock(_Mtx_t);");
	set_frame_size(0X3500B0F5, 0, 4, 0);
	add_func    (0X3500B106,0X3500B130);
	set_func_flags(0X3500B106,0x5454);
	SetType(0X3500B106, "int __cdecl _chvalidchk_l(const int C, const int Mask, const _locale_t Locale);");
	set_frame_size(0X3500B106, 0, 4, 0);
	define_local_var(0X3500B106, 0X3500B130, "[bp+0X8]", "C");
	define_local_var(0X3500B106, 0X3500B130, "[bp+0XC]", "Mask");
	define_local_var(0X3500B106, 0X3500B130, "[bp+0X10]", "Locale");
	add_func    (0X3500B130,0X3500B16B);
	set_func_flags(0X3500B130,0x5454);
	SetType(0X3500B130, "int __cdecl _isalnum_l(int C, _locale_t Locale);");
	set_frame_size(0X3500B130, 0X10, 4, 0);
	define_local_var(0X3500B130, 0X3500B16B, "[bp+0X8]", "C");
	define_local_var(0X3500B130, 0X3500B16B, "[bp+0XC]", "Locale");
	add_func    (0X3500B16B,0X3500B1A6);
	set_func_flags(0X3500B16B,0x5454);
	SetType(0X3500B16B, "int __cdecl _isalpha_l(int C, _locale_t Locale);");
	set_frame_size(0X3500B16B, 0X10, 4, 0);
	define_local_var(0X3500B16B, 0X3500B1A6, "[bp+0X8]", "C");
	define_local_var(0X3500B16B, 0X3500B1A6, "[bp+0XC]", "Locale");
	add_func    (0X3500B1A6,0X3500B1D9);
	set_func_flags(0X3500B1A6,0x5454);
	SetType(0X3500B1A6, "int __cdecl _ischartype_l(const int C, const int Mask, const _locale_t Locale);");
	set_frame_size(0X3500B1A6, 0, 4, 0);
	define_local_var(0X3500B1A6, 0X3500B1D9, "[bp+0X8]", "C");
	define_local_var(0X3500B1A6, 0X3500B1D9, "[bp+0XC]", "Mask");
	define_local_var(0X3500B1A6, 0X3500B1D9, "[bp+0X10]", "Locale");
	add_func    (0X3500B1D9,0X3500B208);
	set_func_flags(0X3500B1D9,0x5454);
	SetType(0X3500B1D9, "int __cdecl isalnum(int C);");
	set_frame_size(0X3500B1D9, 0, 4, 0);
	define_local_var(0X3500B1D9, 0X3500B208, "[bp+0X8]", "C");
	add_func    (0X3500B208,0X3500B237);
	set_func_flags(0X3500B208,0x5454);
	SetType(0X3500B208, "int __cdecl isalpha(int C);");
	set_frame_size(0X3500B208, 0, 4, 0);
	define_local_var(0X3500B208, 0X3500B237, "[bp+0X8]", "C");
	add_func    (0X3500B237,0X3500B381);
	set_func_flags(0X3500B237,0x545c);
	SetType(0X3500B237, "int __cdecl common_tox_l__bool_internal_isupper_l_int___crt_locale_pointers___const___int_internal_map_lower_int___crt_locale_pointers___const__(int C, DWORD dwMapFlags, struct __crt_locale_pointers *);");
	set_frame_size(0X3500B237, 0X20, 4, 0);
	define_local_var(0X3500B237, 0X3500B381, "[bp-0X18]", "Locale");
	define_local_var(0X3500B237, 0X3500B381, "[bp-0X8]", "DestStr");
	define_local_var(0X3500B237, 0X3500B381, "[bp-0X4]", "MultiByteStr");
	define_local_var(0X3500B237, 0X3500B381, "[bp+0X8]", "C");
	define_local_var(0X3500B237, 0X3500B381, "[bp+0XC]", "dwMapFlags");
	add_func    (0X3500B381,0X3500B39E);
	set_func_flags(0X3500B381,0x545c);
	SetType(0X3500B381, "bool __cdecl internal_isupper_l(int C, _locale_t Locale);");
	set_frame_size(0X3500B381, 0, 4, 0);
	define_local_var(0X3500B381, 0X3500B39E, "[bp+0X8]", "C");
	define_local_var(0X3500B381, 0X3500B39E, "[bp+0XC]", "Locale");
	add_func    (0X3500B39E,0X3500B3B8);
	set_func_flags(0X3500B39E,0x5454);
	SetType(0X3500B39E, "int __cdecl _tolower_l(int C, _locale_t Locale);");
	set_frame_size(0X3500B39E, 0, 4, 0);
	define_local_var(0X3500B39E, 0X3500B3B8, "[bp+0X8]", "C");
	define_local_var(0X3500B39E, 0X3500B3B8, "[bp+0XC]", "Locale");
	add_func    (0X3500B3B8,0X3500B3E8);
	set_func_flags(0X3500B3B8,0x5454);
	SetType(0X3500B3B8, "int __cdecl tolower(int C);");
	set_frame_size(0X3500B3B8, 0, 4, 0);
	define_local_var(0X3500B3B8, 0X3500B3E8, "[bp+0X8]", "C");
	add_func    (0X3500B3E8,0X3500B45D);
	set_func_flags(0X3500B3E8,0x545c);
	set_frame_size(0X3500B3E8, 0XC, 4, 0);
	add_func    (0X3500B45D,0X3500B494);
	set_func_flags(0X3500B45D,0x5454);
	set_func_cmt(0X3500B45D,	"Microsoft VisualC universal runtime\nMicrosoft VisualC universal runtime\nMicrosoft VisualC universal runtime", 1);
	set_frame_size(0X3500B45D, 0X4, 4, 0);
	add_func    (0X3500B494,0X3500B4A7);
	set_func_flags(0X3500B494,0x545c);
	SetType(0X3500B494, "int __cdecl atexit_exception_filter(unsigned int);");
	set_frame_size(0X3500B494, 0, 4, 0);
	add_func    (0X3500B4A7,0X3500B5C0);
	set_func_flags(0X3500B4A7,0x545c);
	SetType(0X3500B4A7, "void __cdecl common_exit(UINT uExitCode, enum _crt_exit_cleanup_mode, enum _crt_exit_return_mode);");
	set_frame_size(0X3500B4A7, 0X2C, 4, 0);
	define_local_var(0X3500B4A7, 0X3500B5C0, "[bp-0X18]", "ms_exc");
	define_local_var(0X3500B4A7, 0X3500B5C0, "[bp+0X8]", "uExitCode");
	add_func    (0X3500B5C0,0X3500B600);
	set_func_flags(0X3500B5C0,0x145d);
	SetType(0X3500B5C0, "void __cdecl __noreturn exit_or_terminate_process(UINT uExitCode);");
	set_frame_size(0X3500B5C0, 0, 4, 0);
	define_local_var(0X3500B5C0, 0X3500B600, "[bp+0X8]", "uExitCode");
	add_func    (0X3500B601,0X3500B66B);
	set_func_flags(0X3500B601,0x545c);
	SetType(0X3500B601, "void __cdecl try_cor_exit_process(unsigned int);");
	set_frame_size(0X3500B601, 0X8, 4, 0);
	define_local_var(0X3500B601, 0X3500B66B, "[bp-0X8]", "phModule");
	add_func    (0X3500B67A,0X3500B689);
	set_func_flags(0X3500B67A,0x5444);
	SetType(0X3500B67A, "void __cdecl _c_exit();");
	set_frame_size(0X3500B67A, 0, 0, 0);
	add_func    (0X3500B689,0X3500B698);
	set_func_flags(0X3500B689,0x5444);
	SetType(0X3500B689, "void __cdecl _cexit();");
	set_frame_size(0X3500B689, 0, 0, 0);
	add_func    (0X3500B698,0X3500B6AE);
	set_func_flags(0X3500B698,0x5455);
	SetType(0X3500B698, "void __cdecl __noreturn _exit(int Code);");
	set_frame_size(0X3500B698, 0, 4, 0);
	define_local_var(0X3500B698, 0X3500B6AE, "[bp+0X8]", "Code");
	add_func    (0X3500B6AE,0X3500B6E6);
	set_func_flags(0X3500B6AE,0x5454);
	SetType(0X3500B6AE, "void __cdecl _register_thread_local_exe_atexit_callback(_tls_callback_type Callback);");
	set_frame_size(0X3500B6AE, 0, 4, 0);
	define_local_var(0X3500B6AE, 0X3500B6E6, "[bp+0X8]", "Callback");
	add_func    (0X3500B6E6,0X3500B6FC);
	set_func_flags(0X3500B6E6,0x5455);
	SetType(0X3500B6E6, "intptr_t __cdecl exit_1(char *FileName);");
	set_frame_size(0X3500B6E6, 0, 4, 0);
	define_local_var(0X3500B6E6, 0X3500B6FC, "[bp+0X8]", "FileName");
	add_func    (0X3500B6FC,0X3500B71D);
	set_func_flags(0X3500B6FC,0x5444);
	SetType(0X3500B6FC, "int __cdecl rand();");
	set_frame_size(0X3500B6FC, 0, 0, 0);
	add_func    (0X3500B71D,0X3500B72F);
	set_func_flags(0X3500B71D,0x5454);
	SetType(0X3500B71D, "void __cdecl srand(unsigned int Seed);");
	set_frame_size(0X3500B71D, 0, 4, 0);
	define_local_var(0X3500B71D, 0X3500B72F, "[bp+0X8]", "Seed");
	add_func    (0X3500B72F,0X3500B762);
	set_func_flags(0X3500B72F,0x5454);
	set_frame_size(0X3500B72F, 0, 4, 0);
	add_func    (0X3500B762,0X3500B77D);
	set_func_flags(0X3500B762,0x5454);
	set_func_cmt(0X3500B762,	"Microsoft VisualC universal runtime\nMicrosoft VisualC universal runtime\nMicrosoft VisualC universal runtime", 1);
	set_frame_size(0X3500B762, 0, 4, 0);
	add_func    (0X3500B77D,0X3500B9A5);
	set_func_flags(0X3500B77D,0x5454);
	SetType(0X3500B77D, "int __cdecl __crt_strtox__parse_integer_unsigned_long___crt_strtox__c_string_character_source_char__(struct __crt_locale_pointers *, int, int, int, char);");
	set_frame_size(0X3500B77D, 0X30, 4, 0);
	define_local_var(0X3500B77D, 0X3500B9A5, "[bp-0X24]", "Locale");
	add_func    (0X3500B9A5,0X3500B9CD);
	set_func_flags(0X3500B9A5,0x5454);
	set_frame_size(0X3500B9A5, 0, 4, 0X4);
	add_func    (0X3500B9CD,0X3500B9E8);
	set_func_flags(0X3500B9CD,0x5444);
	set_func_cmt(0X3500B9CD,	"Microsoft VisualC universal runtime\nMicrosoft VisualC universal runtime\nMicrosoft VisualC universal runtime", 1);
	set_frame_size(0X3500B9CD, 0, 0, 0);
	add_func    (0X3500B9E8,0X3500BA12);
	set_func_flags(0X3500B9E8,0x5410);
	SetType(0X3500B9E8, "int __usercall sub_3500B9E8@<eax>(int@<ecx>, int);");
	set_frame_size(0X3500B9E8, 0, 4, 0);
	add_func    (0X3500BA12,0X3500BB85);
	set_func_flags(0X3500BA12,0x5454);
	SetType(0X3500BA12, "int __cdecl _seh_filter_exe(unsigned int ExceptionNum, struct _EXCEPTION_POINTERS *ExceptionPtr);");
	set_frame_size(0X3500BA12, 0XC, 4, 0);
	define_local_var(0X3500BA12, 0X3500BB85, "[bp+0X8]", "ExceptionNum");
	define_local_var(0X3500BA12, 0X3500BB85, "[bp+0XC]", "ExceptionPtr");
	add_func    (0X3500BB9A,0X3500BBB9);
	set_func_flags(0X3500BB9A,0x5454);
	set_func_cmt(0X3500BB9A,	"Microsoft VisualC universal runtime\nMicrosoft VisualC universal runtime\nMicrosoft VisualC universal runtime", 1);
	set_frame_size(0X3500BB9A, 0, 4, 0);
	add_func    (0X3500BBB9,0X3500BBEA);
	set_func_flags(0X3500BBB9,0x5454);
	set_func_cmt(0X3500BBB9,	"Microsoft VisualC universal runtime\nMicrosoft VisualC universal runtime\nMicrosoft VisualC universal runtime", 1);
	set_frame_size(0X3500BBB9, 0X4, 4, 0X4);
	add_func    (0X3500BBEA,0X3500BC03);
	set_func_flags(0X3500BBEA,0x5444);
	set_frame_size(0X3500BBEA, 0, 0, 0);
	add_func    (0X3500BC17,0X3500BC60);
	set_func_flags(0X3500BC17,0x5454);
	set_frame_size(0X3500BC17, 0X8, 4, 0);
	add_func    (0X3500BC60,0X3500BC75);
	set_func_flags(0X3500BC60,0x5454);
	SetType(0X3500BC60, "void __cdecl __setusermatherr(_UserMathErrorFunctionPointer UserMathErrorFunction);");
	set_frame_size(0X3500BC60, 0, 4, 0);
	define_local_var(0X3500BC60, 0X3500BC75, "[bp+0X8]", "UserMathErrorFunction");
	add_func    (0X3500BC75,0X3500BD94);
	set_func_flags(0X3500BC75,0x545c);
	set_frame_size(0X3500BC75, 0X10, 4, 0);
	define_local_var(0X3500BC75, 0X3500BD94, "[bp-0X8]", "Block");
	add_func    (0X3500BD94,0X3500BF1A);
	set_func_flags(0X3500BD94,0x545c);
	set_frame_size(0X3500BD94, 0X1C, 4, 0);
	add_func    (0X3500BF1A,0X3500BF6F);
	set_func_flags(0X3500BF1A,0x5454);
	set_frame_size(0X3500BF1A, 0X4, 4, 0);
	add_func    (0X3500BF6F,0X3500BF7A);
	set_func_flags(0X3500BF6F,0x5454);
	SetType(0X3500BF6F, "errno_t __cdecl _configure_wide_argv(_crt_argv_mode mode);");
	set_frame_size(0X3500BF6F, 0, 4, 0);
	define_local_var(0X3500BF6F, 0X3500BF7A, "[bp+0X8]", "mode");
	add_func    (0X3500BF7A,0X3500BFCE);
	set_func_flags(0X3500BF7A,0x544c);
	set_frame_size(0X3500BF7A, 0, 0, 0);
	add_func    (0X3500BFCE,0X3500C0C8);
	set_func_flags(0X3500BFCE,0x545c);
	SetType(0X3500BFCE, "int __cdecl create_environment_wchar_t_(wchar_t *Source);");
	set_frame_size(0X3500BFCE, 0X14, 4, 0);
	define_local_var(0X3500BFCE, 0X3500C0C8, "[bp-0X8]", "SizeInWords");
	define_local_var(0X3500BFCE, 0X3500C0C8, "[bp+0X8]", "Source");
	add_func    (0X3500C0C8,0X3500C0F7);
	set_func_flags(0X3500C0C8,0x545c);
	SetType(0X3500C0C8, "int __cdecl unknown_libname_46(void *Block);");
	set_func_cmt(0X3500C0C8,	"Microsoft VisualC universal runtime\nMicrosoft VisualC universal runtime\nMicrosoft VisualC universal runtime", 1);
	set_frame_size(0X3500C0C8, 0X4, 4, 0);
	define_local_var(0X3500C0C8, 0X3500C0F7, "[bp+0X8]", "Block");
	add_func    (0X3500C0F7,0X3500C137);
	set_func_flags(0X3500C0F7,0x5454);
	set_func_cmt(0X3500C0F7,	"Microsoft VisualC universal runtime\nMicrosoft VisualC universal runtime\nMicrosoft VisualC universal runtime", 1);
	set_frame_size(0X3500C0F7, 0XC, 4, 0X4);
	add_func    (0X3500C137,0X3500C152);
	set_func_flags(0X3500C137,0x5410);
	set_frame_size(0X3500C137, 0, 4, 0);
	add_func    (0X3500C152,0X3500C16D);
	set_func_flags(0X3500C152,0x5410);
	set_frame_size(0X3500C152, 0, 4, 0);
	add_func    (0X3500C16D,0X3500C1A4);
	set_func_flags(0X3500C16D,0x5444);
	set_frame_size(0X3500C16D, 0, 0, 0);
	add_func    (0X3500C1A9,0X3500C1EF);
	set_func_flags(0X3500C1A9,0x544c);
	set_func_cmt(0X3500C1A9,	"Microsoft VisualC universal runtime\nMicrosoft VisualC universal runtime\nMicrosoft VisualC universal runtime", 1);
	set_frame_size(0X3500C1A9, 0, 0, 0);
	add_func    (0X3500C1EF,0X3500C24B);
	set_func_flags(0X3500C1EF,0x5454);
	SetType(0X3500C1EF, "void __cdecl _initterm(_PVFV *First, _PVFV *Last);");
	set_frame_size(0X3500C1EF, 0X14, 4, 0);
	define_local_var(0X3500C1EF, 0X3500C24B, "[bp+0X8]", "First");
	define_local_var(0X3500C1EF, 0X3500C24B, "[bp+0XC]", "Last");
	add_func    (0X3500C24B,0X3500C290);
	set_func_flags(0X3500C24B,0x5454);
	SetType(0X3500C24B, "int __cdecl _initterm_e(_PIFV *First, _PIFV *Last);");
	set_frame_size(0X3500C24B, 0XC, 4, 0);
	define_local_var(0X3500C24B, 0X3500C290, "[bp+0X8]", "First");
	define_local_var(0X3500C24B, 0X3500C290, "[bp+0XC]", "Last");
	add_func    (0X3500C290,0X3500C2CD);
	set_func_flags(0X3500C290,0x5454);
	SetType(0X3500C290, "errno_t __cdecl _set_fmode(int Mode);");
	set_frame_size(0X3500C290, 0, 4, 0);
	define_local_var(0X3500C290, 0X3500C2CD, "[bp+0X8]", "Mode");
	add_func    (0X3500C2D8,0X3500C32A);
	set_func_flags(0X3500C2D8,0x5454);
	set_frame_size(0X3500C2D8, 0X28, 4, 0);
	define_local_var(0X3500C2D8, 0X3500C32A, "[bp-0X18]", "ms_exc");
	add_func    (0X3500C32A,0X3500C38C);
	set_func_flags(0X3500C32A,0x5454);
	SetType(0X3500C32A, "int __cdecl _configthreadlocale(int Flag);");
	set_frame_size(0X3500C32A, 0X4, 4, 0);
	define_local_var(0X3500C32A, 0X3500C38C, "[bp+0X8]", "Flag");
	add_func    (0X3500C392,0X3500C3C1);
	set_func_flags(0X3500C392,0x5454);
	SetType(0X3500C392, "int __cdecl _set_new_mode(int NewMode);");
	set_frame_size(0X3500C392, 0, 4, 0);
	define_local_var(0X3500C392, 0X3500C3C1, "[bp+0X8]", "NewMode");
	add_func    (0X3500C3C7,0X3500C418);
	set_func_flags(0X3500C3C7,0x5454);
	set_frame_size(0X3500C3C7, 0X2C, 4, 0XC);
	define_local_var(0X3500C3C7, 0X3500C418, "[bp-0X18]", "ms_exc");
	add_func    (0X3500C418,0X3500C469);
	set_func_flags(0X3500C418,0x5454);
	set_frame_size(0X3500C418, 0X2C, 4, 0XC);
	define_local_var(0X3500C418, 0X3500C469, "[bp-0X18]", "ms_exc");
	add_func    (0X3500C4B9,0X3500C5D9);
	set_func_flags(0X3500C4B9,0x545c);
	set_frame_size(0X3500C4B9, 0X1C, 4, 0);
	add_func    (0X3500C5D9,0X3500C71A);
	set_func_flags(0X3500C5D9,0x545c);
	set_frame_size(0X3500C5D9, 0X10, 4, 0);
	add_func    (0X3500C730,0X3500C74D);
	set_func_flags(0X3500C730,0x5454);
	SetType(0X3500C730, "int __cdecl _execute_onexit_table(_onexit_table_t *Table);");
	set_frame_size(0X3500C730, 0X4, 4, 0);
	define_local_var(0X3500C730, 0X3500C74D, "[bp+0X8]", "Table");
	add_func    (0X3500C74D,0X3500C78A);
	set_func_flags(0X3500C74D,0x5454);
	SetType(0X3500C74D, "int __cdecl _initialize_onexit_table(_onexit_table_t *Table);");
	set_frame_size(0X3500C74D, 0X4, 4, 0);
	define_local_var(0X3500C74D, 0X3500C78A, "[bp+0X8]", "Table");
	add_func    (0X3500C78A,0X3500C7AE);
	set_func_flags(0X3500C78A,0x5454);
	SetType(0X3500C78A, "int __cdecl _register_onexit_function(_onexit_table_t *Table, _onexit_t Function);");
	set_frame_size(0X3500C78A, 0X8, 4, 0);
	define_local_var(0X3500C78A, 0X3500C7AE, "[bp+0X8]", "Table");
	define_local_var(0X3500C78A, 0X3500C7AE, "[bp+0XC]", "Function");
	add_func    (0X3500C7C0,0X3500C7DA);
	set_func_flags(0X3500C7C0,0x544c);
	set_frame_size(0X3500C7C0, 0X4, 0, 0);
	define_local_var(0X3500C7C0, 0X3500C7DA, "[bp-0X4]", "Table");
	add_func    (0X3500C7DD,0X3500C7E5);
	set_func_flags(0X3500C7DD,0x544c);
	set_frame_size(0X3500C7DD, 0, 0, 0);
	add_func    (0X3500C7E5,0X3500C822);
	set_func_flags(0X3500C7E5,0x544c);
	set_frame_size(0X3500C7E5, 0X4, 0, 0);
	add_func    (0X3500C822,0X3500C82B);
	set_func_flags(0X3500C822,0x544c);
	set_frame_size(0X3500C822, 0, 0, 0);
	add_func    (0X3500C82B,0X3500C8A2);
	set_func_flags(0X3500C82B,0x544c);
	set_frame_size(0X3500C82B, 0X4, 0, 0);
	add_func    (0X3500C8A2,0X3500C8B4);
	set_func_flags(0X3500C8A2,0x5444);
	SetType(0X3500C8A2, "__crt_bool __cdecl __acrt_initialize();");
	set_frame_size(0X3500C8A2, 0, 0, 0);
	add_func    (0X3500C8B4,0X3500C8C6);
	set_func_flags(0X3500C8B4,0x5444);
	SetType(0X3500C8B4, "__crt_bool __cdecl __acrt_uninitialize(__crt_bool Terminating);");
	set_frame_size(0X3500C8B4, 0, 0, 0);
	define_local_var(0X3500C8B4, 0X3500C8C6, "[bp+0X4]", "Terminating");
	add_func    (0X3500C8C6,0X3500C925);
	set_func_flags(0X3500C8C6,0x5454);
	SetType(0X3500C8C6, "errno_t __cdecl _controlfp_s(unsigned int *CurrentState, unsigned int NewValue, unsigned int Mask);");
	set_frame_size(0X3500C8C6, 0X4, 4, 0);
	define_local_var(0X3500C8C6, 0X3500C925, "[bp+0X8]", "CurrentState");
	define_local_var(0X3500C8C6, 0X3500C925, "[bp+0XC]", "NewValue");
	define_local_var(0X3500C8C6, 0X3500C925, "[bp+0X10]", "Mask");
	add_func    (0X3500C925,0X3500C961);
	set_func_flags(0X3500C925,0x1455);
	set_frame_size(0X3500C925, 0X2C, 4, 0);
	define_local_var(0X3500C925, 0X3500C961, "[bp-0X18]", "ms_exc");
	add_func    (0X3500C961,0X3500C99B);
	set_func_flags(0X3500C961,0x5454);
	SetType(0X3500C961, "void __cdecl _free_base(void *Block);");
	set_frame_size(0X3500C961, 0, 4, 0);
	define_local_var(0X3500C961, 0X3500C99B, "[bp+0X8]", "lpMem");
	add_func    (0X3500C99B,0X3500C9E9);
	set_func_flags(0X3500C99B,0x5454);
	SetType(0X3500C99B, "void *__cdecl _malloc_base(size_t Size);");
	set_frame_size(0X3500C99B, 0X4, 4, 0);
	define_local_var(0X3500C99B, 0X3500C9E9, "[bp+0X8]", "dwBytes");
	add_func    (0X3500C9E9,0X3500CA2B);
	set_func_flags(0X3500C9E9,0x1445);
	SetType(0X3500C9E9, "void __cdecl __noreturn abort();");
	add_func    (0X3500CA2C,0X3500CA89);
	set_func_flags(0X3500CA2C,0x5454);
	SetType(0X3500CA2C, "void *__cdecl _calloc_base(size_t Count, size_t Size);");
	set_frame_size(0X3500CA2C, 0X4, 4, 0);
	define_local_var(0X3500CA2C, 0X3500CA89, "[bp+0X8]", "Count");
	define_local_var(0X3500CA2C, 0X3500CA89, "[bp+0XC]", "Size");
	add_func    (0X3500CA89,0X3500CAE8);
	set_func_flags(0X3500CA89,0x5454);
	SetType(0X3500CA89, "int __cdecl iswctype(wint_t C, wctype_t Type);");
	set_frame_size(0X3500CA89, 0X8, 4, 0);
	define_local_var(0X3500CA89, 0X3500CAE8, "[bp-0X8]", "SrcStr");
	define_local_var(0X3500CA89, 0X3500CAE8, "[bp-0X4]", "CharType");
	define_local_var(0X3500CA89, 0X3500CAE8, "[bp+0X8]", "C");
	define_local_var(0X3500CA89, 0X3500CAE8, "[bp+0XC]", "Type");
	add_func    (0X3500CAE8,0X3500CB26);
	set_func_flags(0X3500CAE8,0x5454);
	SetType(0X3500CAE8, "int __cdecl __acrt_LCMapStringW(wchar_t *, DWORD dwMapFlags, wchar_t *Source, size_t MaxCount, LPWSTR lpDestStr, int cchDest);");
	set_frame_size(0X3500CAE8, 0X4, 4, 0);
	define_local_var(0X3500CAE8, 0X3500CB26, "[bp+0XC]", "dwMapFlags");
	define_local_var(0X3500CAE8, 0X3500CB26, "[bp+0X10]", "Source");
	define_local_var(0X3500CAE8, 0X3500CB26, "[bp+0X14]", "MaxCount");
	define_local_var(0X3500CAE8, 0X3500CB26, "[bp+0X18]", "lpDestStr");
	define_local_var(0X3500CAE8, 0X3500CB26, "[bp+0X1C]", "cchDest");
	add_func    (0X3500CB26,0X3500CB76);
	set_func_flags(0X3500CB26,0x5454);
	set_frame_size(0X3500CB26, 0X28, 4, 0XC);
	define_local_var(0X3500CB26, 0X3500CB76, "[bp-0X18]", "ms_exc");
	add_func    (0X3500CB76,0X3500CBD7);
	set_func_flags(0X3500CB76,0x5454);
	set_frame_size(0X3500CB76, 0X28, 4, 0XC);
	define_local_var(0X3500CB76, 0X3500CBD7, "[bp-0X18]", "ms_exc");
	add_func    (0X3500CBD7,0X3500CC22);
	set_func_flags(0X3500CBD7,0x5454);
	set_frame_size(0X3500CBD7, 0X28, 4, 0XC);
	define_local_var(0X3500CBD7, 0X3500CC22, "[bp-0X18]", "ms_exc");
	add_func    (0X3500CC22,0X3500CC6A);
	set_func_flags(0X3500CC22,0x5454);
	set_frame_size(0X3500CC22, 0X28, 4, 0XC);
	define_local_var(0X3500CC22, 0X3500CC6A, "[bp-0X18]", "ms_exc");
	add_func    (0X3500CD0A,0X3500CD83);
	set_func_flags(0X3500CD0A,0x545c);
	SetType(0X3500CD0A, "void __cdecl construct_ptd(struct __acrt_ptd *const, struct __crt_locale_data **const);");
	set_frame_size(0X3500CD0A, 0X8, 4, 0);
	add_func    (0X3500CD83,0X3500CDA4);
	set_func_flags(0X3500CD83,0x545c);
	SetType(0X3500CD83, "void __stdcall destroy_fls(void *Block);");
	set_frame_size(0X3500CD83, 0, 4, 0X4);
	define_local_var(0X3500CD83, 0X3500CDA4, "[bp+0X8]", "Block");
	add_func    (0X3500CDA4,0X3500CE4D);
	set_func_flags(0X3500CDA4,0x545c);
	SetType(0X3500CDA4, "void __cdecl destroy_ptd(struct __acrt_ptd *const);");
	set_frame_size(0X3500CDA4, 0X4, 4, 0);
	add_func    (0X3500CE4D,0X3500CE98);
	set_func_flags(0X3500CE4D,0x545c);
	SetType(0X3500CE4D, "void __cdecl replace_current_thread_locale_nolock(struct __acrt_ptd *const, struct __crt_locale_data *const);");
	set_frame_size(0X3500CE4D, 0X4, 4, 0);
	add_func    (0X3500CE98,0X3500CF1B);
	set_func_flags(0X3500CE98,0x5444);
	set_frame_size(0X3500CE98, 0X8, 0, 0);
	add_func    (0X3500CF1C,0X3500CFA1);
	set_func_flags(0X3500CF1C,0x5444);
	set_frame_size(0X3500CF1C, 0XC, 0, 0);
	add_func    (0X3500CFA1,0X3500CFCD);
	set_func_flags(0X3500CFA1,0x5444);
	set_frame_size(0X3500CFA1, 0, 0, 0);
	add_func    (0X3500CFCD,0X3500CFE7);
	set_func_flags(0X3500CFCD,0x5444);
	set_frame_size(0X3500CFCD, 0, 0, 0);
	add_func    (0X3500CFE7,0X3500D014);
	set_func_flags(0X3500CFE7,0x5410);
	set_frame_size(0X3500CFE7, 0X4, 4, 0);
	add_func    (0X3500D014,0X3500D041);
	set_func_flags(0X3500D014,0x5410);
	set_frame_size(0X3500D014, 0X4, 4, 0);
	add_func    (0X3500D041,0X3500D067);
	set_func_flags(0X3500D041,0x5454);
	SetType(0X3500D041, "const unsigned __int16 *__cdecl __pctype_func();");
	set_frame_size(0X3500D041, 0X4, 4, 0);
	add_func    (0X3500D067,0X3500D139);
	set_func_flags(0X3500D067,0x5454);
	SetType(0X3500D067, "int __cdecl _isctype_l(int C, int Type, _locale_t Locale);");
	set_frame_size(0X3500D067, 0X28, 4, 0);
	define_local_var(0X3500D067, 0X3500D139, "[bp-0X10]", "MultiByteStr");
	define_local_var(0X3500D067, 0X3500D139, "[bp-0XC]", "CharType");
	define_local_var(0X3500D067, 0X3500D139, "[bp+0X8]", "C");
	define_local_var(0X3500D067, 0X3500D139, "[bp+0XC]", "Type");
	define_local_var(0X3500D067, 0X3500D139, "[bp+0X10]", "Locale");
	add_func    (0X3500D139,0X3500D17C);
	set_func_flags(0X3500D139,0x5454);
	set_frame_size(0X3500D139, 0, 4, 0);
	add_func    (0X3500D17C,0X3500D19F);
	set_func_flags(0X3500D17C,0x5454);
	set_frame_size(0X3500D17C, 0X4, 4, 0);
	add_func    (0X3500D19F,0X3500D1B2);
	set_func_flags(0X3500D19F,0x5444);
	SetType(0X3500D19F, "unsigned int *__cdecl __doserrno();");
	set_frame_size(0X3500D19F, 0, 0, 0);
	add_func    (0X3500D1B2,0X3500D1C5);
	set_func_flags(0X3500D1B2,0x5444);
	SetType(0X3500D1B2, "int *__cdecl _errno();");
	set_frame_size(0X3500D1B2, 0, 0, 0);
	add_func    (0X3500D1C5,0X3500D1FE);
	set_func_flags(0X3500D1C5,0x5454);
	SetType(0X3500D1C5, "int __cdecl _isleadbyte_l(int C, _locale_t Locale);");
	set_frame_size(0X3500D1C5, 0X10, 4, 0);
	define_local_var(0X3500D1C5, 0X3500D1FE, "[bp+0X8]", "C");
	define_local_var(0X3500D1C5, 0X3500D1FE, "[bp+0XC]", "Locale");
	add_func    (0X3500D1FE,0X3500D41B);
	set_func_flags(0X3500D1FE,0x545c);
	SetType(0X3500D1FE, "int __cdecl __acrt_LCMapStringA_stat(struct __crt_locale_pointers *, const wchar_t *, DWORD dwMapFlags, LPCCH lpMultiByteStr, int cbMultiByte, LPWSTR lpDestStr, int cchDest, UINT CodePage, int);");
	set_frame_size(0X3500D1FE, 0X14, 4, 0);
	define_local_var(0X3500D1FE, 0X3500D41B, "[bp-0X8]", "cchWideChar");
	define_local_var(0X3500D1FE, 0X3500D41B, "[bp+0X10]", "dwMapFlags");
	define_local_var(0X3500D1FE, 0X3500D41B, "[bp+0X14]", "lpMultiByteStr");
	define_local_var(0X3500D1FE, 0X3500D41B, "[bp+0X18]", "cbMultiByte");
	define_local_var(0X3500D1FE, 0X3500D41B, "[bp+0X1C]", "lpDestStr");
	define_local_var(0X3500D1FE, 0X3500D41B, "[bp+0X20]", "cchDest");
	define_local_var(0X3500D1FE, 0X3500D41B, "[bp+0X24]", "CodePage");
	add_func    (0X3500D41B,0X3500D466);
	set_func_flags(0X3500D41B,0x5454);
	SetType(0X3500D41B, "int __cdecl __acrt_LCMapStringA(struct __crt_locale_pointers *, wchar_t *, DWORD dwMapFlags, LPCCH lpMultiByteStr, int cbMultiByte, LPWSTR lpDestStr, int cchDest, UINT CodePage, int);");
	set_frame_size(0X3500D41B, 0X10, 4, 0);
	define_local_var(0X3500D41B, 0X3500D466, "[bp+0X10]", "dwMapFlags");
	define_local_var(0X3500D41B, 0X3500D466, "[bp+0X14]", "lpMultiByteStr");
	define_local_var(0X3500D41B, 0X3500D466, "[bp+0X18]", "cbMultiByte");
	define_local_var(0X3500D41B, 0X3500D466, "[bp+0X1C]", "lpDestStr");
	define_local_var(0X3500D41B, 0X3500D466, "[bp+0X20]", "cchDest");
	define_local_var(0X3500D41B, 0X3500D466, "[bp+0X24]", "CodePage");
	add_func    (0X3500D466,0X3500D486);
	set_func_flags(0X3500D466,0x5454);
	set_frame_size(0X3500D466, 0, 4, 0);
	add_func    (0X3500D486,0X3500D5C1);
	set_func_flags(0X3500D486,0x5454);
	set_frame_size(0X3500D486, 0X32C, 4, 0);
	define_local_var(0X3500D486, 0X3500D5C1, "[bp-0X328]", "ExceptionInfo");
	add_func    (0X3500D5D5,0X3500D650);
	set_func_flags(0X3500D5D5,0x5454);
	SetType(0X3500D5D5, "int __cdecl _invalid_parameter(wchar_t *Expression, wchar_t *FunctionName, wchar_t *FileName, unsigned int LineNo, uintptr_t Reserved);");
	set_frame_size(0X3500D5D5, 0X8, 4, 0);
	define_local_var(0X3500D5D5, 0X3500D650, "[bp+0X8]", "Expression");
	define_local_var(0X3500D5D5, 0X3500D650, "[bp+0XC]", "FunctionName");
	define_local_var(0X3500D5D5, 0X3500D650, "[bp+0X10]", "FileName");
	define_local_var(0X3500D5D5, 0X3500D650, "[bp+0X14]", "LineNo");
	define_local_var(0X3500D5D5, 0X3500D650, "[bp+0X18]", "Reserved");
	add_func    (0X3500D650,0X3500D660);
	set_func_flags(0X3500D650,0x5444);
	SetType(0X3500D650, "void __cdecl _invalid_parameter_noinfo();");
	set_frame_size(0X3500D650, 0, 0, 0);
	add_func    (0X3500D660,0X3500D693);
	set_func_flags(0X3500D660,0x5445);
	SetType(0X3500D660, "void __cdecl __noreturn _invoke_watson(const wchar_t *Expression, const wchar_t *FunctionName, const wchar_t *FileName, unsigned int LineNo, uintptr_t Reserved);");
	set_frame_size(0X3500D660, 0, 0, 0);
	define_local_var(0X3500D660, 0X3500D693, "[bp+0X4]", "Expression");
	define_local_var(0X3500D660, 0X3500D693, "[bp+0X8]", "FunctionName");
	define_local_var(0X3500D660, 0X3500D693, "[bp+0XC]", "FileName");
	define_local_var(0X3500D660, 0X3500D693, "[bp+0X10]", "LineNo");
	define_local_var(0X3500D660, 0X3500D693, "[bp+0X14]", "Reserved");
	add_func    (0X3500D695,0X3500D6D4);
	set_func_flags(0X3500D695,0x5444);
	set_frame_size(0X3500D695, 0X8, 0, 0);
	add_func    (0X3500D6D4,0X3500D6EB);
	set_func_flags(0X3500D6D4,0x5454);
	set_frame_size(0X3500D6D4, 0, 4, 0);
	add_func    (0X3500D6EB,0X3500D71C);
	set_func_flags(0X3500D6EB,0x5444);
	set_frame_size(0X3500D6EB, 0X4, 0, 0);
	add_func    (0X3500D71C,0X3500D733);
	set_func_flags(0X3500D71C,0x5454);
	set_frame_size(0X3500D71C, 0, 4, 0);
	add_func    (0X3500D733,0X3500D7CF);
	set_func_flags(0X3500D733,0x545c);
	set_frame_size(0X3500D733, 0XC, 4, 0);
	define_local_var(0X3500D733, 0X3500D7CF, "[bp+0XC]", "lpProcName");
	add_func    (0X3500D7CF,0X3500D84A);
	set_func_flags(0X3500D7CF,0x545c);
	set_frame_size(0X3500D7CF, 0X4, 4, 0);
	add_func    (0X3500D84A,0X3500D8A0);
	set_func_flags(0X3500D84A,0x5454);
	set_frame_size(0X3500D84A, 0X8, 4, 0X4);
	add_func    (0X3500D8A0,0X3500D8F6);
	set_func_flags(0X3500D8A0,0x5454);
	SetType(0X3500D8A0, "int __stdcall __acrt_FlsFree(DWORD dwTlsIndex);");
	set_frame_size(0X3500D8A0, 0X8, 4, 0X4);
	define_local_var(0X3500D8A0, 0X3500D8F6, "[bp+0X8]", "dwTlsIndex");
	add_func    (0X3500D8F6,0X3500D94C);
	set_func_flags(0X3500D8F6,0x5454);
	SetType(0X3500D8F6, "int __stdcall __acrt_FlsGetValue(DWORD dwTlsIndex);");
	set_frame_size(0X3500D8F6, 0X8, 4, 0X4);
	define_local_var(0X3500D8F6, 0X3500D94C, "[bp+0X8]", "dwTlsIndex");
	add_func    (0X3500D94C,0X3500D9A5);
	set_func_flags(0X3500D94C,0x5454);
	SetType(0X3500D94C, "int __stdcall __acrt_FlsSetValue(DWORD dwTlsIndex, LPVOID lpTlsValue);");
	set_frame_size(0X3500D94C, 0X8, 4, 0X8);
	define_local_var(0X3500D94C, 0X3500D9A5, "[bp+0X8]", "dwTlsIndex");
	define_local_var(0X3500D94C, 0X3500D9A5, "[bp+0XC]", "lpTlsValue");
	add_func    (0X3500D9A5,0X3500DA07);
	set_func_flags(0X3500D9A5,0x5454);
	SetType(0X3500D9A5, "int __stdcall __acrt_InitializeCriticalSectionEx(LPCRITICAL_SECTION lpCriticalSection, DWORD dwSpinCount, int);");
	set_frame_size(0X3500D9A5, 0X8, 4, 0XC);
	define_local_var(0X3500D9A5, 0X3500DA07, "[bp+0X8]", "lpCriticalSection");
	define_local_var(0X3500D9A5, 0X3500DA07, "[bp+0XC]", "dwSpinCount");
	add_func    (0X3500DA07,0X3500DA8F);
	set_func_flags(0X3500DA07,0x5454);
	SetType(0X3500DA07, "int __stdcall __acrt_LCMapStringEx(wchar_t *, DWORD dwMapFlags, LPCWSTR lpSrcStr, int cchSrc, LPWSTR lpDestStr, int cchDest, int, int, int);");
	set_frame_size(0X3500DA07, 0X8, 4, 0X24);
	define_local_var(0X3500DA07, 0X3500DA8F, "[bp+0XC]", "dwMapFlags");
	define_local_var(0X3500DA07, 0X3500DA8F, "[bp+0X10]", "lpSrcStr");
	define_local_var(0X3500DA07, 0X3500DA8F, "[bp+0X14]", "cchSrc");
	define_local_var(0X3500DA07, 0X3500DA8F, "[bp+0X18]", "lpDestStr");
	define_local_var(0X3500DA07, 0X3500DA8F, "[bp+0X1C]", "cchDest");
	add_func    (0X3500DA8F,0X3500DAEB);
	set_func_flags(0X3500DA8F,0x5454);
	SetType(0X3500DA8F, "int __stdcall __acrt_LocaleNameToLCID(wchar_t *, int);");
	set_frame_size(0X3500DA8F, 0X8, 4, 0X8);
	add_func    (0X3500DAEB,0X3500DB11);
	set_func_flags(0X3500DAEB,0x5444);
	set_frame_size(0X3500DAEB, 0X4, 0, 0);
	add_func    (0X3500DB11,0X3500DB98);
	set_func_flags(0X3500DB11,0x5454);
	set_frame_size(0X3500DB11, 0X8, 4, 0);
	add_func    (0X3500DB98,0X3500DBCE);
	set_func_flags(0X3500DB98,0x5454);
	set_frame_size(0X3500DB98, 0, 4, 0);
	add_func    (0X3500DBCE,0X3500DC32);
	set_func_flags(0X3500DBCE,0x5454);
	SetType(0X3500DBCE, "errno_t __cdecl wcscpy_s(wchar_t *Destination, rsize_t SizeInWords, const wchar_t *Source);");
	set_frame_size(0X3500DBCE, 0X4, 4, 0);
	define_local_var(0X3500DBCE, 0X3500DC32, "[bp+0X8]", "Destination");
	define_local_var(0X3500DBCE, 0X3500DC32, "[bp+0XC]", "SizeInWords");
	define_local_var(0X3500DBCE, 0X3500DC32, "[bp+0X10]", "Source");
	add_func    (0X3500DC32,0X3500DCFF);
	set_func_flags(0X3500DC32,0x545c);
	set_frame_size(0X3500DC32, 0X8, 4, 0);
	add_func    (0X3500DCFF,0X3500DD0A);
	set_func_flags(0X3500DCFF,0x5454);
	SetType(0X3500DCFF, "errno_t __cdecl wcsncpy_s(wchar_t *Destination, rsize_t SizeInWords, const wchar_t *Source, rsize_t MaxCount);");
	set_frame_size(0X3500DCFF, 0, 4, 0);
	define_local_var(0X3500DCFF, 0X3500DD0A, "[bp+0X8]", "Destination");
	define_local_var(0X3500DCFF, 0X3500DD0A, "[bp+0XC]", "SizeInWords");
	define_local_var(0X3500DCFF, 0X3500DD0A, "[bp+0X10]", "Source");
	define_local_var(0X3500DCFF, 0X3500DD0A, "[bp+0X14]", "MaxCount");
	add_func    (0X3500DD0A,0X3500DD22);
	set_func_flags(0X3500DD0A,0x545c);
	SetType(0X3500DD0A, "int __cdecl unknown_libname_49(const void *, const void *);");
	set_func_cmt(0X3500DD0A,	"Microsoft VisualC universal runtime\nMicrosoft VisualC universal runtime\nMicrosoft VisualC universal runtime", 1);
	set_frame_size(0X3500DD0A, 0, 4, 0);
	add_func    (0X3500DD22,0X3500DEEE);
	set_func_flags(0X3500DD22,0x545c);
	set_frame_size(0X3500DD22, 0X34, 4, 0);
	define_local_var(0X3500DD22, 0X3500DEEE, "[bp-0XC]", "Control");
	add_func    (0X3500DEEF,0X3500DF8C);
	set_func_flags(0X3500DEEF,0x545c);
	SetType(0X3500DEEF, "int __cdecl copy_and_add_argument_to_buffer_wchar_t_(wchar_t *, wchar_t *Source, rsize_t MaxCount, int);");
	set_frame_size(0X3500DEEF, 0XC, 4, 0);
	define_local_var(0X3500DEEF, 0X3500DF8C, "[bp+0XC]", "Source");
	define_local_var(0X3500DEEF, 0X3500DF8C, "[bp+0X10]", "MaxCount");
	add_func    (0X3500DF8D,0X3500E143);
	set_func_flags(0X3500DF8D,0x545c);
	SetType(0X3500DF8D, "int __cdecl expand_argument_wildcards_wchar_t_(LPCWSTR lpFileName, int, int);");
	set_frame_size(0X3500DF8D, 0X26C, 4, 0);
	define_local_var(0X3500DF8D, 0X3500E143, "[bp-0X25C]", "MaxCount");
	define_local_var(0X3500DF8D, 0X3500E143, "[bp-0X254]", "FindFileData");
	define_local_var(0X3500DF8D, 0X3500E143, "[bp+0X8]", "lpFileName");
	add_func    (0X3500E143,0X3500E168);
	set_func_flags(0X3500E143,0x5444);
	set_func_cmt(0X3500E143,	"Microsoft VisualC universal runtime\nMicrosoft VisualC universal runtime\nMicrosoft VisualC universal runtime", 1);
	set_frame_size(0X3500E143, 0X8, 0, 0);
	add_func    (0X3500E168,0X3500E19D);
	set_func_flags(0X3500E168,0x5410);
	SetType(0X3500E168, "int __stdcall sub_3500E168(void *Block);");
	set_frame_size(0X3500E168, 0X8, 4, 0X4);
	define_local_var(0X3500E168, 0X3500E19D, "[bp+0X8]", "Block");
	add_func    (0X3500E19D,0X3500E224);
	set_func_flags(0X3500E19D,0x5444);
	set_func_cmt(0X3500E19D,	"Microsoft VisualC universal runtime\nMicrosoft VisualC universal runtime\nMicrosoft VisualC universal runtime", 1);
	set_frame_size(0X3500E19D, 0X8, 0, 0);
	add_func    (0X3500E224,0X3500E22F);
	set_func_flags(0X3500E224,0x5454);
	set_frame_size(0X3500E224, 0, 4, 0);
	add_func    (0X3500E22F,0X3500E272);
	set_func_flags(0X3500E22F,0x5454);
	set_frame_size(0X3500E22F, 0X28, 4, 0XC);
	define_local_var(0X3500E22F, 0X3500E272, "[bp-0X18]", "ms_exc");
	add_func    (0X3500E29A,0X3500E35E);
	set_func_flags(0X3500E29A,0x544c);
	set_frame_size(0X3500E29A, 0X4, 0, 0);
	add_func    (0X3500E35E,0X3500E39C);
	set_func_flags(0X3500E35E,0x545c);
	SetType(0X3500E35E, "const wchar_t *__cdecl CPtoLocaleName(int);");
	set_frame_size(0X3500E35E, 0, 4, 0);
	add_func    (0X3500E39C,0X3500E40F);
	set_func_flags(0X3500E39C,0x545c);
	SetType(0X3500E39C, "int __cdecl getSystemCP(int);");
	set_frame_size(0X3500E39C, 0X10, 4, 0);
	add_func    (0X3500E40F,0X3500E474);
	set_func_flags(0X3500E40F,0x545c);
	SetType(0X3500E40F, "void __cdecl setSBCS(struct __crt_multibyte_data *);");
	set_frame_size(0X3500E40F, 0XC, 4, 0);
	add_func    (0X3500E474,0X3500E608);
	set_func_flags(0X3500E474,0x545c);
	SetType(0X3500E474, "void __cdecl setSBUpLow(struct __crt_multibyte_data *);");
	set_frame_size(0X3500E474, 0X72C, 4, 0);
	define_local_var(0X3500E474, 0X3500E608, "[bp-0X718]", "CPInfo");
	define_local_var(0X3500E474, 0X3500E608, "[bp-0X704]", "CharType");
	define_local_var(0X3500E474, 0X3500E608, "[bp-0X204]", "DestStr");
	define_local_var(0X3500E474, 0X3500E608, "[bp-0X104]", "MultiByteStr");
	add_func    (0X3500E608,0X3500E709);
	set_func_flags(0X3500E608,0x545c);
	SetType(0X3500E608, "int __cdecl setmbcp_internal(int, bool);");
	set_frame_size(0X3500E608, 0XC, 4, 0);
	add_func    (0X3500E709,0X3500E727);
	set_func_flags(0X3500E709,0x5444);
	set_frame_size(0X3500E709, 0, 0, 0);
	add_func    (0X3500E727,0X3500E7C9);
	set_func_flags(0X3500E727,0x5454);
	set_frame_size(0X3500E727, 0X2C, 4, 0);
	define_local_var(0X3500E727, 0X3500E7C9, "[bp-0X18]", "ms_exc");
	add_func    (0X3500E7C9,0X3500E9BA);
	set_func_flags(0X3500E7C9,0x5454);
	SetType(0X3500E7C9, "int __cdecl _setmbcp_nolock(int, struct __crt_multibyte_data *);");
	set_frame_size(0X3500E7C9, 0X28, 4, 0);
	define_local_var(0X3500E7C9, 0X3500E9BA, "[bp-0X18]", "CPInfo");
	add_func    (0X3500E9BA,0X3500E9BC);
	set_func_flags(0X3500E9BA,0x5444);
	SetType(0X3500E9BA, "errno_t __cdecl static memcpy_s(void *const Destination, const rsize_t DestinationSize, const void *const Source, const rsize_t SourceSize);");
	set_frame_size(0X3500E9BA, 0, 0, 0);
	define_local_var(0X3500E9BA, 0X3500E9BC, "[bp+0X10]", "DestinationSize");
	define_local_var(0X3500E9BA, 0X3500E9BC, "[bp+0X14]", "Src");
	define_local_var(0X3500E9BA, 0X3500E9BC, "[bp+0X18]", "Size");
	add_func    (0X3500E9BC,0X3500EA3B);
	set_func_flags(0X3500E9BC,0x5454);
	SetType(0X3500E9BC, "errno_t __cdecl static memcpy_s_0(void *const Destination, const rsize_t DestinationSize, const void *const Source, const rsize_t SourceSize);");
	set_frame_size(0X3500E9BC, 0X4, 4, 0);
	define_local_var(0X3500E9BC, 0X3500EA3B, "[bp+0X8]", "Destination");
	define_local_var(0X3500E9BC, 0X3500EA3B, "[bp+0XC]", "DestinationSize");
	define_local_var(0X3500E9BC, 0X3500EA3B, "[bp+0X10]", "Source");
	define_local_var(0X3500E9BC, 0X3500EA3B, "[bp+0X14]", "SourceSize");
	add_func    (0X3500EA3B,0X3500EA54);
	set_func_flags(0X3500EA3B,0x5444);
	set_frame_size(0X3500EA3B, 0, 0, 0);
	add_func    (0X3500EA54,0X3500EA8B);
	set_func_flags(0X3500EA54,0x545c);
	SetType(0X3500EA54, "const wchar_t *__cdecl find_end_of_double_null_terminated_sequence(const wchar_t *const);");
	set_frame_size(0X3500EA54, 0X4, 4, 0);
	add_func    (0X3500EA8B,0X3500EADB);
	set_func_flags(0X3500EA8B,0x5444);
	set_frame_size(0X3500EA8B, 0X8, 0, 0);
	add_func    (0X3500EADB,0X3500EB55);
	set_func_flags(0X3500EADB,0x5454);
	set_frame_size(0X3500EADB, 0X10, 4, 0);
	add_func    (0X3500EB55,0X3500EB8A);
	set_func_flags(0X3500EB55,0x5454);
	SetType(0X3500EB55, "int __cdecl __acrt_lowio_destroy_handle_array(LPCRITICAL_SECTION lpCriticalSection);");
	set_frame_size(0X3500EB55, 0X4, 4, 0);
	define_local_var(0X3500EB55, 0X3500EB8A, "[bp+0X8]", "lpCriticalSection");
	add_func    (0X3500EB8A,0X3500EC22);
	set_func_flags(0X3500EB8A,0x5454);
	set_frame_size(0X3500EB8A, 0X34, 4, 0);
	define_local_var(0X3500EB8A, 0X3500EC22, "[bp-0X18]", "ms_exc");
	add_func    (0X3500EC22,0X3500EC45);
	set_func_flags(0X3500EC22,0x5454);
	set_frame_size(0X3500EC22, 0, 4, 0);
	add_func    (0X3500EC45,0X3500EC68);
	set_func_flags(0X3500EC45,0x5454);
	set_frame_size(0X3500EC45, 0, 4, 0);
	add_func    (0X3500EC68,0X3500ECF9);
	set_func_flags(0X3500EC68,0x5454);
	set_frame_size(0X3500EC68, 0XC, 4, 0);
	add_func    (0X3500ECF9,0X3500ED63);
	set_func_flags(0X3500ECF9,0x5454);
	SetType(0X3500ECF9, "intptr_t __cdecl _get_osfhandle(int FileHandle);");
	set_frame_size(0X3500ECF9, 0, 4, 0);
	define_local_var(0X3500ECF9, 0X3500ED63, "[bp+0X8]", "FileHandle");
	add_func    (0X3500ED63,0X3500EE19);
	set_func_flags(0X3500ED63,0x545c);
	SetType(0X3500ED63, "void __cdecl initialize_inherited_file_handles_nolock();");
	set_frame_size(0X3500ED63, 0X48, 4, 0);
	define_local_var(0X3500ED63, 0X3500EE19, "[bp-0X48]", "StartupInfo");
	add_func    (0X3500EE19,0X3500EECF);
	set_func_flags(0X3500EE19,0x544c);
	SetType(0X3500EE19, "void __cdecl initialize_stdio_handles_nolock();");
	set_frame_size(0X3500EE19, 0XC, 0, 0);
	add_func    (0X3500EECF,0X3500EF25);
	set_func_flags(0X3500EECF,0x5454);
	set_frame_size(0X3500EECF, 0X2C, 4, 0);
	define_local_var(0X3500EECF, 0X3500EF25, "[bp-0X18]", "ms_exc");
	add_func    (0X3500EF27,0X3500EF51);
	set_func_flags(0X3500EF27,0x5444);
	set_frame_size(0X3500EF27, 0X4, 0, 0);
	add_func    (0X3500EF51,0X3500F04F);
	set_func_flags(0X3500EF51,0x5454);
	set_frame_size(0X3500EF51, 0X4, 4, 0);
	add_func    (0X3500F04F,0X3500F0B8);
	set_func_flags(0X3500F04F,0x5454);
	set_frame_size(0X3500F04F, 0X4, 4, 0);
	add_func    (0X3500F0B8,0X3500F0F4);
	set_func_flags(0X3500F0B8,0x545c);
	SetType(0X3500F0B8, "void __cdecl free_crt_array_internal(const void **const, unsigned int);");
	set_frame_size(0X3500F0B8, 0XC, 4, 0);
	add_func    (0X3500F0F4,0X3500F1D8);
	set_func_flags(0X3500F0F4,0x5454);
	SetType(0X3500F0F4, "int __cdecl __acrt_locale_free_time(void **);");
	set_frame_size(0X3500F0F4, 0X4, 4, 0);
	add_func    (0X3500F1D8,0X3500F38F);
	set_func_flags(0X3500F1D8,0x5454);
	SetType(0X3500F1D8, "size_t __cdecl wcsnlen(const wchar_t *Source, size_t MaxCount);");
	set_frame_size(0X3500F1D8, 0XC, 4, 0);
	define_local_var(0X3500F1D8, 0X3500F38F, "[bp+0X8]", "Source");
	define_local_var(0X3500F1D8, 0X3500F38F, "[bp+0XC]", "MaxCount");
	add_func    (0X3500F38F,0X3500F3D4);
	set_func_flags(0X3500F38F,0x5454);
	SetType(0X3500F38F, "wchar_t *__cdecl wcspbrk(const wchar_t *String, const wchar_t *Control);");
	set_frame_size(0X3500F38F, 0XC, 4, 0);
	define_local_var(0X3500F38F, 0X3500F3D4, "[bp+0X8]", "String");
	define_local_var(0X3500F38F, 0X3500F3D4, "[bp+0XC]", "Control");
	add_func    (0X3500F3D4,0X3500F4F1);
	set_func_flags(0X3500F3D4,0x5454);
	SetType(0X3500F3D4, "int __cdecl __acrt_GetStringTypeA(struct __crt_locale_pointers *, DWORD dwInfoType, LPCCH lpMultiByteStr, int cbMultiByte, LPWORD lpCharType, UINT CodePage, int);");
	set_frame_size(0X3500F3D4, 0X24, 4, 0);
	define_local_var(0X3500F3D4, 0X3500F4F1, "[bp-0X8]", "cchWideChar");
	define_local_var(0X3500F3D4, 0X3500F4F1, "[bp+0XC]", "dwInfoType");
	define_local_var(0X3500F3D4, 0X3500F4F1, "[bp+0X10]", "lpMultiByteStr");
	define_local_var(0X3500F3D4, 0X3500F4F1, "[bp+0X14]", "cbMultiByte");
	define_local_var(0X3500F3D4, 0X3500F4F1, "[bp+0X18]", "lpCharType");
	define_local_var(0X3500F3D4, 0X3500F4F1, "[bp+0X1C]", "CodePage");
	add_func    (0X3500F4F1,0X3500F56E);
	set_func_flags(0X3500F4F1,0x5454);
	set_frame_size(0X3500F4F1, 0, 4, 0);
	add_func    (0X3500F56E,0X3500F6B8);
	set_func_flags(0X3500F56E,0x5454);
	SetType(0X3500F56E, "int __cdecl __acrt_free_locale(void *Block);");
	set_frame_size(0X3500F56E, 0X10, 4, 0);
	define_local_var(0X3500F56E, 0X3500F6B8, "[bp+0X8]", "Block");
	add_func    (0X3500F6B8,0X3500F6E1);
	set_func_flags(0X3500F6B8,0x5454);
	set_frame_size(0X3500F6B8, 0, 4, 0);
	add_func    (0X3500F6E1,0X3500F711);
	set_func_flags(0X3500F6E1,0x5454);
	SetType(0X3500F6E1, "int __cdecl __acrt_locale_free_lc_time_if_unreferenced(void *Block);");
	set_frame_size(0X3500F6E1, 0X4, 4, 0);
	define_local_var(0X3500F6E1, 0X3500F711, "[bp+0X8]", "Block");
	add_func    (0X3500F711,0X3500F73A);
	set_func_flags(0X3500F711,0x5454);
	set_frame_size(0X3500F711, 0, 4, 0);
	add_func    (0X3500F73A,0X3500F7BB);
	set_func_flags(0X3500F73A,0x5454);
	set_frame_size(0X3500F73A, 0, 4, 0);
	add_func    (0X3500F7BB,0X3500F832);
	set_func_flags(0X3500F7BB,0x5454);
	set_frame_size(0X3500F7BB, 0X2C, 4, 0);
	define_local_var(0X3500F7BB, 0X3500F832, "[bp-0X18]", "ms_exc");
	add_func    (0X3500F832,0X3500F882);
	set_func_flags(0X3500F832,0x5454);
	set_frame_size(0X3500F832, 0X8, 4, 0);
	add_func    (0X3500F882,0X3500F88D);
	set_func_flags(0X3500F882,0x5454);
	SetType(0X3500F882, "int __cdecl _recalloc(void *Block, int, int);");
	set_frame_size(0X3500F882, 0, 4, 0);
	define_local_var(0X3500F882, 0X3500F88D, "[bp+0X8]", "Block");
	add_func    (0X3500F88D,0X3500F8FA);
	set_func_flags(0X3500F88D,0x5454);
	SetType(0X3500F88D, "void *__cdecl _recalloc_base(void *Block, size_t Count, size_t Size);");
	set_frame_size(0X3500F88D, 0X4, 4, 0);
	define_local_var(0X3500F88D, 0X3500F8FA, "[bp+0X8]", "Block");
	define_local_var(0X3500F88D, 0X3500F8FA, "[bp+0XC]", "Count");
	define_local_var(0X3500F88D, 0X3500F8FA, "[bp+0X10]", "Size");
	add_func    (0X3500F8FA,0X3500F90B);
	set_func_flags(0X3500F8FA,0x5444);
	set_frame_size(0X3500F8FA, 0, 0, 0);
	add_func    (0X3500F915,0X3500F998);
	set_func_flags(0X3500F915,0x5454);
	set_frame_size(0X3500F915, 0X8, 4, 0);
	add_func    (0X3500F998,0X3500F9E5);
	set_func_flags(0X3500F998,0x5454);
	set_frame_size(0X3500F998, 0X8, 4, 0);
	add_func    (0X3500F9F9,0X3500FA3D);
	set_func_flags(0X3500F9F9,0x5454);
	SetType(0X3500F9F9, "int __cdecl _callnewh(size_t Size);");
	set_frame_size(0X3500F9F9, 0X8, 4, 0);
	define_local_var(0X3500F9F9, 0X3500FA3D, "[bp+0X8]", "Size");
	add_func    (0X3500FA3D,0X3500FA8F);
	set_func_flags(0X3500FA3D,0x5454);
	SetType(0X3500FA3D, "_PNH __cdecl _query_new_handler();");
	set_frame_size(0X3500FA3D, 0X2C, 4, 0);
	define_local_var(0X3500FA3D, 0X3500FA8F, "[bp-0X18]", "ms_exc");
	add_func    (0X3500FA8F,0X3500FAE9);
	set_func_flags(0X3500FA8F,0x5454);
	set_frame_size(0X3500FA8F, 0X2C, 4, 0XC);
	define_local_var(0X3500FA8F, 0X3500FAE9, "[bp-0X18]", "ms_exc");
	add_func    (0X3500FB11,0X3500FB53);
	set_func_flags(0X3500FB11,0x545c);
	SetType(0X3500FB11, "void (__cdecl **__cdecl get_global_action_nolock(int))(int);");
	set_frame_size(0X3500FB11, 0, 4, 0);
	add_func    (0X3500FB53,0X3500FB7B);
	set_func_flags(0X3500FB53,0x545c);
	SetType(0X3500FB53, "struct __crt_signal_action_t *__cdecl siglookup(int, struct __crt_signal_action_t *const);");
	set_frame_size(0X3500FB53, 0, 4, 0);
	add_func    (0X3500FB7B,0X3500FB92);
	set_func_flags(0X3500FB7B,0x5454);
	set_frame_size(0X3500FB7B, 0X2, 4, 0);
	add_func    (0X3500FB92,0X3500FBCD);
	set_func_flags(0X3500FB92,0x5454);
	set_frame_size(0X3500FB92, 0, 4, 0);
	add_func    (0X3500FBCD,0X3500FBD6);
	set_func_flags(0X3500FBCD,0x5444);
	SetType(0X3500FBCD, "int *__cdecl __fpecode();");
	set_frame_size(0X3500FBCD, 0, 0, 0);
	add_func    (0X3500FBD6,0X3500FDDE);
	set_func_flags(0X3500FBD6,0x5454);
	SetType(0X3500FBD6, "int __cdecl raise(int Signal);");
	set_frame_size(0X3500FBD6, 0X4C, 4, 0);
	define_local_var(0X3500FBD6, 0X3500FDDE, "[bp-0X18]", "ms_exc");
	define_local_var(0X3500FBD6, 0X3500FDDE, "[bp+0X8]", "Signal");
	add_func    (0X3500FDDE,0X3500FE89);
	set_func_flags(0X3500FDDE,0x545c);
	set_frame_size(0X3500FDDE, 0, 4, 0);
	add_func    (0X3500FE89,0X3501018B);
	set_func_flags(0X3500FE89,0x5454);
	SetType(0X3500FE89, "unsigned int __cdecl _control87(unsigned int NewValue, unsigned int Mask);");
	set_frame_size(0X3500FE89, 0X10, 4, 0);
	define_local_var(0X3500FE89, 0X3501018B, "[bp+0X8]", "NewValue");
	define_local_var(0X3500FE89, 0X3501018B, "[bp+0XC]", "Mask");
	add_func    (0X3501018B,0X35010224);
	set_func_flags(0X3501018B,0x545c);
	set_frame_size(0X3501018B, 0, 4, 0);
	add_func    (0X35010224,0X3501031E);
	set_func_flags(0X35010224,0x5454);
	SetType(0X35010224, "int __cdecl _mbtowc_l(wchar_t *DstCh, const char *SrcCh, size_t SrcSizeInBytes, _locale_t Locale);");
	set_frame_size(0X35010224, 0X18, 4, 0);
	define_local_var(0X35010224, 0X3501031E, "[bp-0XC]", "Locale");
	define_local_var(0X35010224, 0X3501031E, "[bp+0X8]", "lpWideCharStr");
	define_local_var(0X35010224, 0X3501031E, "[bp+0XC]", "lpMultiByteStr");
	define_local_var(0X35010224, 0X3501031E, "[bp+0X10]", "SrcSizeInBytes");
	add_func    (0X3501031E,0X35010338);
	set_func_flags(0X3501031E,0x5454);
	SetType(0X3501031E, "int __cdecl mbtowc(wchar_t *DstCh, const char *SrcCh, size_t SrcSizeInBytes);");
	set_frame_size(0X3501031E, 0, 4, 0);
	define_local_var(0X3501031E, 0X35010338, "[bp+0X8]", "DstCh");
	define_local_var(0X3501031E, 0X35010338, "[bp+0XC]", "SrcCh");
	define_local_var(0X3501031E, 0X35010338, "[bp+0X10]", "SrcSizeInBytes");
	add_func    (0X35010338,0X3501035E);
	set_func_flags(0X35010338,0x5454);
	SetType(0X35010338, "int __cdecl _fileno(FILE *Stream);");
	set_frame_size(0X35010338, 0, 4, 0);
	define_local_var(0X35010338, 0X3501035E, "[bp+0X8]", "Stream");
	add_func    (0X3501035E,0X35010426);
	set_func_flags(0X3501035E,0x5444);
	set_frame_size(0X3501035E, 0X4, 0, 0);
	add_func    (0X35010426,0X35010472);
	set_func_flags(0X35010426,0x5444);
	set_frame_size(0X35010426, 0X4, 0, 0);
	add_func    (0X35010472,0X35010486);
	set_func_flags(0X35010472,0x5454);
	SetType(0X35010472, "void __cdecl _lock_file(FILE *Stream);");
	set_frame_size(0X35010472, 0, 4, 0);
	define_local_var(0X35010472, 0X35010486, "[bp+0X8]", "Stream");
	add_func    (0X35010486,0X3501049A);
	set_func_flags(0X35010486,0x5454);
	SetType(0X35010486, "void __cdecl _unlock_file(FILE *Stream);");
	set_frame_size(0X35010486, 0, 4, 0);
	define_local_var(0X35010486, 0X3501049A, "[bp+0X8]", "Stream");
	add_func    (0X3501049A,0X350104B6);
	set_func_flags(0X3501049A,0x5454);
	SetType(0X3501049A, "size_t __cdecl __strncnt(const char *String, size_t Count);");
	set_frame_size(0X3501049A, 0, 4, 0);
	define_local_var(0X3501049A, 0X350104B6, "[bp+0X8]", "String");
	define_local_var(0X3501049A, 0X350104B6, "[bp+0XC]", "Count");
	add_func    (0X350104B6,0X35010572);
	set_func_flags(0X350104B6,0x545c);
	SetType(0X350104B6, "int __cdecl GetTableIndexFromLocaleName(const wchar_t *);");
	set_frame_size(0X350104B6, 0X1C, 4, 0);
	add_func    (0X35010572,0X3501059E);
	set_func_flags(0X35010572,0x5454);
	SetType(0X35010572, "int __cdecl __acrt_DownlevelLocaleNameToLCID(wchar_t *);");
	set_frame_size(0X35010572, 0, 4, 0);
	add_func    (0X350105A0,0X35010636);
	set_func_flags(0X350105A0,0x5454);
	SetType(0X350105A0, "void __cdecl shortsort(char *, char *, unsigned int, int (__cdecl *)(const void *, const void *));");
	set_frame_size(0X350105A0, 0X8, 4, 0);
	add_func    (0X35010640,0X35010679);
	set_func_flags(0X35010640,0x545c);
	SetType(0X35010640, "void __cdecl swap(char *, char *, unsigned int);");
	set_frame_size(0X35010640, 0X4, 4, 0);
	add_func    (0X35010680,0X35010A1A);
	set_func_flags(0X35010680,0x5454);
	SetType(0X35010680, "void __cdecl qsort(void *Base, size_t NumOfElements, size_t SizeOfElements, _CoreCrtNonSecureSearchSortCompareFunction CompareFunction);");
	set_frame_size(0X35010680, 0X124, 4, 0);
	define_local_var(0X35010680, 0X35010A1A, "[bp+0X8]", "Base");
	define_local_var(0X35010680, 0X35010A1A, "[bp+0XC]", "NumOfElements");
	define_local_var(0X35010680, 0X35010A1A, "[bp+0X10]", "SizeOfElements");
	define_local_var(0X35010680, 0X35010A1A, "[bp+0X14]", "CompareFunction");
	add_func    (0X35010A20,0X35010A60);
	set_func_flags(0X35010A20,0x5454);
	SetType(0X35010A20, "char *__cdecl strpbrk(const char *Str, const char *Control);");
	set_frame_size(0X35010A20, 0X4, 4, 0);
	define_local_var(0X35010A20, 0X35010A60, "[bp+0X28]", "Str");
	define_local_var(0X35010A20, 0X35010A60, "[bp+0X2C]", "Control");
	add_func    (0X35010A60,0X35010A6F);
	set_func_flags(0X35010A60,0x544c);
	SetType(0X35010A60, "int __cdecl initialize_multibyte();");
	set_frame_size(0X35010A60, 0, 0, 0);
	add_func    (0X35010A6F,0X35010AA2);
	set_func_flags(0X35010A6F,0x5454);
	SetType(0X35010A6F, "size_t __cdecl _msize(void *Block);");
	set_frame_size(0X35010A6F, 0, 4, 0);
	define_local_var(0X35010A6F, 0X35010AA2, "[bp+0X8]", "lpMem");
	add_func    (0X35010AA2,0X35010B0B);
	set_func_flags(0X35010AA2,0x5454);
	SetType(0X35010AA2, "void *__cdecl _realloc_base(void *Block, size_t Size);");
	set_frame_size(0X35010AA2, 0X4, 4, 0);
	define_local_var(0X35010AA2, 0X35010B0B, "[bp+0X8]", "lpMem");
	define_local_var(0X35010AA2, 0X35010B0B, "[bp+0XC]", "dwBytes");
	add_func    (0X35010B0B,0X35010B61);
	set_func_flags(0X35010B0B,0x5454);
	SetType(0X35010B0B, "int __cdecl _isatty(int FileHandle);");
	set_frame_size(0X35010B0B, 0, 4, 0);
	define_local_var(0X35010B0B, 0X35010B61, "[bp+0X8]", "FileHandle");
	add_func    (0X35010B61,0X35010BC7);
	set_func_flags(0X35010B61,0x5454);
	SetType(0X35010B61, "int __cdecl __acrt_stdio_flush_nolock(FILE *Stream);");
	set_frame_size(0X35010B61, 0X4, 4, 0);
	define_local_var(0X35010B61, 0X35010BC7, "[bp+0X8]", "Stream");
	add_func    (0X35010BC7,0X35010C0E);
	set_func_flags(0X35010BC7,0x5454);
	SetType(0X35010BC7, "int __cdecl _fflush_nolock(FILE *Stream);");
	set_frame_size(0X35010BC7, 0X4, 4, 0);
	define_local_var(0X35010BC7, 0X35010C0E, "[bp+0X8]", "Stream");
	add_func    (0X35010C0E,0X35010C17);
	set_func_flags(0X35010C0E,0x5444);
	SetType(0X35010C0E, "int __cdecl _flushall();");
	set_frame_size(0X35010C0E, 0, 0, 0);
	add_func    (0X35010C17,0X35010CEF);
	set_func_flags(0X35010C17,0x545c);
	set_frame_size(0X35010C17, 0X3C, 4, 0);
	define_local_var(0X35010C17, 0X35010CEF, "[bp-0X28]", "Stream");
	define_local_var(0X35010C17, 0X35010CEF, "[bp-0X18]", "ms_exc");
	add_func    (0X35010CEF,0X35010D65);
	set_func_flags(0X35010CEF,0x5454);
	set_frame_size(0X35010CEF, 0X28, 4, 0);
	define_local_var(0X35010CEF, 0X35010D65, "[bp-0X18]", "ms_exc");
	add_func    (0X35010D65,0X35010D78);
	set_func_flags(0X35010D65,0x5454);
	set_frame_size(0X35010D65, 0X4, 4, 0);
	add_func    (0X35010D78,0X35010DA4);
	set_func_flags(0X35010D78,0x5454);
	set_frame_size(0X35010D78, 0X8, 4, 0);
	add_func    (0X35010DA4,0X35010DFF);
	set_func_flags(0X35010DA4,0x5454);
	set_frame_size(0X35010DA4, 0XC, 4, 0);
	add_func    (0X35010DFF,0X35010E11);
	set_func_flags(0X35010DFF,0x5454);
	set_frame_size(0X35010DFF, 0X4, 4, 0);
	add_func    (0X35010E11,0X35010EB1);
	set_func_flags(0X35010E11,0x5454);
	SetType(0X35010E11, "int __cdecl _fcloseall();");
	set_frame_size(0X35010E11, 0X30, 4, 0);
	define_local_var(0X35010E11, 0X35010EB1, "[bp-0X18]", "ms_exc");
	add_func    (0X35010EB1,0X35010EEF);
	set_func_flags(0X35010EB1,0x5454);
	set_frame_size(0X35010EB1, 0X8, 4, 0);
	add_func    (0X35010EEF,0X35010F87);
	set_func_flags(0X35010EEF,0x5454);
	set_frame_size(0X35010EEF, 0X2C, 4, 0XC);
	define_local_var(0X35010EEF, 0X35010F87, "[bp-0X18]", "ms_exc");
	add_func    (0X35010FAF,0X3501101E);
	set_func_flags(0X35010FAF,0x5454);
	SetType(0X35010FAF, "int __cdecl _commit(int FileHandle);");
	set_frame_size(0X35010FAF, 0X8, 4, 0);
	define_local_var(0X35010FAF, 0X3501101E, "[bp+0X8]", "FileHandle");
	add_func    (0X3501101E,0X350111D1);
	set_func_flags(0X3501101E,0x545c);
	set_frame_size(0X3501101E, 0X44, 4, 0);
	define_local_var(0X3501101E, 0X350111D1, "[bp-0X38]", "CodePage");
	define_local_var(0X3501101E, 0X350111D1, "[bp-0X28]", "hFile");
	define_local_var(0X3501101E, 0X350111D1, "[bp-0X20]", "NumberOfBytesWritten");
	define_local_var(0X3501101E, 0X350111D1, "[bp-0X1C]", "Buffer");
	define_local_var(0X3501101E, 0X350111D1, "[bp-0X18]", "WideCharStr");
	define_local_var(0X3501101E, 0X350111D1, "[bp-0X14]", "MultiByteStr");
	define_local_var(0X3501101E, 0X350111D1, "[bp+0X10]", "SrcCh");
	add_func    (0X350111D1,0X3501123E);
	set_func_flags(0X350111D1,0x545c);
	set_frame_size(0X350111D1, 0X10, 4, 0);
	add_func    (0X3501123E,0X350112B4);
	set_func_flags(0X3501123E,0x545c);
	SetType(0X3501123E, "bool __cdecl write_requires_double_translation_nolock(int FileHandle);");
	set_frame_size(0X3501123E, 0X8, 4, 0);
	define_local_var(0X3501123E, 0X350112B4, "[bp-0X4]", "Mode");
	define_local_var(0X3501123E, 0X350112B4, "[bp+0X8]", "FileHandle");
	add_func    (0X350112B4,0X35011393);
	set_func_flags(0X350112B4,0x545c);
	set_frame_size(0X350112B4, 0X141C, 4, 0);
	define_local_var(0X350112B4, 0X35011393, "[bp-0X140C]", "NumberOfBytesWritten");
	define_local_var(0X350112B4, 0X35011393, "[bp-0X1404]", "Buffer");
	add_func    (0X35011393,0X35011481);
	set_func_flags(0X35011393,0x545c);
	set_frame_size(0X35011393, 0X141C, 4, 0);
	define_local_var(0X35011393, 0X35011481, "[bp-0X140C]", "NumberOfBytesWritten");
	define_local_var(0X35011393, 0X35011481, "[bp-0X1404]", "Buffer");
	add_func    (0X35011481,0X350115AE);
	set_func_flags(0X35011481,0x545c);
	set_frame_size(0X35011481, 0X1424, 4, 0);
	define_local_var(0X35011481, 0X350115AE, "[bp-0X1414]", "hFile");
	define_local_var(0X35011481, 0X350115AE, "[bp-0X1410]", "NumberOfBytesWritten");
	define_local_var(0X35011481, 0X350115AE, "[bp-0X1408]", "MultiByteStr");
	define_local_var(0X35011481, 0X350115AE, "[bp-0X6B0]", "WideCharStr");
	add_func    (0X350115AE,0X35011699);
	set_func_flags(0X350115AE,0x5454);
	SetType(0X350115AE, "int __cdecl _write(int FileHandle, const void *Buf, unsigned int MaxCharCount);");
	set_frame_size(0X350115AE, 0X34, 4, 0);
	define_local_var(0X350115AE, 0X35011699, "[bp-0X18]", "ms_exc");
	define_local_var(0X350115AE, 0X35011699, "[bp+0X8]", "FileHandle");
	define_local_var(0X350115AE, 0X35011699, "[bp+0XC]", "Buf");
	define_local_var(0X350115AE, 0X35011699, "[bp+0X10]", "MaxCharCount");
	add_func    (0X35011699,0X350118A5);
	set_func_flags(0X35011699,0x5454);
	SetType(0X35011699, "int __cdecl _write_nolock(int FileHandle, LPCVOID lpBuffer, int);");
	set_frame_size(0X35011699, 0X38, 4, 0);
	define_local_var(0X35011699, 0X350118A5, "[bp-0X10]", "NumberOfBytesWritten");
	define_local_var(0X35011699, 0X350118A5, "[bp-0X8]", "nNumberOfBytesToWrite");
	define_local_var(0X35011699, 0X350118A5, "[bp+0X8]", "FileHandle");
	define_local_var(0X35011699, 0X350118A5, "[bp+0XC]", "lpBuffer");
	add_func    (0X350118B0,0X35011948);
	set_func_flags(0X350118B0,0x5444);
	SetType(0X350118B0, "double __cdecl log10(double X);");
	set_frame_size(0X350118B0, 0X1C, 0, 0);
	define_local_var(0X350118B0, 0X35011948, "[bp+0X10]", "X");
	add_func    (0X35011948,0X35011A00);
	set_func_flags(0X35011948,0x544c);
	set_frame_size(0X35011948, 0, 0, 0);
	add_func    (0X35011A00,0X35011B1D);
	set_func_flags(0X35011A00,0x5444);
	SetType(0X35011A00, "double __cdecl ceil(double X);");
	set_frame_size(0X35011A00, 0X10, 0, 0);
	define_local_var(0X35011A00, 0X35011B1D, "[bp+0X4]", "X");
	add_func    (0X35011B1D,0X35011B9B);
	set_func_flags(0X35011B1D,0x545c);
	SetType(0X35011B1D, "int __cdecl common_lseek_nolock___int64_(int FileHandle, LARGE_INTEGER liDistanceToMove, DWORD dwMoveMethod);");
	set_frame_size(0X35011B1D, 0X10, 4, 0);
	define_local_var(0X35011B1D, 0X35011B9B, "[bp-0X8]", "NewFilePointer");
	define_local_var(0X35011B1D, 0X35011B9B, "[bp+0X8]", "FileHandle");
	define_local_var(0X35011B1D, 0X35011B9B, "[bp+0XC]", "liDistanceToMove");
	define_local_var(0X35011B1D, 0X35011B9B, "[bp+0X14]", "dwMoveMethod");
	add_func    (0X35011B9B,0X35011BB6);
	set_func_flags(0X35011B9B,0x5454);
	SetType(0X35011B9B, "int __cdecl _lseeki64_nolock(int FileHandle, LARGE_INTEGER liDistanceToMove, DWORD dwMoveMethod);");
	set_frame_size(0X35011B9B, 0, 4, 0);
	define_local_var(0X35011B9B, 0X35011BB6, "[bp+0X8]", "FileHandle");
	define_local_var(0X35011B9B, 0X35011BB6, "[bp+0XC]", "liDistanceToMove");
	define_local_var(0X35011B9B, 0X35011BB6, "[bp+0X14]", "dwMoveMethod");
	add_func    (0X35011BB6,0X35011C2C);
	set_func_flags(0X35011BB6,0x5454);
	SetType(0X35011BB6, "int __cdecl _fclose_nolock(FILE *Stream);");
	set_frame_size(0X35011BB6, 0X4, 4, 0);
	define_local_var(0X35011BB6, 0X35011C2C, "[bp+0X8]", "Stream");
	add_func    (0X35011C2C,0X35011CAC);
	set_func_flags(0X35011C2C,0x5454);
	SetType(0X35011C2C, "int __cdecl fclose(FILE *Stream);");
	set_frame_size(0X35011C2C, 0X30, 4, 0);
	define_local_var(0X35011C2C, 0X35011CAC, "[bp-0X18]", "ms_exc");
	define_local_var(0X35011C2C, 0X35011CAC, "[bp+0X8]", "Stream");
	add_func    (0X35011CB0,0X35011D11);
	set_func_flags(0X35011CB0,0x5454);
	set_frame_size(0X35011CB0, 0XC, 4, 0);
	add_func    (0X35011D11,0X35011D56);
	set_func_flags(0X35011D11,0x5454);
	SetType(0X35011D11, "wint_t __cdecl _putwch_nolock(wchar_t Character);");
	set_frame_size(0X35011D11, 0X4, 4, 0);
	define_local_var(0X35011D11, 0X35011D56, "[bp+0]", "NumberOfCharsWritten");
	define_local_var(0X35011D11, 0X35011D56, "[bp+0XC]", "Buffer");
	add_func    (0X35011D70,0X35011D88);
	set_func_flags(0X35011D70,0x5c54);
	set_frame_size(0X35011D70, 0X8, 4, 0);
	add_func    (0X35012000,0X35012068);
	set_func_flags(0X35012000,0x544c);
	set_frame_size(0X35012000, 0, 0, 0);
	add_func    (0X35012068,0X3501207A);
	set_func_flags(0X35012068,0x5444);
	set_frame_size(0X35012068, 0, 0, 0);
	add_func    (0X3501207A,0X35012094);
	set_func_flags(0X3501207A,0x5444);
	set_frame_size(0X3501207A, 0, 0, 0);
	add_func    (0X35012094,0X350120A4);
	set_func_flags(0X35012094,0x544c);
	set_frame_size(0X35012094, 0, 0, 0);
	add_func    (0X350120A4,0X350123C6);
	set_func_flags(0X350120A4,0x544c);
	set_frame_size(0X350120A4, 0X8C, 0, 0);
	add_func    (0X350123D0,0X350123ED);
	set_func_flags(0X350123D0,0x5444);
	set_frame_size(0X350123D0, 0, 0, 0);
	add_func    (0X350123ED,0X350123F4);
	set_func_flags(0X350123ED,0x5444);
	set_frame_size(0X350123ED, 0, 0, 0);
	add_func    (0X35012400,0X35012415);
	set_func_flags(0X35012400,0x5444);
	set_frame_size(0X35012400, 0, 0, 0);
	add_func    (0X35012415,0X3501242C);
	set_func_flags(0X35012415,0x5444);
	set_frame_size(0X35012415, 0, 0, 0);
	add_func    (0X3501242C,0X35012445);
	set_func_flags(0X3501242C,0x5444);
	set_frame_size(0X3501242C, 0, 0, 0);
	add_func    (0X35012445,0X35012488);
	set_func_flags(0X35012445,0x5444);
	set_frame_size(0X35012445, 0, 0, 0);
	add_func    (0X35012488,0X3501249E);
	set_func_flags(0X35012488,0x5444);
	set_frame_size(0X35012488, 0, 0, 0);
	add_func    (0X350124D5,0X3501258C);
	set_func_flags(0X350124D5,0x5444);
	set_frame_size(0X350124D5, 0X8, 0, 0);
	add_func    (0X35012590,0X350125A7);
	set_func_flags(0X35012590,0x1454);
	set_frame_size(0X35012590, 0X20, 4, 0);
	add_func    (0X350125A7,0X350125E3);
	set_func_flags(0X350125A7,0x5454);
	set_frame_size(0X350125A7, 0X20, 4, 0);
	add_func    (0X350125E3,0X350127FB);
	set_func_flags(0X350125E3,0x5454);
	set_frame_size(0X350125E3, 0X2C, 4, 0);
	add_func    (0X350127FB,0X350128B4);
	set_func_flags(0X350127FB,0x5454);
	SetType(0X350127FB, "int __cdecl _ceil_default(double);");
	set_frame_size(0X350127FB, 0X1C, 4, 0);
	add_func    (0X350128B4,0X35012936);
	set_func_flags(0X350128B4,0x5454);
	set_frame_size(0X350128B4, 0X2C, 4, 0XC);
	define_local_var(0X350128B4, 0X35012936, "[bp-0X18]", "ms_exc");
	add_func    (0X35012936,0X3501295E);
	set_func_flags(0X35012936,0x5410);
	set_frame_size(0X35012936, 0XC, 4, 0);
	add_func    (0X3501295E,0X350129DD);
	set_func_flags(0X3501295E,0x5410);
	set_frame_size(0X3501295E, 0X8, 4, 0);
	add_func    (0X350129DD,0X35012A79);
	set_func_flags(0X350129DD,0x5454);
	SetType(0X350129DD, "int __cdecl _close_nolock(int FileHandle);");
	set_frame_size(0X350129DD, 0X8, 4, 0);
	define_local_var(0X350129DD, 0X35012A79, "[bp+0X8]", "FileHandle");
	add_func    (0X35012A79,0X35012AB4);
	set_func_flags(0X35012A79,0x5454);
	set_frame_size(0X35012A79, 0, 4, 0);
	add_func    (0X35012AB4,0X35012AD3);
	set_func_flags(0X35012AB4,0x544c);
	SetType(0X35012AB4, "void __cdecl __dcrt_lowio_initialize_console_output();");
	set_frame_size(0X35012AB4, 0, 0, 0);
	add_func    (0X35012AD3,0X35012AEA);
	set_func_flags(0X35012AD3,0x5444);
	set_func_cmt(0X35012AD3,	"Microsoft VisualC universal runtime\nMicrosoft VisualC universal runtime\nMicrosoft VisualC universal runtime", 1);
	set_frame_size(0X35012AD3, 0, 0, 0);
	add_func    (0X35012AEA,0X35012B54);
	set_func_flags(0X35012AEA,0x5454);
	SetType(0X35012AEA, "int __cdecl _d_inttype(double);");
	set_frame_size(0X35012AEA, 0X8, 4, 0);
	define_local_var(0X35012AEA, 0X35012B54, "[bp-0X8]", "X");
	add_func    (0X35012B54,0X35012C7F);
	set_func_flags(0X35012B54,0x5454);
	SetType(0X35012B54, "int __cdecl _powhlp(double, double, int);");
	set_frame_size(0X35012B54, 0, 4, 0);
	add_func    (0X35012C7F,0X35012D8A);
	set_func_flags(0X35012C7F,0x5c44);
	set_frame_size(0X35012C7F, 0XC, 0, 0);
	add_func    (0X35012D8A,0X35012DA0);
	set_func_flags(0X35012D8A,0x5454);
	SetType(0X35012D8A, "int __cdecl _frnd(double);");
	set_frame_size(0X35012D8A, 0X8, 4, 0);
	add_func    (0X35012DA0,0X35012DD4);
	set_func_flags(0X35012DA0,0x5454);
	set_frame_size(0X35012DA0, 0, 4, 0);
	add_func    (0X35012DD4,0X35012EA2);
	set_func_flags(0X35012DD4,0x5c44);
	set_frame_size(0X35012DD4, 0X2C, 0, 0);
	add_func    (0X35012EA2,0X35013082);
	set_func_flags(0X35012EA2,0x5454);
	set_frame_size(0X35012EA2, 0X18, 4, 0);
	add_func    (0X35013082,0X350130A5);
	set_func_flags(0X35013082,0x5454);
	SetType(0X35013082, "int __cdecl _raise_exc(ULONG_PTR Arguments, int, int, int, int, int);");
	set_frame_size(0X35013082, 0, 4, 0);
	define_local_var(0X35013082, 0X350130A5, "[bp+0X8]", "Arguments");
	add_func    (0X350130A5,0X35013396);
	set_func_flags(0X350130A5,0x5454);
	SetType(0X350130A5, "int __cdecl _raise_exc_ex(ULONG_PTR Arguments, int, int, int, int, int, int);");
	set_frame_size(0X350130A5, 0X8, 4, 0);
	define_local_var(0X350130A5, 0X35013396, "[bp+0X8]", "Arguments");
	add_func    (0X35013396,0X350133C5);
	set_func_flags(0X35013396,0x5454);
	set_frame_size(0X35013396, 0, 4, 0);
	add_func    (0X350133C5,0X35013467);
	set_func_flags(0X350133C5,0x5454);
	SetType(0X350133C5, "int __cdecl _umatherr(int, int, int, int, int, int, double, int);");
	set_frame_size(0X350133C5, 0X20, 4, 0);
	add_func    (0X35013467,0X3501353B);
	set_func_flags(0X35013467,0x5454);
	SetType(0X35013467, "int __cdecl _decomp(double, int);");
	set_frame_size(0X35013467, 0, 4, 0);
	add_func    (0X3501353B,0X3501356A);
	set_func_flags(0X3501353B,0x5454);
	set_frame_size(0X3501353B, 0X8, 4, 0);
	add_func    (0X3501356A,0X350135C8);
	set_func_flags(0X3501356A,0x5454);
	set_frame_size(0X3501356A, 0, 4, 0);
	add_func    (0X350135C8,0X3501366C);
	set_func_flags(0X350135C8,0x5454);
	SetType(0X350135C8, "int __cdecl _fpclass(double X);");
	set_frame_size(0X350135C8, 0, 4, 0);
	define_local_var(0X350135C8, 0X3501366C, "[bp+0X10]", "X");
	add_func    (0X35013680,0X350136C3);
	set_func_flags(0X35013680,0x5454);
	set_frame_size(0X35013680, 0XC, 4, 0);
	add_func    (0X350136D0,0X3501378A);
	set_func_flags(0X350136D0,0x5454);
	set_frame_size(0X350136D0, 0X28, 4, 0);
	define_local_var(0X350136D0, 0X3501378A, "[bp-0X18]", "ms_exc");
	add_func    (0X35013790,0X350137C1);
	set_func_flags(0X35013790,0x5454);
	set_frame_size(0X35013790, 0, 4, 0);
	add_func    (0X350137D0,0X35013865);
	set_func_flags(0X350137D0,0x5444);
	set_frame_size(0X350137D0, 0X4, 0, 0X10);
	add_func    (0X35013870,0X350138B9);
	set_func_flags(0X35013870,0x5444);
	set_frame_size(0X35013870, 0, 0, 0);
	add_func    (0X350138B9,0X350138CA);
	set_func_flags(0X350138B9,0x5444);
	set_frame_size(0X350138B9, 0, 0, 0);
	add_func    (0X350138D0,0X350138E6);
	set_func_flags(0X350138D0,0x5444);
	set_frame_size(0X350138D0, 0, 0, 0);
	add_func    (0X350138E6,0X350138FC);
	set_func_flags(0X350138E6,0x5444);
	set_frame_size(0X350138E6, 0, 0, 0);
	add_func    (0X35013900,0X350139DF);
	set_func_flags(0X35013900,0x5444);
	set_frame_size(0X35013900, 0XC, 0, 0X10);
	add_func    (0X350139E0,0X350139FF);
	set_func_flags(0X350139E0,0x5444);
	set_frame_size(0X350139E0, 0, 0, 0);
	add_func    (0X35013A00,0X35013A1F);
	set_func_flags(0X35013A00,0x5444);
	set_frame_size(0X35013A00, 0, 0, 0);
	add_func    (0X35013A20,0X35013AD5);
	set_func_flags(0X35013A20,0x5c44);
	set_frame_size(0X35013A20, 0X24, 0, 0);
	add_func    (0X35013AE0,0X35014054);
	set_func_flags(0X35013AE0,0x5444);
	SetType(0X35013AE0, "void *__cdecl memmove_0(void *, const void *Src, size_t Size);");
	set_frame_size(0X35013AE0, 0X8, 0, 0);
	define_local_var(0X35013AE0, 0X35014054, "[bp+0X8]", "Src");
	define_local_var(0X35013AE0, 0X35014054, "[bp+0XC]", "Size");
	add_func    (0X35014060,0X35014197);
	set_func_flags(0X35014060,0x5454);
	SetType(0X35014060, "char *__cdecl strrchr(const char *Str, int Ch);");
	set_frame_size(0X35014060, 0X4, 4, 0);
	define_local_var(0X35014060, 0X35014197, "[bp+0X8]", "Str");
}

//------------------------------------------------------------------------
// Information about functions

static Functions(void) {

	Functions_0();
}

//------------------------------------------------------------------------
// Information about segment registers

static SegRegs(void) {
	split_sreg_range(0X35001000,"es",0,3);
	split_sreg_range(0X35015000,"es",0,3);
	split_sreg_range(0X35015138,"es",0,3);
	split_sreg_range(0X3501B000,"es",0,3);
	split_sreg_range(0X35028000,"es",0,3);
	split_sreg_range(0X35001000,"ss",0,3);
	split_sreg_range(0X35015000,"ss",0,3);
	split_sreg_range(0X35015138,"ss",0,3);
	split_sreg_range(0X3501B000,"ss",0,3);
	split_sreg_range(0X35028000,"ss",0,3);
	split_sreg_range(0X35001000,"ds",0X3,3);
	split_sreg_range(0X35009223,"ds",0X3,3);
	split_sreg_range(0X35015000,"ds",0X3,3);
	split_sreg_range(0X35015138,"ds",0X3,3);
	split_sreg_range(0X3501B000,"ds",0X3,3);
	split_sreg_range(0X35028000,"ds",0X3,3);
	split_sreg_range(0X35001000,"fs",0,3);
	split_sreg_range(0X35015000,"fs",0,3);
	split_sreg_range(0X35015138,"fs",0,3);
	split_sreg_range(0X3501B000,"fs",0,3);
	split_sreg_range(0X35028000,"fs",0,3);
	split_sreg_range(0X35001000,"gs",0,3);
	split_sreg_range(0X35015000,"gs",0,3);
	split_sreg_range(0X35015138,"gs",0,3);
	split_sreg_range(0X3501B000,"gs",0,3);
	split_sreg_range(0X35028000,"gs",0,3);
}

//------------------------------------------------------------------------
// Information about all patched bytes:

static Patches(void) {
}

//------------------------------------------------------------------------
// Call all byte feature functions:

static Bytes(void) {
	Bytes_0();
	Bytes_1();
	Bytes_2();
	Bytes_3();
        end_type_updating(UTP_STRUCT);
}

// End of file.
